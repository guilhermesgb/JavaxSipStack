//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:lib/guava-14.0.1-sources.jar!com/google/common/eventbus/EventBus.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/base/Throwables.h"
#include "com/google/common/cache/CacheBuilder.h"
#include "com/google/common/cache/CacheLoader.h"
#include "com/google/common/cache/LoadingCache.h"
#include "com/google/common/collect/HashMultimap.h"
#include "com/google/common/collect/Multimap.h"
#include "com/google/common/collect/SetMultimap.h"
#include "com/google/common/eventbus/AnnotatedHandlerFinder.h"
#include "com/google/common/eventbus/DeadEvent.h"
#include "com/google/common/eventbus/EventBus.h"
#include "com/google/common/eventbus/EventHandler.h"
#include "com/google/common/eventbus/HandlerFindingStrategy.h"
#include "com/google/common/reflect/TypeToken.h"
#include "com/google/common/util/concurrent/UncheckedExecutionException.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/ThreadLocal.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/util/Collection.h"
#include "java/util/LinkedList.h"
#include "java/util/Map.h"
#include "java/util/Queue.h"
#include "java/util/Set.h"
#include "java/util/concurrent/locks/Lock.h"
#include "java/util/concurrent/locks/ReadWriteLock.h"
#include "java/util/concurrent/locks/ReentrantReadWriteLock.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonEventbusEventBus () {
 @public
  id<ComGoogleCommonCollectSetMultimap> handlersByType_;
  id<JavaUtilConcurrentLocksReadWriteLock> handlersByTypeLock_;
  JavaUtilLoggingLogger *logger_;
  id<ComGoogleCommonEventbusHandlerFindingStrategy> finder_;
  JavaLangThreadLocal *eventsToDispatch_;
  JavaLangThreadLocal *isDispatching_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonEventbusEventBus, handlersByType_, id<ComGoogleCommonCollectSetMultimap>)
J2OBJC_FIELD_SETTER(ComGoogleCommonEventbusEventBus, handlersByTypeLock_, id<JavaUtilConcurrentLocksReadWriteLock>)
J2OBJC_FIELD_SETTER(ComGoogleCommonEventbusEventBus, logger_, JavaUtilLoggingLogger *)
J2OBJC_FIELD_SETTER(ComGoogleCommonEventbusEventBus, finder_, id<ComGoogleCommonEventbusHandlerFindingStrategy>)
J2OBJC_FIELD_SETTER(ComGoogleCommonEventbusEventBus, eventsToDispatch_, JavaLangThreadLocal *)
J2OBJC_FIELD_SETTER(ComGoogleCommonEventbusEventBus, isDispatching_, JavaLangThreadLocal *)

inline id<ComGoogleCommonCacheLoadingCache> ComGoogleCommonEventbusEventBus_get_flattenHierarchyCache();
static id<ComGoogleCommonCacheLoadingCache> ComGoogleCommonEventbusEventBus_flattenHierarchyCache;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonEventbusEventBus, flattenHierarchyCache, id<ComGoogleCommonCacheLoadingCache>)

@interface ComGoogleCommonEventbusEventBus_1 : ComGoogleCommonCacheCacheLoader

- (instancetype)init;

- (id<JavaUtilSet>)load__WithId:(IOSClass *)concreteClass;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonEventbusEventBus_1)

__attribute__((unused)) static void ComGoogleCommonEventbusEventBus_1_init(ComGoogleCommonEventbusEventBus_1 *self);

__attribute__((unused)) static ComGoogleCommonEventbusEventBus_1 *new_ComGoogleCommonEventbusEventBus_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonEventbusEventBus_1 *create_ComGoogleCommonEventbusEventBus_1_init();

@interface ComGoogleCommonEventbusEventBus_2 : JavaLangThreadLocal

- (instancetype)init;

- (id<JavaUtilQueue>)initialValue OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilQueue>)get;

- (id<JavaUtilQueue>)childValueWithId:(id<JavaUtilQueue>)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonEventbusEventBus_2)

__attribute__((unused)) static void ComGoogleCommonEventbusEventBus_2_init(ComGoogleCommonEventbusEventBus_2 *self);

__attribute__((unused)) static ComGoogleCommonEventbusEventBus_2 *new_ComGoogleCommonEventbusEventBus_2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonEventbusEventBus_2 *create_ComGoogleCommonEventbusEventBus_2_init();

@interface ComGoogleCommonEventbusEventBus_3 : JavaLangThreadLocal

- (instancetype)init;

- (JavaLangBoolean *)initialValue OBJC_METHOD_FAMILY_NONE;

- (JavaLangBoolean *)get;

- (JavaLangBoolean *)childValueWithId:(JavaLangBoolean *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonEventbusEventBus_3)

__attribute__((unused)) static void ComGoogleCommonEventbusEventBus_3_init(ComGoogleCommonEventbusEventBus_3 *self);

__attribute__((unused)) static ComGoogleCommonEventbusEventBus_3 *new_ComGoogleCommonEventbusEventBus_3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonEventbusEventBus_3 *create_ComGoogleCommonEventbusEventBus_3_init();

#line 1 "com/google/common/eventbus/EventBus.java"

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonEventbusEventBus)


#line 113
@implementation ComGoogleCommonEventbusEventBus

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 173
- (instancetype)init {
  ComGoogleCommonEventbusEventBus_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 183
- (instancetype)initWithNSString:(NSString *)identifier {
  ComGoogleCommonEventbusEventBus_initWithNSString_(self, identifier);
  return self;
}


#line 195
- (void)register__WithId:(id)object {
  id<ComGoogleCommonCollectMultimap> methodsInListener =
#line 197
  [((id<ComGoogleCommonEventbusHandlerFindingStrategy>) nil_chk(finder_)) findAllHandlersWithId:object];
  [((id<JavaUtilConcurrentLocksLock>) nil_chk([((id<JavaUtilConcurrentLocksReadWriteLock>) nil_chk(handlersByTypeLock_)) writeLock])) lock];
  @try {
    [((id<ComGoogleCommonCollectSetMultimap>) nil_chk(handlersByType_)) putAllWithComGoogleCommonCollectMultimap:methodsInListener];
  }
  @finally {
    
#line 202
    [((id<JavaUtilConcurrentLocksLock>) nil_chk([handlersByTypeLock_ writeLock])) unlock];
  }
}


#line 212
- (void)unregisterWithId:(id)object {
  id<ComGoogleCommonCollectMultimap> methodsInListener = [((id<ComGoogleCommonEventbusHandlerFindingStrategy>) nil_chk(finder_)) findAllHandlersWithId:object];
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk(methodsInListener)) asMap])) entrySet])) {
    IOSClass *eventType = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    id<JavaUtilCollection> eventMethodsInListener = [entry_ getValue];
    
#line 218
    [((id<JavaUtilConcurrentLocksLock>) nil_chk([((id<JavaUtilConcurrentLocksReadWriteLock>) nil_chk(handlersByTypeLock_)) writeLock])) lock];
    @try {
      id<JavaUtilSet> currentHandlers = [((id<ComGoogleCommonCollectSetMultimap>) nil_chk(handlersByType_)) getWithId:eventType];
      if (![((id<JavaUtilSet>) nil_chk(currentHandlers)) containsAllWithJavaUtilCollection:eventMethodsInListener]) {
        @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"missing event handler for an annotated method. Is ",
#line 223
        object, @" registered?"));
      }
      [currentHandlers removeAllWithJavaUtilCollection:eventMethodsInListener];
    }
    @finally {
      
#line 227
      [((id<JavaUtilConcurrentLocksLock>) nil_chk([handlersByTypeLock_ writeLock])) unlock];
    }
  }
}


#line 243
- (void)postWithId:(id)event {
  id<JavaUtilSet> dispatchTypes = [self flattenHierarchyWithIOSClass:[nil_chk(event) java_getClass]];
  
#line 246
  jboolean dispatched = false;
  for (IOSClass * __strong eventType in nil_chk(dispatchTypes)) {
    [((id<JavaUtilConcurrentLocksLock>) nil_chk([((id<JavaUtilConcurrentLocksReadWriteLock>) nil_chk(handlersByTypeLock_)) readLock])) lock];
    @try {
      id<JavaUtilSet> wrappers = [((id<ComGoogleCommonCollectSetMultimap>) nil_chk(handlersByType_)) getWithId:eventType];
      
#line 252
      if (![((id<JavaUtilSet>) nil_chk(wrappers)) isEmpty]) {
        dispatched = true;
        for (ComGoogleCommonEventbusEventHandler * __strong wrapper in wrappers) {
          [self enqueueEventWithId:event withComGoogleCommonEventbusEventHandler:wrapper];
        }
      }
    }
    @finally {
      
#line 259
      [((id<JavaUtilConcurrentLocksLock>) nil_chk([handlersByTypeLock_ readLock])) unlock];
    }
  }
  
#line 263
  if (!dispatched && !([event isKindOfClass:[ComGoogleCommonEventbusDeadEvent class]])) {
    [self postWithId:create_ComGoogleCommonEventbusDeadEvent_initWithId_withId_(self, event)];
  }
  
#line 267
  [self dispatchQueuedEvents];
}


#line 275
- (void)enqueueEventWithId:(id)event
withComGoogleCommonEventbusEventHandler:(ComGoogleCommonEventbusEventHandler *)handler {
  [((id<JavaUtilQueue>) nil_chk([((JavaLangThreadLocal *) nil_chk(eventsToDispatch_)) get])) offerWithId:create_ComGoogleCommonEventbusEventBus_EventWithHandler_initWithId_withComGoogleCommonEventbusEventHandler_(event, handler)];
}


#line 283
- (void)dispatchQueuedEvents {
  
#line 287
  if ([((JavaLangBoolean *) nil_chk([((JavaLangThreadLocal *) nil_chk(isDispatching_)) get])) booleanValue]) {
    return;
  }
  
#line 291
  [isDispatching_ setWithId:JavaLangBoolean_valueOfWithBoolean_(true)];
  @try {
    id<JavaUtilQueue> events = [((JavaLangThreadLocal *) nil_chk(eventsToDispatch_)) get];
    ComGoogleCommonEventbusEventBus_EventWithHandler *eventWithHandler;
    while ((eventWithHandler = [((id<JavaUtilQueue>) nil_chk(events)) poll]) != nil) {
      [self dispatchWithId:((ComGoogleCommonEventbusEventBus_EventWithHandler *) nil_chk(eventWithHandler))->event_ withComGoogleCommonEventbusEventHandler:eventWithHandler->handler_];
    }
  }
  @finally {
    
#line 299
    [isDispatching_ remove];
    [eventsToDispatch_ remove];
  }
}


#line 312
- (void)dispatchWithId:(id)event
withComGoogleCommonEventbusEventHandler:(ComGoogleCommonEventbusEventHandler *)wrapper {
  @try {
    [((ComGoogleCommonEventbusEventHandler *) nil_chk(wrapper)) handleEventWithId:event];
  }
  @catch (
#line 315
  JavaLangReflectInvocationTargetException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(logger_)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, SEVERE) withNSString:JreStrcat("$@$@", @"Could not dispatch event: ",
#line 317
    event, @" to handler ", wrapper) withNSException:e];
  }
}


#line 330
- (id<JavaUtilSet>)flattenHierarchyWithIOSClass:(IOSClass *)concreteClass {
  @try {
    return [((id<ComGoogleCommonCacheLoadingCache>) nil_chk(ComGoogleCommonEventbusEventBus_flattenHierarchyCache)) getUncheckedWithId:concreteClass];
  }
  @catch (
#line 333
  ComGoogleCommonUtilConcurrentUncheckedExecutionException *e) {
    @throw ComGoogleCommonBaseThrowables_propagateWithNSException_([((ComGoogleCommonUtilConcurrentUncheckedExecutionException *) nil_chk(e)) getCause]);
  }
}

- (void)dealloc {
  RELEASE_(handlersByType_);
  RELEASE_(handlersByTypeLock_);
  RELEASE_(logger_);
  RELEASE_(finder_);
  RELEASE_(eventsToDispatch_);
  RELEASE_(isDispatching_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 6, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x0, 8, 9, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(register__WithId:);
  methods[3].selector = @selector(unregisterWithId:);
  methods[4].selector = @selector(postWithId:);
  methods[5].selector = @selector(enqueueEventWithId:withComGoogleCommonEventbusEventHandler:);
  methods[6].selector = @selector(dispatchQueuedEvents);
  methods[7].selector = @selector(dispatchWithId:withComGoogleCommonEventbusEventHandler:);
  methods[8].selector = @selector(flattenHierarchyWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "flattenHierarchyCache", "LComGoogleCommonCacheLoadingCache;", .constantValue.asLong = 0, 0x1a, -1, 11, 12, -1 },
    { "handlersByType_", "LComGoogleCommonCollectSetMultimap;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
    { "handlersByTypeLock_", "LJavaUtilConcurrentLocksReadWriteLock;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "logger_", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "finder_", "LComGoogleCommonEventbusHandlerFindingStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "eventsToDispatch_", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x12, -1, -1, 14, -1 },
    { "isDispatching_", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "register", "LNSObject;", "unregister", "post", "enqueueEvent", "LNSObject;LComGoogleCommonEventbusEventHandler;", "dispatch", "flattenHierarchy", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/util/Set<Ljava/lang/Class<*>;>;", &ComGoogleCommonEventbusEventBus_flattenHierarchyCache, "Lcom/google/common/cache/LoadingCache<Ljava/lang/Class<*>;Ljava/util/Set<Ljava/lang/Class<*>;>;>;", "Lcom/google/common/collect/SetMultimap<Ljava/lang/Class<*>;Lcom/google/common/eventbus/EventHandler;>;", "Ljava/lang/ThreadLocal<Ljava/util/Queue<Lcom/google/common/eventbus/EventBus$EventWithHandler;>;>;", "Ljava/lang/ThreadLocal<Ljava/lang/Boolean;>;", "LComGoogleCommonEventbusEventBus_EventWithHandler;" };
  static const J2ObjcClassInfo _ComGoogleCommonEventbusEventBus = { "EventBus", "com.google.common.eventbus", ptrTable, methods, fields, 7, 0x1, 9, 7, -1, 16, -1, -1, -1 };
  return &_ComGoogleCommonEventbusEventBus;
}

+ (void)initialize {
  if (self == [ComGoogleCommonEventbusEventBus class]) {
    JreStrongAssign(&ComGoogleCommonEventbusEventBus_flattenHierarchyCache,
#line 121
    [((ComGoogleCommonCacheCacheBuilder *) nil_chk([((ComGoogleCommonCacheCacheBuilder *) nil_chk(ComGoogleCommonCacheCacheBuilder_newBuilder())) weakKeys])) buildWithComGoogleCommonCacheCacheLoader:create_ComGoogleCommonEventbusEventBus_1_init()]);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonEventbusEventBus)
  }
}

@end


#line 173
void ComGoogleCommonEventbusEventBus_init(ComGoogleCommonEventbusEventBus *self) {
  ComGoogleCommonEventbusEventBus_initWithNSString_(self, @"default");
}


#line 173
ComGoogleCommonEventbusEventBus *new_ComGoogleCommonEventbusEventBus_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusEventBus, init)
}


#line 173
ComGoogleCommonEventbusEventBus *create_ComGoogleCommonEventbusEventBus_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusEventBus, init)
}


#line 183
void ComGoogleCommonEventbusEventBus_initWithNSString_(ComGoogleCommonEventbusEventBus *self, NSString *identifier) {
  NSObject_init(self);
  JreStrongAssign(&self->handlersByType_, ComGoogleCommonCollectHashMultimap_create());
  JreStrongAssignAndConsume(&self->handlersByTypeLock_, new_JavaUtilConcurrentLocksReentrantReadWriteLock_init());
  JreStrongAssignAndConsume(&self->finder_, new_ComGoogleCommonEventbusAnnotatedHandlerFinder_init());
  JreStrongAssignAndConsume(&self->eventsToDispatch_, new_ComGoogleCommonEventbusEventBus_2_init());
  JreStrongAssignAndConsume(&self->isDispatching_, new_ComGoogleCommonEventbusEventBus_3_init());
  
#line 184
  JreStrongAssign(&self->logger_, JavaUtilLoggingLogger_getLoggerWithNSString_(JreStrcat("$C$", [ComGoogleCommonEventbusEventBus_class_() getName], '.', ComGoogleCommonBasePreconditions_checkNotNullWithId_(identifier))));
}


#line 183
ComGoogleCommonEventbusEventBus *new_ComGoogleCommonEventbusEventBus_initWithNSString_(NSString *identifier) {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusEventBus, initWithNSString_, identifier)
}


#line 183
ComGoogleCommonEventbusEventBus *create_ComGoogleCommonEventbusEventBus_initWithNSString_(NSString *identifier) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusEventBus, initWithNSString_, identifier)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonEventbusEventBus)

#line 1 "com/google/common/eventbus/EventBus.java"

@implementation ComGoogleCommonEventbusEventBus_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonEventbusEventBus_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 126
- (id<JavaUtilSet>)load__WithId:(IOSClass *)concreteClass {
  return [((ComGoogleCommonReflectTypeToken_TypeSet *) nil_chk([((ComGoogleCommonReflectTypeToken *) nil_chk(ComGoogleCommonReflectTypeToken_ofWithIOSClass_(concreteClass))) getTypes])) rawTypes];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(load__WithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "load", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/util/Set<Ljava/lang/Class<*>;>;", "LComGoogleCommonEventbusEventBus;", "Lcom/google/common/cache/CacheLoader<Ljava/lang/Class<*>;Ljava/util/Set<Ljava/lang/Class<*>;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonEventbusEventBus_1 = { "", "com.google.common.eventbus", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, 4, -1 };
  return &_ComGoogleCommonEventbusEventBus_1;
}

@end

void ComGoogleCommonEventbusEventBus_1_init(ComGoogleCommonEventbusEventBus_1 *self) {
  ComGoogleCommonCacheCacheLoader_init(self);
}

ComGoogleCommonEventbusEventBus_1 *new_ComGoogleCommonEventbusEventBus_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusEventBus_1, init)
}

ComGoogleCommonEventbusEventBus_1 *create_ComGoogleCommonEventbusEventBus_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusEventBus_1, init)
}

#line 1 "com/google/common/eventbus/EventBus.java"

@implementation ComGoogleCommonEventbusEventBus_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonEventbusEventBus_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 157
- (id<JavaUtilQueue>)initialValue {
  return create_JavaUtilLinkedList_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilQueue;", 0x4, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initialValue);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Queue<Lcom/google/common/eventbus/EventBus$EventWithHandler;>;", "LComGoogleCommonEventbusEventBus;", "Ljava/lang/ThreadLocal<Ljava/util/Queue<Lcom/google/common/eventbus/EventBus$EventWithHandler;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonEventbusEventBus_2 = { "", "com.google.common.eventbus", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, -1, 2, -1 };
  return &_ComGoogleCommonEventbusEventBus_2;
}

@end

void ComGoogleCommonEventbusEventBus_2_init(ComGoogleCommonEventbusEventBus_2 *self) {
  JavaLangThreadLocal_init(self);
}

ComGoogleCommonEventbusEventBus_2 *new_ComGoogleCommonEventbusEventBus_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusEventBus_2, init)
}

ComGoogleCommonEventbusEventBus_2 *create_ComGoogleCommonEventbusEventBus_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusEventBus_2, init)
}

#line 1 "com/google/common/eventbus/EventBus.java"

@implementation ComGoogleCommonEventbusEventBus_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonEventbusEventBus_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 165
- (JavaLangBoolean *)initialValue {
  return JavaLangBoolean_valueOfWithBoolean_(false);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initialValue);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonEventbusEventBus;", "Ljava/lang/ThreadLocal<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonEventbusEventBus_3 = { "", "com.google.common.eventbus", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, -1, 1, -1 };
  return &_ComGoogleCommonEventbusEventBus_3;
}

@end

void ComGoogleCommonEventbusEventBus_3_init(ComGoogleCommonEventbusEventBus_3 *self) {
  JavaLangThreadLocal_init(self);
}

ComGoogleCommonEventbusEventBus_3 *new_ComGoogleCommonEventbusEventBus_3_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusEventBus_3, init)
}

ComGoogleCommonEventbusEventBus_3 *create_ComGoogleCommonEventbusEventBus_3_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusEventBus_3, init)
}

#line 1 "com/google/common/eventbus/EventBus.java"


#line 339
@implementation ComGoogleCommonEventbusEventBus_EventWithHandler


#line 342
- (instancetype)initWithId:(id)event
withComGoogleCommonEventbusEventHandler:(ComGoogleCommonEventbusEventHandler *)handler {
  ComGoogleCommonEventbusEventBus_EventWithHandler_initWithId_withComGoogleCommonEventbusEventHandler_(self, event, handler);
  return self;
}

- (void)dealloc {
  RELEASE_(event_);
  RELEASE_(handler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withComGoogleCommonEventbusEventHandler:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "event_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "handler_", "LComGoogleCommonEventbusEventHandler;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LComGoogleCommonEventbusEventHandler;", "LComGoogleCommonEventbusEventBus;" };
  static const J2ObjcClassInfo _ComGoogleCommonEventbusEventBus_EventWithHandler = { "EventWithHandler", "com.google.common.eventbus", ptrTable, methods, fields, 7, 0x8, 1, 2, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonEventbusEventBus_EventWithHandler;
}

@end


#line 342
void ComGoogleCommonEventbusEventBus_EventWithHandler_initWithId_withComGoogleCommonEventbusEventHandler_(ComGoogleCommonEventbusEventBus_EventWithHandler *self, id event, ComGoogleCommonEventbusEventHandler *handler) {
  NSObject_init(self);
  
#line 343
  JreStrongAssign(&self->event_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(event));
  JreStrongAssign(&self->handler_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(handler));
}


#line 342
ComGoogleCommonEventbusEventBus_EventWithHandler *new_ComGoogleCommonEventbusEventBus_EventWithHandler_initWithId_withComGoogleCommonEventbusEventHandler_(id event, ComGoogleCommonEventbusEventHandler *handler) {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusEventBus_EventWithHandler, initWithId_withComGoogleCommonEventbusEventHandler_, event, handler)
}


#line 342
ComGoogleCommonEventbusEventBus_EventWithHandler *create_ComGoogleCommonEventbusEventBus_EventWithHandler_initWithId_withComGoogleCommonEventbusEventHandler_(id event, ComGoogleCommonEventbusEventHandler *handler) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusEventBus_EventWithHandler, initWithId_withComGoogleCommonEventbusEventHandler_, event, handler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonEventbusEventBus_EventWithHandler)
