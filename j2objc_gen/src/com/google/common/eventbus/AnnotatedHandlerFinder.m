//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:lib/guava-14.0.1-sources.jar!com/google/common/eventbus/AnnotatedHandlerFinder.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Throwables.h"
#include "com/google/common/cache/CacheBuilder.h"
#include "com/google/common/cache/CacheLoader.h"
#include "com/google/common/cache/LoadingCache.h"
#include "com/google/common/collect/HashMultimap.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/Multimap.h"
#include "com/google/common/eventbus/AllowConcurrentEvents.h"
#include "com/google/common/eventbus/AnnotatedHandlerFinder.h"
#include "com/google/common/eventbus/EventHandler.h"
#include "com/google/common/eventbus/Subscribe.h"
#include "com/google/common/eventbus/SynchronizedEventHandler.h"
#include "com/google/common/reflect/TypeToken.h"
#include "com/google/common/util/concurrent/UncheckedExecutionException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/reflect/Method.h"
#include "java/util/Set.h"

@interface ComGoogleCommonEventbusAnnotatedHandlerFinder ()

+ (ComGoogleCommonCollectImmutableList *)getAnnotatedMethodsWithIOSClass:(IOSClass *)clazz;

+ (ComGoogleCommonCollectImmutableList *)getAnnotatedMethodsInternalWithIOSClass:(IOSClass *)clazz;

+ (ComGoogleCommonEventbusEventHandler *)makeHandlerWithId:(id)listener
                                 withJavaLangReflectMethod:(JavaLangReflectMethod *)method;

+ (jboolean)methodIsDeclaredThreadSafeWithJavaLangReflectMethod:(JavaLangReflectMethod *)method;

@end

inline id<ComGoogleCommonCacheLoadingCache> ComGoogleCommonEventbusAnnotatedHandlerFinder_get_handlerMethodsCache();
static id<ComGoogleCommonCacheLoadingCache> ComGoogleCommonEventbusAnnotatedHandlerFinder_handlerMethodsCache;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonEventbusAnnotatedHandlerFinder, handlerMethodsCache, id<ComGoogleCommonCacheLoadingCache>)

__attribute__((unused)) static ComGoogleCommonCollectImmutableList *ComGoogleCommonEventbusAnnotatedHandlerFinder_getAnnotatedMethodsWithIOSClass_(IOSClass *clazz);

__attribute__((unused)) static ComGoogleCommonCollectImmutableList *ComGoogleCommonEventbusAnnotatedHandlerFinder_getAnnotatedMethodsInternalWithIOSClass_(IOSClass *clazz);

__attribute__((unused)) static ComGoogleCommonEventbusEventHandler *ComGoogleCommonEventbusAnnotatedHandlerFinder_makeHandlerWithId_withJavaLangReflectMethod_(id listener, JavaLangReflectMethod *method);

__attribute__((unused)) static jboolean ComGoogleCommonEventbusAnnotatedHandlerFinder_methodIsDeclaredThreadSafeWithJavaLangReflectMethod_(JavaLangReflectMethod *method);

@interface ComGoogleCommonEventbusAnnotatedHandlerFinder_1 : ComGoogleCommonCacheCacheLoader

- (instancetype)init;

- (ComGoogleCommonCollectImmutableList *)load__WithId:(IOSClass *)concreteClass;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonEventbusAnnotatedHandlerFinder_1)

__attribute__((unused)) static void ComGoogleCommonEventbusAnnotatedHandlerFinder_1_init(ComGoogleCommonEventbusAnnotatedHandlerFinder_1 *self);

__attribute__((unused)) static ComGoogleCommonEventbusAnnotatedHandlerFinder_1 *new_ComGoogleCommonEventbusAnnotatedHandlerFinder_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonEventbusAnnotatedHandlerFinder_1 *create_ComGoogleCommonEventbusAnnotatedHandlerFinder_1_init();

#line 1 "com/google/common/eventbus/AnnotatedHandlerFinder.java"

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonEventbusAnnotatedHandlerFinder)


#line 39
@implementation ComGoogleCommonEventbusAnnotatedHandlerFinder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonEventbusAnnotatedHandlerFinder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 62
- (id<ComGoogleCommonCollectMultimap>)findAllHandlersWithId:(id)listener {
  id<ComGoogleCommonCollectMultimap> methodsInListener = ComGoogleCommonCollectHashMultimap_create();
  IOSClass *clazz = [nil_chk(listener) java_getClass];
  for (JavaLangReflectMethod * __strong method in nil_chk(ComGoogleCommonEventbusAnnotatedHandlerFinder_getAnnotatedMethodsWithIOSClass_(clazz))) {
    IOSObjectArray *parameterTypes = [((JavaLangReflectMethod *) nil_chk(method)) getParameterTypes];
    IOSClass *eventType = IOSObjectArray_Get(nil_chk(parameterTypes), 0);
    ComGoogleCommonEventbusEventHandler *handler = ComGoogleCommonEventbusAnnotatedHandlerFinder_makeHandlerWithId_withJavaLangReflectMethod_(listener, method);
    [((id<ComGoogleCommonCollectMultimap>) nil_chk(methodsInListener)) putWithId:eventType withId:handler];
  }
  return methodsInListener;
}

+ (ComGoogleCommonCollectImmutableList *)getAnnotatedMethodsWithIOSClass:(IOSClass *)clazz {
  return ComGoogleCommonEventbusAnnotatedHandlerFinder_getAnnotatedMethodsWithIOSClass_(clazz);
}


#line 82
+ (ComGoogleCommonCollectImmutableList *)getAnnotatedMethodsInternalWithIOSClass:(IOSClass *)clazz {
  return ComGoogleCommonEventbusAnnotatedHandlerFinder_getAnnotatedMethodsInternalWithIOSClass_(clazz);
}


#line 123
+ (ComGoogleCommonEventbusEventHandler *)makeHandlerWithId:(id)listener
                                 withJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  return ComGoogleCommonEventbusAnnotatedHandlerFinder_makeHandlerWithId_withJavaLangReflectMethod_(listener, method);
}


#line 141
+ (jboolean)methodIsDeclaredThreadSafeWithJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  return ComGoogleCommonEventbusAnnotatedHandlerFinder_methodIsDeclaredThreadSafeWithJavaLangReflectMethod_(method);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectMultimap;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0xa, 3, 4, -1, 5, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0xa, 6, 4, -1, 5, -1, -1 },
    { NULL, "LComGoogleCommonEventbusEventHandler;", 0xa, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(findAllHandlersWithId:);
  methods[2].selector = @selector(getAnnotatedMethodsWithIOSClass:);
  methods[3].selector = @selector(getAnnotatedMethodsInternalWithIOSClass:);
  methods[4].selector = @selector(makeHandlerWithId:withJavaLangReflectMethod:);
  methods[5].selector = @selector(methodIsDeclaredThreadSafeWithJavaLangReflectMethod:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "handlerMethodsCache", "LComGoogleCommonCacheLoadingCache;", .constantValue.asLong = 0, 0x1a, -1, 11, 12, -1 },
  };
  static const void *ptrTable[] = { "findAllHandlers", "LNSObject;", "(Ljava/lang/Object;)Lcom/google/common/collect/Multimap<Ljava/lang/Class<*>;Lcom/google/common/eventbus/EventHandler;>;", "getAnnotatedMethods", "LIOSClass;", "(Ljava/lang/Class<*>;)Lcom/google/common/collect/ImmutableList<Ljava/lang/reflect/Method;>;", "getAnnotatedMethodsInternal", "makeHandler", "LNSObject;LJavaLangReflectMethod;", "methodIsDeclaredThreadSafe", "LJavaLangReflectMethod;", &ComGoogleCommonEventbusAnnotatedHandlerFinder_handlerMethodsCache, "Lcom/google/common/cache/LoadingCache<Ljava/lang/Class<*>;Lcom/google/common/collect/ImmutableList<Ljava/lang/reflect/Method;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonEventbusAnnotatedHandlerFinder = { "AnnotatedHandlerFinder", "com.google.common.eventbus", ptrTable, methods, fields, 7, 0x0, 6, 1, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonEventbusAnnotatedHandlerFinder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonEventbusAnnotatedHandlerFinder class]) {
    JreStrongAssign(&ComGoogleCommonEventbusAnnotatedHandlerFinder_handlerMethodsCache,
#line 47
    [((ComGoogleCommonCacheCacheBuilder *) nil_chk([((ComGoogleCommonCacheCacheBuilder *) nil_chk(ComGoogleCommonCacheCacheBuilder_newBuilder())) weakKeys])) buildWithComGoogleCommonCacheCacheLoader:create_ComGoogleCommonEventbusAnnotatedHandlerFinder_1_init()]);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonEventbusAnnotatedHandlerFinder)
  }
}

@end

void ComGoogleCommonEventbusAnnotatedHandlerFinder_init(ComGoogleCommonEventbusAnnotatedHandlerFinder *self) {
  NSObject_init(self);
}

ComGoogleCommonEventbusAnnotatedHandlerFinder *new_ComGoogleCommonEventbusAnnotatedHandlerFinder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusAnnotatedHandlerFinder, init)
}

ComGoogleCommonEventbusAnnotatedHandlerFinder *create_ComGoogleCommonEventbusAnnotatedHandlerFinder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusAnnotatedHandlerFinder, init)
}


#line 74
ComGoogleCommonCollectImmutableList *ComGoogleCommonEventbusAnnotatedHandlerFinder_getAnnotatedMethodsWithIOSClass_(IOSClass *clazz) {
  ComGoogleCommonEventbusAnnotatedHandlerFinder_initialize();
  
#line 75
  @try {
    return [((id<ComGoogleCommonCacheLoadingCache>) nil_chk(ComGoogleCommonEventbusAnnotatedHandlerFinder_handlerMethodsCache)) getUncheckedWithId:clazz];
  }
  @catch (
#line 77
  ComGoogleCommonUtilConcurrentUncheckedExecutionException *e) {
    @throw ComGoogleCommonBaseThrowables_propagateWithNSException_([((ComGoogleCommonUtilConcurrentUncheckedExecutionException *) nil_chk(e)) getCause]);
  }
}


#line 82
ComGoogleCommonCollectImmutableList *ComGoogleCommonEventbusAnnotatedHandlerFinder_getAnnotatedMethodsInternalWithIOSClass_(IOSClass *clazz) {
  ComGoogleCommonEventbusAnnotatedHandlerFinder_initialize();
  
#line 83
  id<JavaUtilSet> supers = [((ComGoogleCommonReflectTypeToken_TypeSet *) nil_chk([((ComGoogleCommonReflectTypeToken *) nil_chk(ComGoogleCommonReflectTypeToken_ofWithIOSClass_(clazz))) getTypes])) rawTypes];
  ComGoogleCommonCollectImmutableList_Builder *result = ComGoogleCommonCollectImmutableList_builder();
  {
    IOSObjectArray *a__ =
#line 85
    [((IOSClass *) nil_chk(clazz)) getMethods];
    JavaLangReflectMethod * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectMethod * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectMethod *method = *b__++;
      for (IOSClass * __strong c in nil_chk(supers)) {
        @try {
          JavaLangReflectMethod *m = [((IOSClass *) nil_chk(c)) getMethod:[((JavaLangReflectMethod *) nil_chk(method)) getName] parameterTypes:[method getParameterTypes]];
          if ([((JavaLangReflectMethod *) nil_chk(m)) isAnnotationPresentWithIOSClass:ComGoogleCommonEventbusSubscribe_class_()]) {
            IOSObjectArray *parameterTypes = [method getParameterTypes];
            if (((IOSObjectArray *) nil_chk(parameterTypes))->size_ != 1) {
              @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$I$", @"Method ", method, @" has @Subscribe annotation, but requires ",
#line 97
              parameterTypes->size_, @" arguments.  Event handler methods must require a single argument."));
            }
            
#line 100
            IOSClass *eventType = IOSObjectArray_Get(parameterTypes, 0);
            [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(result)) addWithId:method];
            break;
          }
        }
        @catch (
#line 104
        JavaLangNoSuchMethodException *ignored) {
        }
      }
    }
  }
  return [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(result)) build];
}

ComGoogleCommonEventbusEventHandler *ComGoogleCommonEventbusAnnotatedHandlerFinder_makeHandlerWithId_withJavaLangReflectMethod_(id listener, JavaLangReflectMethod *method) {
  ComGoogleCommonEventbusAnnotatedHandlerFinder_initialize();
  
#line 124
  ComGoogleCommonEventbusEventHandler *wrapper;
  if (ComGoogleCommonEventbusAnnotatedHandlerFinder_methodIsDeclaredThreadSafeWithJavaLangReflectMethod_(method)) {
    wrapper = create_ComGoogleCommonEventbusEventHandler_initWithId_withJavaLangReflectMethod_(listener, method);
  }
  else {
    
#line 128
    wrapper = create_ComGoogleCommonEventbusSynchronizedEventHandler_initWithId_withJavaLangReflectMethod_(listener, method);
  }
  return wrapper;
}


#line 141
jboolean ComGoogleCommonEventbusAnnotatedHandlerFinder_methodIsDeclaredThreadSafeWithJavaLangReflectMethod_(JavaLangReflectMethod *method) {
  ComGoogleCommonEventbusAnnotatedHandlerFinder_initialize();
  
#line 142
  return [((JavaLangReflectMethod *) nil_chk(method)) getAnnotationWithIOSClass:ComGoogleCommonEventbusAllowConcurrentEvents_class_()] != nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonEventbusAnnotatedHandlerFinder)

#line 1 "com/google/common/eventbus/AnnotatedHandlerFinder.java"

@implementation ComGoogleCommonEventbusAnnotatedHandlerFinder_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonEventbusAnnotatedHandlerFinder_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 51
- (ComGoogleCommonCollectImmutableList *)load__WithId:(IOSClass *)concreteClass {
  return ComGoogleCommonEventbusAnnotatedHandlerFinder_getAnnotatedMethodsInternalWithIOSClass_(concreteClass);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(load__WithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "load", "LIOSClass;", "LJavaLangException;", "(Ljava/lang/Class<*>;)Lcom/google/common/collect/ImmutableList<Ljava/lang/reflect/Method;>;", "LComGoogleCommonEventbusAnnotatedHandlerFinder;", "Lcom/google/common/cache/CacheLoader<Ljava/lang/Class<*>;Lcom/google/common/collect/ImmutableList<Ljava/lang/reflect/Method;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonEventbusAnnotatedHandlerFinder_1 = { "", "com.google.common.eventbus", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, -1, 5, -1 };
  return &_ComGoogleCommonEventbusAnnotatedHandlerFinder_1;
}

@end

void ComGoogleCommonEventbusAnnotatedHandlerFinder_1_init(ComGoogleCommonEventbusAnnotatedHandlerFinder_1 *self) {
  ComGoogleCommonCacheCacheLoader_init(self);
}

ComGoogleCommonEventbusAnnotatedHandlerFinder_1 *new_ComGoogleCommonEventbusAnnotatedHandlerFinder_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusAnnotatedHandlerFinder_1, init)
}

ComGoogleCommonEventbusAnnotatedHandlerFinder_1 *create_ComGoogleCommonEventbusAnnotatedHandlerFinder_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusAnnotatedHandlerFinder_1, init)
}
