//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/org/opentelecoms/javax/sdp/NistSdpFactory.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sdp/MediaDescriptionImpl.h"
#include "android/gov/nist/javax/sdp/SessionDescriptionImpl.h"
#include "android/gov/nist/javax/sdp/TimeDescriptionImpl.h"
#include "android/gov/nist/javax/sdp/fields/AttributeField.h"
#include "android/gov/nist/javax/sdp/fields/BandwidthField.h"
#include "android/gov/nist/javax/sdp/fields/ConnectionField.h"
#include "android/gov/nist/javax/sdp/fields/EmailField.h"
#include "android/gov/nist/javax/sdp/fields/InformationField.h"
#include "android/gov/nist/javax/sdp/fields/KeyField.h"
#include "android/gov/nist/javax/sdp/fields/MediaField.h"
#include "android/gov/nist/javax/sdp/fields/OriginField.h"
#include "android/gov/nist/javax/sdp/fields/PhoneField.h"
#include "android/gov/nist/javax/sdp/fields/ProtoVersionField.h"
#include "android/gov/nist/javax/sdp/fields/RepeatField.h"
#include "android/gov/nist/javax/sdp/fields/SessionNameField.h"
#include "android/gov/nist/javax/sdp/fields/TimeField.h"
#include "android/gov/nist/javax/sdp/fields/URIField.h"
#include "android/gov/nist/javax/sdp/fields/ZoneField.h"
#include "android/gov/nist/javax/sdp/parser/SDPAnnounceParser.h"
#include "android/javax/sdp/Attribute.h"
#include "android/javax/sdp/BandWidth.h"
#include "android/javax/sdp/Connection.h"
#include "android/javax/sdp/EMail.h"
#include "android/javax/sdp/Info.h"
#include "android/javax/sdp/Key.h"
#include "android/javax/sdp/Media.h"
#include "android/javax/sdp/MediaDescription.h"
#include "android/javax/sdp/Origin.h"
#include "android/javax/sdp/Phone.h"
#include "android/javax/sdp/RepeatTime.h"
#include "android/javax/sdp/SdpConstants.h"
#include "android/javax/sdp/SdpException.h"
#include "android/javax/sdp/SessionDescription.h"
#include "android/javax/sdp/SessionName.h"
#include "android/javax/sdp/Time.h"
#include "android/javax/sdp/TimeDescription.h"
#include "android/javax/sdp/TimeZoneAdjustment.h"
#include "android/javax/sdp/URI.h"
#include "android/javax/sdp/Version.h"
#include "android/org/opentelecoms/javax/sdp/NistSdpFactory.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/net/InetAddress.h"
#include "java/net/URL.h"
#include "java/net/UnknownHostException.h"
#include "java/text/ParseException.h"
#include "java/util/Date.h"
#include "java/util/Hashtable.h"
#include "java/util/Vector.h"

@implementation AndroidOrgOpentelecomsJavaxSdpNistSdpFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidOrgOpentelecomsJavaxSdpNistSdpFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<AndroidJavaxSdpSessionDescription>)createSessionDescription {
  AndroidGovNistJavaxSdpSessionDescriptionImpl *sd = create_AndroidGovNistJavaxSdpSessionDescriptionImpl_init();
  [sd setVersionWithAndroidJavaxSdpVersion:[self createVersionWithInt:0]];
  @try {
    [sd setOriginWithAndroidJavaxSdpOrigin:[self createOriginWithNSString:@"user" withNSString:[((JavaNetInetAddress *) nil_chk(JavaNetInetAddress_getLocalHost())) description]]];
  }
  @catch (JavaNetUnknownHostException *e) {
    [((JavaNetUnknownHostException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  [sd setSessionNameWithAndroidJavaxSdpSessionName:[self createSessionNameWithNSString:@"-"]];
  JavaUtilVector *times = create_JavaUtilVector_init();
  AndroidGovNistJavaxSdpFieldsTimeField *tf = create_AndroidGovNistJavaxSdpFieldsTimeField_init();
  [tf setZero];
  [times addElementWithId:create_AndroidGovNistJavaxSdpTimeDescriptionImpl_initWithAndroidGovNistJavaxSdpFieldsTimeField_(tf)];
  [sd setTimeDescriptionsWithJavaUtilVector:times];
  return sd;
}

- (id<AndroidJavaxSdpSessionDescription>)createSessionDescriptionWithNSString:(NSString *)s {
  AndroidGovNistJavaxSdpParserSDPAnnounceParser *sap = create_AndroidGovNistJavaxSdpParserSDPAnnounceParser_initWithNSString_(s);
  @try {
    return [sap parse];
  }
  @catch (JavaTextParseException *e) {
    [((JavaTextParseException *) nil_chk(e)) printStackTrace];
    return nil;
  }
}

- (id<AndroidJavaxSdpBandWidth>)createBandwidthWithNSString:(NSString *)modifier
                                                    withInt:(jint)value {
  AndroidGovNistJavaxSdpFieldsBandwidthField *bw = create_AndroidGovNistJavaxSdpFieldsBandwidthField_init();
  @try {
    [bw setBandwidthWithInt:value];
    [bw setTypeWithNSString:modifier];
  }
  @catch (AndroidJavaxSdpSdpException *e) {
    [((AndroidJavaxSdpSdpException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  return bw;
}

- (id<AndroidJavaxSdpAttribute>)createAttributeWithNSString:(NSString *)name
                                               withNSString:(NSString *)value {
  AndroidGovNistJavaxSdpFieldsAttributeField *a = create_AndroidGovNistJavaxSdpFieldsAttributeField_init();
  @try {
    [a setNameWithNSString:name];
    [a setValueAllowNullWithNSString:value];
  }
  @catch (AndroidJavaxSdpSdpException *e) {
    [((AndroidJavaxSdpSdpException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  return a;
}

- (id<AndroidJavaxSdpInfo>)createInfoWithNSString:(NSString *)value {
  AndroidGovNistJavaxSdpFieldsInformationField *i = create_AndroidGovNistJavaxSdpFieldsInformationField_init();
  @try {
    [i setValueWithNSString:value];
  }
  @catch (AndroidJavaxSdpSdpException *e) {
    [((AndroidJavaxSdpSdpException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  return i;
}

- (id<AndroidJavaxSdpPhone>)createPhoneWithNSString:(NSString *)value {
  AndroidGovNistJavaxSdpFieldsPhoneField *p = create_AndroidGovNistJavaxSdpFieldsPhoneField_init();
  @try {
    [p setValueWithNSString:value];
  }
  @catch (AndroidJavaxSdpSdpException *e) {
    [((AndroidJavaxSdpSdpException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  return p;
}

- (id<AndroidJavaxSdpEMail>)createEMailWithNSString:(NSString *)value {
  AndroidGovNistJavaxSdpFieldsEmailField *e = create_AndroidGovNistJavaxSdpFieldsEmailField_init();
  @try {
    [e setValueWithNSString:value];
  }
  @catch (AndroidJavaxSdpSdpException *e1) {
    [((AndroidJavaxSdpSdpException *) nil_chk(e1)) printStackTrace];
    return nil;
  }
  return e;
}

- (id<AndroidJavaxSdpURI>)createURIWithJavaNetURL:(JavaNetURL *)value {
  id<AndroidJavaxSdpURI> u = create_AndroidGovNistJavaxSdpFieldsURIField_init();
  [u setWithJavaNetURL:value];
  return u;
}

- (id<AndroidJavaxSdpSessionName>)createSessionNameWithNSString:(NSString *)name {
  AndroidGovNistJavaxSdpFieldsSessionNameField *sn = create_AndroidGovNistJavaxSdpFieldsSessionNameField_init();
  @try {
    [sn setValueWithNSString:name];
  }
  @catch (AndroidJavaxSdpSdpException *e) {
    [((AndroidJavaxSdpSdpException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  return sn;
}

- (id<AndroidJavaxSdpKey>)createKeyWithNSString:(NSString *)method
                                   withNSString:(NSString *)key {
  AndroidGovNistJavaxSdpFieldsKeyField *k = create_AndroidGovNistJavaxSdpFieldsKeyField_init();
  @try {
    [k setMethodWithNSString:method];
    [k setKeyWithNSString:key];
  }
  @catch (AndroidJavaxSdpSdpException *e) {
    [((AndroidJavaxSdpSdpException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  return k;
}

- (id<AndroidJavaxSdpVersion>)createVersionWithInt:(jint)value {
  AndroidGovNistJavaxSdpFieldsProtoVersionField *pv = create_AndroidGovNistJavaxSdpFieldsProtoVersionField_init();
  @try {
    [pv setVersionWithInt:value];
  }
  @catch (AndroidJavaxSdpSdpException *e) {
    [((AndroidJavaxSdpSdpException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  return pv;
}

- (id<AndroidJavaxSdpMedia>)createMediaWithNSString:(NSString *)media
                                            withInt:(jint)port
                                            withInt:(jint)numPorts
                                       withNSString:(NSString *)transport
                                 withJavaUtilVector:(JavaUtilVector *)staticRtpAvpTypes {
  AndroidGovNistJavaxSdpFieldsMediaField *m = create_AndroidGovNistJavaxSdpFieldsMediaField_init();
  [m setMediaTypeWithNSString:media];
  [m setMediaPortWithInt:port];
  [m setPortCountWithInt:numPorts];
  [m setProtocolWithNSString:transport];
  [m setMediaFormatsWithJavaUtilVector:staticRtpAvpTypes];
  return m;
}

- (id<AndroidJavaxSdpOrigin>)createOriginWithNSString:(NSString *)userName
                                         withNSString:(NSString *)address {
  AndroidGovNistJavaxSdpFieldsOriginField *o = create_AndroidGovNistJavaxSdpFieldsOriginField_init();
  [o setUsernameWithNSString:userName];
  [o setAddressWithNSString:address];
  return o;
}

- (id<AndroidJavaxSdpOrigin>)createOriginWithNSString:(NSString *)userName
                                             withLong:(jlong)sessionId
                                             withLong:(jlong)sessionVersion
                                         withNSString:(NSString *)networkType
                                         withNSString:(NSString *)addrType
                                         withNSString:(NSString *)address {
  AndroidGovNistJavaxSdpFieldsOriginField *o = create_AndroidGovNistJavaxSdpFieldsOriginField_init();
  [o setUsernameWithNSString:userName];
  [o setSessionIdWithLong:sessionId];
  [o setSessionVersionWithLong:sessionVersion];
  [o setNetworkTypeWithNSString:networkType];
  return o;
}

- (id<AndroidJavaxSdpMediaDescription>)createMediaDescriptionWithNSString:(NSString *)media
                                                                  withInt:(jint)port
                                                                  withInt:(jint)numPorts
                                                             withNSString:(NSString *)transport
                                                             withIntArray:(IOSIntArray *)staticRtpAvpTypes {
  AndroidGovNistJavaxSdpMediaDescriptionImpl *md = create_AndroidGovNistJavaxSdpMediaDescriptionImpl_init();
  JavaUtilVector *types = create_JavaUtilVector_init();
  {
    IOSIntArray *a__ = staticRtpAvpTypes;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint type = *b__++;
      [types addElementWithId:[create_JavaLangInteger_initWithInt_(type) description]];
    }
  }
  id<AndroidJavaxSdpMedia> m = [self createMediaWithNSString:media withInt:port withInt:numPorts withNSString:transport withJavaUtilVector:types];
  [md setMediaWithAndroidJavaxSdpMedia:m];
  return md;
}

- (id<AndroidJavaxSdpMediaDescription>)createMediaDescriptionWithNSString:(NSString *)media
                                                                  withInt:(jint)port
                                                                  withInt:(jint)numPorts
                                                             withNSString:(NSString *)transport
                                                        withNSStringArray:(IOSObjectArray *)formats {
  AndroidGovNistJavaxSdpMediaDescriptionImpl *md = create_AndroidGovNistJavaxSdpMediaDescriptionImpl_init();
  JavaUtilVector *types = create_JavaUtilVector_init();
  {
    IOSObjectArray *a__ = formats;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *format = *b__++;
      [types addElementWithId:format];
    }
  }
  id<AndroidJavaxSdpMedia> m;
  @try {
    m = [self createMediaWithNSString:media withInt:port withInt:numPorts withNSString:transport withJavaUtilVector:types];
    [md setMediaWithAndroidJavaxSdpMedia:m];
  }
  @catch (AndroidJavaxSdpSdpException *e) {
    [((AndroidJavaxSdpSdpException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  return md;
}

- (id<AndroidJavaxSdpTimeDescription>)createTimeDescriptionWithAndroidJavaxSdpTime:(id<AndroidJavaxSdpTime>)t {
  id<AndroidJavaxSdpTimeDescription> td = [self createTimeDescription];
  [((id<AndroidJavaxSdpTimeDescription>) nil_chk(td)) setTimeWithAndroidJavaxSdpTime:t];
  return td;
}

- (id<AndroidJavaxSdpTimeDescription>)createTimeDescription {
  return create_AndroidGovNistJavaxSdpTimeDescriptionImpl_init();
}

- (id<AndroidJavaxSdpTimeDescription>)createTimeDescriptionWithJavaUtilDate:(JavaUtilDate *)start
                                                           withJavaUtilDate:(JavaUtilDate *)stop {
  id<AndroidJavaxSdpTimeDescription> td = [self createTimeDescription];
  [((id<AndroidJavaxSdpTimeDescription>) nil_chk(td)) setTimeWithAndroidJavaxSdpTime:[self createTimeWithJavaUtilDate:start withJavaUtilDate:stop]];
  return td;
}

- (NSString *)formatMulticastAddressWithNSString:(NSString *)addr
                                         withInt:(jint)ttl
                                         withInt:(jint)numAddrs {
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([create_JavaLangStringBuilder_init() appendWithNSString:addr])) appendWithChar:'/'])) appendWithInt:ttl])) appendWithChar:'/'])) appendWithInt:numAddrs])) description];
}

- (id<AndroidJavaxSdpConnection>)createConnectionWithNSString:(NSString *)netType
                                                 withNSString:(NSString *)addrType
                                                 withNSString:(NSString *)addr
                                                      withInt:(jint)ttl
                                                      withInt:(jint)numAddrs {
  id<AndroidJavaxSdpConnection> c = [self createConnectionWithNSString:netType withNSString:addrType withNSString:addr];
  return c;
}

- (id<AndroidJavaxSdpConnection>)createConnectionWithNSString:(NSString *)netType
                                                 withNSString:(NSString *)addrType
                                                 withNSString:(NSString *)addr {
  id<AndroidJavaxSdpConnection> c = [self createConnectionWithNSString:addr];
  [((id<AndroidJavaxSdpConnection>) nil_chk(c)) setNetworkTypeWithNSString:netType];
  [c setAddressTypeWithNSString:addrType];
  return c;
}

- (id<AndroidJavaxSdpConnection>)createConnectionWithNSString:(NSString *)addr
                                                      withInt:(jint)ttl
                                                      withInt:(jint)numAddrs {
  return [self createConnectionWithNSString:addr];
}

- (id<AndroidJavaxSdpConnection>)createConnectionWithNSString:(NSString *)addr {
  id<AndroidJavaxSdpConnection> c = create_AndroidGovNistJavaxSdpFieldsConnectionField_init();
  [c setAddressWithNSString:addr];
  return c;
}

- (id<AndroidJavaxSdpTime>)createTimeWithJavaUtilDate:(JavaUtilDate *)start
                                     withJavaUtilDate:(JavaUtilDate *)stop {
  id<AndroidJavaxSdpTime> t = [self createTime];
  [((id<AndroidJavaxSdpTime>) nil_chk(t)) setStartWithJavaUtilDate:start];
  [t setStopWithJavaUtilDate:stop];
  return t;
}

- (id<AndroidJavaxSdpTime>)createTime {
  return create_AndroidGovNistJavaxSdpFieldsTimeField_init();
}

- (id<AndroidJavaxSdpRepeatTime>)createRepeatTimeWithInt:(jint)repeatInterval
                                                 withInt:(jint)activeDuration
                                            withIntArray:(IOSIntArray *)offsets {
  AndroidGovNistJavaxSdpFieldsRepeatField *rt = create_AndroidGovNistJavaxSdpFieldsRepeatField_init();
  @try {
    [rt setRepeatIntervalWithInt:repeatInterval];
    [rt setActiveDurationWithInt:activeDuration];
    [rt setOffsetArrayWithIntArray:offsets];
  }
  @catch (AndroidJavaxSdpSdpException *e) {
    [((AndroidJavaxSdpSdpException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  return rt;
}

- (id<AndroidJavaxSdpTimeZoneAdjustment>)createTimeZoneAdjustmentWithJavaUtilDate:(JavaUtilDate *)d
                                                                          withInt:(jint)offset {
  AndroidGovNistJavaxSdpFieldsZoneField *z = create_AndroidGovNistJavaxSdpFieldsZoneField_init();
  JavaUtilHashtable *t = create_JavaUtilHashtable_initWithInt_(1);
  [t putWithId:d withId:JavaLangInteger_valueOfWithInt_(offset)];
  @try {
    [z setZoneAdjustmentsWithJavaUtilHashtable:t];
  }
  @catch (AndroidJavaxSdpSdpException *e) {
    [((AndroidJavaxSdpSdpException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  return z;
}

- (JavaUtilDate *)getDateFromNtpWithLong:(jlong)ntpTime {
  return create_JavaUtilDate_initWithLong_((ntpTime - AndroidJavaxSdpSdpConstants_NTP_CONST) * 1000);
}

- (jlong)getNtpTimeWithJavaUtilDate:(JavaUtilDate *)d {
  if (d == nil) {
    return -1;
  }
  return (([d getTime] / 1000) + AndroidJavaxSdpSdpConstants_NTP_CONST);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpSessionDescription;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpSessionDescription;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpBandWidth;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpAttribute;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpInfo;", 0x1, 8, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpPhone;", 0x1, 9, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpEMail;", 0x1, 10, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpURI;", 0x1, 11, 12, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpSessionName;", 0x1, 13, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpKey;", 0x1, 14, 7, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpVersion;", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpMedia;", 0x1, 17, 18, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpOrigin;", 0x1, 19, 7, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpOrigin;", 0x1, 19, 20, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpMediaDescription;", 0x1, 21, 22, 23, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpMediaDescription;", 0x1, 21, 24, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTimeDescription;", 0x1, 25, 26, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTimeDescription;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTimeDescription;", 0x1, 25, 27, 0, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 28, 29, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpConnection;", 0x1, 30, 31, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpConnection;", 0x1, 30, 32, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpConnection;", 0x1, 30, 29, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpConnection;", 0x1, 30, 2, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTime;", 0x1, 33, 27, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTime;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpRepeatTime;", 0x1, 34, 35, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTimeZoneAdjustment;", 0x1, 36, 37, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, 38, 39, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 40, 41, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createSessionDescription);
  methods[2].selector = @selector(createSessionDescriptionWithNSString:);
  methods[3].selector = @selector(createBandwidthWithNSString:withInt:);
  methods[4].selector = @selector(createAttributeWithNSString:withNSString:);
  methods[5].selector = @selector(createInfoWithNSString:);
  methods[6].selector = @selector(createPhoneWithNSString:);
  methods[7].selector = @selector(createEMailWithNSString:);
  methods[8].selector = @selector(createURIWithJavaNetURL:);
  methods[9].selector = @selector(createSessionNameWithNSString:);
  methods[10].selector = @selector(createKeyWithNSString:withNSString:);
  methods[11].selector = @selector(createVersionWithInt:);
  methods[12].selector = @selector(createMediaWithNSString:withInt:withInt:withNSString:withJavaUtilVector:);
  methods[13].selector = @selector(createOriginWithNSString:withNSString:);
  methods[14].selector = @selector(createOriginWithNSString:withLong:withLong:withNSString:withNSString:withNSString:);
  methods[15].selector = @selector(createMediaDescriptionWithNSString:withInt:withInt:withNSString:withIntArray:);
  methods[16].selector = @selector(createMediaDescriptionWithNSString:withInt:withInt:withNSString:withNSStringArray:);
  methods[17].selector = @selector(createTimeDescriptionWithAndroidJavaxSdpTime:);
  methods[18].selector = @selector(createTimeDescription);
  methods[19].selector = @selector(createTimeDescriptionWithJavaUtilDate:withJavaUtilDate:);
  methods[20].selector = @selector(formatMulticastAddressWithNSString:withInt:withInt:);
  methods[21].selector = @selector(createConnectionWithNSString:withNSString:withNSString:withInt:withInt:);
  methods[22].selector = @selector(createConnectionWithNSString:withNSString:withNSString:);
  methods[23].selector = @selector(createConnectionWithNSString:withInt:withInt:);
  methods[24].selector = @selector(createConnectionWithNSString:);
  methods[25].selector = @selector(createTimeWithJavaUtilDate:withJavaUtilDate:);
  methods[26].selector = @selector(createTime);
  methods[27].selector = @selector(createRepeatTimeWithInt:withInt:withIntArray:);
  methods[28].selector = @selector(createTimeZoneAdjustmentWithJavaUtilDate:withInt:);
  methods[29].selector = @selector(getDateFromNtpWithLong:);
  methods[30].selector = @selector(getNtpTimeWithJavaUtilDate:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidJavaxSdpSdpException;", "createSessionDescription", "LNSString;", "LAndroidJavaxSdpSdpParseException;", "createBandwidth", "LNSString;I", "createAttribute", "LNSString;LNSString;", "createInfo", "createPhone", "createEMail", "createURI", "LJavaNetURL;", "createSessionName", "createKey", "createVersion", "I", "createMedia", "LNSString;IILNSString;LJavaUtilVector;", "createOrigin", "LNSString;JJLNSString;LNSString;LNSString;", "createMediaDescription", "LNSString;IILNSString;[I", "LJavaLangIllegalArgumentException;LAndroidJavaxSdpSdpException;", "LNSString;IILNSString;[LNSString;", "createTimeDescription", "LAndroidJavaxSdpTime;", "LJavaUtilDate;LJavaUtilDate;", "formatMulticastAddress", "LNSString;II", "createConnection", "LNSString;LNSString;LNSString;II", "LNSString;LNSString;LNSString;", "createTime", "createRepeatTime", "II[I", "createTimeZoneAdjustment", "LJavaUtilDate;I", "getDateFromNtp", "J", "getNtpTime", "LJavaUtilDate;" };
  static const J2ObjcClassInfo _AndroidOrgOpentelecomsJavaxSdpNistSdpFactory = { "NistSdpFactory", "android.org.opentelecoms.javax.sdp", ptrTable, methods, NULL, 7, 0x1, 31, 0, -1, -1, -1, -1, -1 };
  return &_AndroidOrgOpentelecomsJavaxSdpNistSdpFactory;
}

@end

void AndroidOrgOpentelecomsJavaxSdpNistSdpFactory_init(AndroidOrgOpentelecomsJavaxSdpNistSdpFactory *self) {
  NSObject_init(self);
}

AndroidOrgOpentelecomsJavaxSdpNistSdpFactory *new_AndroidOrgOpentelecomsJavaxSdpNistSdpFactory_init() {
  J2OBJC_NEW_IMPL(AndroidOrgOpentelecomsJavaxSdpNistSdpFactory, init)
}

AndroidOrgOpentelecomsJavaxSdpNistSdpFactory *create_AndroidOrgOpentelecomsJavaxSdpNistSdpFactory_init() {
  J2OBJC_CREATE_IMPL(AndroidOrgOpentelecomsJavaxSdpNistSdpFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOrgOpentelecomsJavaxSdpNistSdpFactory)
