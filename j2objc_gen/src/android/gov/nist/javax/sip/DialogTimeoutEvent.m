//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/DialogTimeoutEvent.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/DialogTimeoutEvent.h"
#include "android/javax/sip/ClientTransaction.h"
#include "android/javax/sip/Dialog.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/EventObject.h"

@interface AndroidGovNistJavaxSipDialogTimeoutEvent () {
 @public
  id<AndroidJavaxSipDialog> m_dialog_;
  AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *m_reason_;
  id<AndroidJavaxSipClientTransaction> m_reInviteTransaction_;
}

@end

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipDialogTimeoutEvent, m_dialog_, id<AndroidJavaxSipDialog>)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipDialogTimeoutEvent, m_reason_, AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipDialogTimeoutEvent, m_reInviteTransaction_, id<AndroidJavaxSipClientTransaction>)

inline jlong AndroidGovNistJavaxSipDialogTimeoutEvent_get_serialVersionUID();
#define AndroidGovNistJavaxSipDialogTimeoutEvent_serialVersionUID -2514000059989311925LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipDialogTimeoutEvent, serialVersionUID, jlong)

__attribute__((unused)) static void AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_initWithNSString_withInt_(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *self, NSString *__name, jint __ordinal);

@implementation AndroidGovNistJavaxSipDialogTimeoutEvent

- (instancetype)initWithId:(id)source
 withAndroidJavaxSipDialog:(id<AndroidJavaxSipDialog>)dialog
withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason:(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *)reason {
  AndroidGovNistJavaxSipDialogTimeoutEvent_initWithId_withAndroidJavaxSipDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(self, source, dialog, reason);
  return self;
}

- (void)setClientTransactionWithAndroidJavaxSipClientTransaction:(id<AndroidJavaxSipClientTransaction>)clientTransaction {
  JreStrongAssign(&self->m_reInviteTransaction_, clientTransaction);
}

- (id<AndroidJavaxSipDialog>)getDialog {
  return m_dialog_;
}

- (AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *)getReason {
  return m_reason_;
}

- (id<AndroidJavaxSipClientTransaction>)getClientTransaction {
  return m_reInviteTransaction_;
}

- (void)dealloc {
  RELEASE_(m_dialog_);
  RELEASE_(m_reason_);
  RELEASE_(m_reInviteTransaction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipDialog;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipClientTransaction;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withAndroidJavaxSipDialog:withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason:);
  methods[1].selector = @selector(setClientTransactionWithAndroidJavaxSipClientTransaction:);
  methods[2].selector = @selector(getDialog);
  methods[3].selector = @selector(getReason);
  methods[4].selector = @selector(getClientTransaction);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipDialogTimeoutEvent_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "m_dialog_", "LAndroidJavaxSipDialog;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "m_reason_", "LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "m_reInviteTransaction_", "LAndroidJavaxSipClientTransaction;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LAndroidJavaxSipDialog;LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", "setClientTransaction", "LAndroidJavaxSipClientTransaction;", "LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipDialogTimeoutEvent = { "DialogTimeoutEvent", "android.gov.nist.javax.sip", ptrTable, methods, fields, 7, 0x1, 5, 4, -1, 3, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipDialogTimeoutEvent;
}

@end

void AndroidGovNistJavaxSipDialogTimeoutEvent_initWithId_withAndroidJavaxSipDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(AndroidGovNistJavaxSipDialogTimeoutEvent *self, id source, id<AndroidJavaxSipDialog> dialog, AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *reason) {
  JavaUtilEventObject_initWithId_(self, source);
  JreStrongAssign(&self->m_dialog_, nil);
  JreStrongAssign(&self->m_reason_, nil);
  JreStrongAssign(&self->m_reInviteTransaction_, nil);
  JreStrongAssign(&self->m_dialog_, dialog);
  JreStrongAssign(&self->m_reason_, reason);
}

AndroidGovNistJavaxSipDialogTimeoutEvent *new_AndroidGovNistJavaxSipDialogTimeoutEvent_initWithId_withAndroidJavaxSipDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(id source, id<AndroidJavaxSipDialog> dialog, AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *reason) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipDialogTimeoutEvent, initWithId_withAndroidJavaxSipDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_, source, dialog, reason)
}

AndroidGovNistJavaxSipDialogTimeoutEvent *create_AndroidGovNistJavaxSipDialogTimeoutEvent_initWithId_withAndroidJavaxSipDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(id source, id<AndroidJavaxSipDialog> dialog, AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *reason) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipDialogTimeoutEvent, initWithId_withAndroidJavaxSipDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_, source, dialog, reason)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipDialogTimeoutEvent)

J2OBJC_INITIALIZED_DEFN(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason)

AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_values_[5];

@implementation AndroidGovNistJavaxSipDialogTimeoutEvent_Reason

+ (IOSObjectArray *)values {
  return AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_values();
}

+ (AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *)valueOfWithNSString:(NSString *)name {
  return AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "AckNotReceived", "LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "AckNotSent", "LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "ReInviteTimeout", "LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "EarlyStateTimeout", "LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "CannotAcquireAckSemaphoreForOk", "LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason, AckNotReceived), &JreEnum(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason, AckNotSent), &JreEnum(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason, ReInviteTimeout), &JreEnum(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason, EarlyStateTimeout), &JreEnum(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason, CannotAcquireAckSemaphoreForOk), "LAndroidGovNistJavaxSipDialogTimeoutEvent;", "Ljava/lang/Enum<Landroid/gov/nist/javax/sip/DialogTimeoutEvent$Reason;>;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipDialogTimeoutEvent_Reason = { "Reason", "android.gov.nist.javax.sip", ptrTable, methods, fields, 7, 0x4019, 2, 5, 7, -1, -1, 8, -1 };
  return &_AndroidGovNistJavaxSipDialogTimeoutEvent_Reason;
}

+ (void)initialize {
  if (self == [AndroidGovNistJavaxSipDialogTimeoutEvent_Reason class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 5 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"AckNotReceived", @"AckNotSent", @"ReInviteTimeout", @"EarlyStateTimeout", @"CannotAcquireAckSemaphoreForOk",
    };
    for (jint i = 0; i < 5; i++) {
      (AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason)
  }
}

@end

void AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_initWithNSString_withInt_(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_values() {
  AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_initialize();
  return [IOSObjectArray arrayWithObjects:AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_values_ count:5 type:AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_class_()];
}

AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_valueOfWithNSString_(NSString *name) {
  AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_initialize();
  for (int i = 0; i < 5; i++) {
    AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *e = AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_fromOrdinal(NSUInteger ordinal) {
  AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return AndroidGovNistJavaxSipDialogTimeoutEvent_Reason_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason)
