//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/address/GenericURI.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/address/GenericURI.h"
#include "android/gov/nist/javax/sip/address/NetObject.h"
#include "android/gov/nist/javax/sip/address/SipUri.h"
#include "android/javax/sip/address/URI.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuilder.h"
#include "java/text/ParseException.h"

inline jlong AndroidGovNistJavaxSipAddressGenericURI_get_serialVersionUID();
#define AndroidGovNistJavaxSipAddressGenericURI_serialVersionUID 3237685256878068790LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipAddressGenericURI, serialVersionUID, jlong)

NSString *AndroidGovNistJavaxSipAddressGenericURI_SIP = @"sip";
NSString *AndroidGovNistJavaxSipAddressGenericURI_SIPS = @"sips";
NSString *AndroidGovNistJavaxSipAddressGenericURI_TEL = @"tel";
NSString *AndroidGovNistJavaxSipAddressGenericURI_POSTDIAL = @"postdial";
NSString *AndroidGovNistJavaxSipAddressGenericURI_PHONE_CONTEXT_TAG = @"context-tag";
NSString *AndroidGovNistJavaxSipAddressGenericURI_ISUB = @"isub";
NSString *AndroidGovNistJavaxSipAddressGenericURI_PROVIDER_TAG = @"provider-tag";

@implementation AndroidGovNistJavaxSipAddressGenericURI

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipAddressGenericURI_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)uriString {
  AndroidGovNistJavaxSipAddressGenericURI_initWithNSString_(self, uriString);
  return self;
}

- (NSString *)encode {
  return uriString_;
}

- (JavaLangStringBuilder *)encodeWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  return [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:uriString_];
}

- (NSString *)description {
  return [self encode];
}

- (NSString *)getScheme {
  return scheme_;
}

- (jboolean)isSipURI {
  return [self isKindOfClass:[AndroidGovNistJavaxSipAddressSipUri class]];
}

- (jboolean)isEqual:(id)that {
  if (self == that) return true;
  else if ([AndroidJavaxSipAddressURI_class_() isInstance:that]) {
    id<AndroidJavaxSipAddressURI> o = (id<AndroidJavaxSipAddressURI>) cast_check(that, AndroidJavaxSipAddressURI_class_());
    return [((NSString *) nil_chk([self description])) java_equalsIgnoreCase:[((id<AndroidJavaxSipAddressURI>) nil_chk(o)) description]];
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk([self description])) hash]);
}

- (void)dealloc {
  RELEASE_(uriString_);
  RELEASE_(scheme_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(encode);
  methods[3].selector = @selector(encodeWithJavaLangStringBuilder:);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(getScheme);
  methods[6].selector = @selector(isSipURI);
  methods[7].selector = @selector(isEqual:);
  methods[8].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipAddressGenericURI_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "SIP", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "SIPS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "TEL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "POSTDIAL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "PHONE_CONTEXT_TAG", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "ISUB", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "PROVIDER_TAG", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "uriString_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "scheme_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LJavaTextParseException;", "encode", "LJavaLangStringBuilder;", "toString", "equals", "LNSObject;", "hashCode", &AndroidGovNistJavaxSipAddressGenericURI_SIP, &AndroidGovNistJavaxSipAddressGenericURI_SIPS, &AndroidGovNistJavaxSipAddressGenericURI_TEL, &AndroidGovNistJavaxSipAddressGenericURI_POSTDIAL, &AndroidGovNistJavaxSipAddressGenericURI_PHONE_CONTEXT_TAG, &AndroidGovNistJavaxSipAddressGenericURI_ISUB, &AndroidGovNistJavaxSipAddressGenericURI_PROVIDER_TAG };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipAddressGenericURI = { "GenericURI", "android.gov.nist.javax.sip.address", ptrTable, methods, fields, 7, 0x1, 9, 10, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipAddressGenericURI;
}

@end

void AndroidGovNistJavaxSipAddressGenericURI_init(AndroidGovNistJavaxSipAddressGenericURI *self) {
  AndroidGovNistJavaxSipAddressNetObject_init(self);
}

AndroidGovNistJavaxSipAddressGenericURI *new_AndroidGovNistJavaxSipAddressGenericURI_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipAddressGenericURI, init)
}

AndroidGovNistJavaxSipAddressGenericURI *create_AndroidGovNistJavaxSipAddressGenericURI_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipAddressGenericURI, init)
}

void AndroidGovNistJavaxSipAddressGenericURI_initWithNSString_(AndroidGovNistJavaxSipAddressGenericURI *self, NSString *uriString) {
  AndroidGovNistJavaxSipAddressNetObject_init(self);
  @try {
    JreStrongAssign(&self->uriString_, uriString);
    jint i = [((NSString *) nil_chk(uriString)) java_indexOfString:@":"];
    JreStrongAssign(&self->scheme_, [uriString java_substring:0 endIndex:i]);
  }
  @catch (JavaLangException *e) {
    @throw create_JavaTextParseException_initWithNSString_withInt_(@"GenericURI, Bad URI format", 0);
  }
}

AndroidGovNistJavaxSipAddressGenericURI *new_AndroidGovNistJavaxSipAddressGenericURI_initWithNSString_(NSString *uriString) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipAddressGenericURI, initWithNSString_, uriString)
}

AndroidGovNistJavaxSipAddressGenericURI *create_AndroidGovNistJavaxSipAddressGenericURI_initWithNSString_(NSString *uriString) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipAddressGenericURI, initWithNSString_, uriString)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipAddressGenericURI)
