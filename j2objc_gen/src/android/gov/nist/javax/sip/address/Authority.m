//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/address/Authority.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/Host.h"
#include "android/gov/nist/core/HostPort.h"
#include "android/gov/nist/javax/sip/address/Authority.h"
#include "android/gov/nist/javax/sip/address/NetObject.h"
#include "android/gov/nist/javax/sip/address/UserInfo.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"

inline jlong AndroidGovNistJavaxSipAddressAuthority_get_serialVersionUID();
#define AndroidGovNistJavaxSipAddressAuthority_serialVersionUID -3570349777347017894LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipAddressAuthority, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipAddressAuthority

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipAddressAuthority_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)encode {
  return [((JavaLangStringBuilder *) nil_chk([self encodeWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)encodeWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  if (userInfo_ != nil) {
    [userInfo_ encodeWithJavaLangStringBuilder:buffer];
    [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:AndroidGovNistCoreGenericObject_AT];
    [((AndroidGovNistCoreHostPort *) nil_chk(hostPort_)) encodeWithJavaLangStringBuilder:buffer];
  }
  else {
    [((AndroidGovNistCoreHostPort *) nil_chk(hostPort_)) encodeWithJavaLangStringBuilder:buffer];
  }
  return buffer;
}

- (jboolean)isEqual:(id)other {
  if (other == nil) return false;
  if ([other java_getClass] != [self java_getClass]) {
    return false;
  }
  AndroidGovNistJavaxSipAddressAuthority *otherAuth = (AndroidGovNistJavaxSipAddressAuthority *) cast_chk(other, [AndroidGovNistJavaxSipAddressAuthority class]);
  if (![((AndroidGovNistCoreHostPort *) nil_chk(self->hostPort_)) isEqual:otherAuth->hostPort_]) {
    return false;
  }
  if (self->userInfo_ != nil && otherAuth->userInfo_ != nil) {
    if (![self->userInfo_ isEqual:otherAuth->userInfo_]) {
      return false;
    }
  }
  return true;
}

- (AndroidGovNistCoreHostPort *)getHostPort {
  return hostPort_;
}

- (AndroidGovNistJavaxSipAddressUserInfo *)getUserInfo {
  return userInfo_;
}

- (NSString *)getPassword {
  if (userInfo_ == nil) return nil;
  else return userInfo_->password_;
}

- (NSString *)getUser {
  return userInfo_ != nil ? userInfo_->user_ : nil;
}

- (AndroidGovNistCoreHost *)getHost {
  if (hostPort_ == nil) return nil;
  else return [hostPort_ getHost];
}

- (jint)getPort {
  if (hostPort_ == nil) return -1;
  else return [hostPort_ getPort];
}

- (void)removePort {
  if (hostPort_ != nil) [hostPort_ removePort];
}

- (void)setPasswordWithNSString:(NSString *)passwd {
  if (userInfo_ == nil) JreStrongAssignAndConsume(&userInfo_, new_AndroidGovNistJavaxSipAddressUserInfo_init());
  [userInfo_ setPasswordWithNSString:passwd];
}

- (void)setUserWithNSString:(NSString *)user {
  if (userInfo_ == nil) JreStrongAssignAndConsume(&userInfo_, new_AndroidGovNistJavaxSipAddressUserInfo_init());
  [self->userInfo_ setUserWithNSString:user];
}

- (void)setHostWithAndroidGovNistCoreHost:(AndroidGovNistCoreHost *)host {
  if (hostPort_ == nil) JreStrongAssignAndConsume(&hostPort_, new_AndroidGovNistCoreHostPort_init());
  [hostPort_ setHostWithAndroidGovNistCoreHost:host];
}

- (void)setPortWithInt:(jint)port {
  if (hostPort_ == nil) JreStrongAssignAndConsume(&hostPort_, new_AndroidGovNistCoreHostPort_init());
  [hostPort_ setPortWithInt:port];
}

- (void)setHostPortWithAndroidGovNistCoreHostPort:(AndroidGovNistCoreHostPort *)h {
  JreStrongAssign(&hostPort_, h);
}

- (void)setUserInfoWithAndroidGovNistJavaxSipAddressUserInfo:(AndroidGovNistJavaxSipAddressUserInfo *)u {
  JreStrongAssign(&userInfo_, u);
}

- (void)removeUserInfo {
  JreStrongAssign(&self->userInfo_, nil);
}

- (id)java_clone {
  AndroidGovNistJavaxSipAddressAuthority *retval = (AndroidGovNistJavaxSipAddressAuthority *) cast_chk([super java_clone], [AndroidGovNistJavaxSipAddressAuthority class]);
  if (self->hostPort_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSipAddressAuthority *) nil_chk(retval))->hostPort_, (AndroidGovNistCoreHostPort *) cast_chk([self->hostPort_ java_clone], [AndroidGovNistCoreHostPort class]));
  if (self->userInfo_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSipAddressAuthority *) nil_chk(retval))->userInfo_, (AndroidGovNistJavaxSipAddressUserInfo *) cast_chk([self->userInfo_ java_clone], [AndroidGovNistJavaxSipAddressUserInfo class]));
  return retval;
}

- (NSUInteger)hash {
  if (self->hostPort_ == nil) @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Null hostPort cannot compute hashcode");
  return ((jint) [((NSString *) nil_chk([self->hostPort_ encode])) hash]);
}

- (void)dealloc {
  RELEASE_(hostPort_);
  RELEASE_(userInfo_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistCoreHostPort;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipAddressUserInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistCoreHost;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 16, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encode);
  methods[2].selector = @selector(encodeWithJavaLangStringBuilder:);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(getHostPort);
  methods[5].selector = @selector(getUserInfo);
  methods[6].selector = @selector(getPassword);
  methods[7].selector = @selector(getUser);
  methods[8].selector = @selector(getHost);
  methods[9].selector = @selector(getPort);
  methods[10].selector = @selector(removePort);
  methods[11].selector = @selector(setPasswordWithNSString:);
  methods[12].selector = @selector(setUserWithNSString:);
  methods[13].selector = @selector(setHostWithAndroidGovNistCoreHost:);
  methods[14].selector = @selector(setPortWithInt:);
  methods[15].selector = @selector(setHostPortWithAndroidGovNistCoreHostPort:);
  methods[16].selector = @selector(setUserInfoWithAndroidGovNistJavaxSipAddressUserInfo:);
  methods[17].selector = @selector(removeUserInfo);
  methods[18].selector = @selector(java_clone);
  methods[19].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipAddressAuthority_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "hostPort_", "LAndroidGovNistCoreHostPort;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "userInfo_", "LAndroidGovNistJavaxSipAddressUserInfo;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "encode", "LJavaLangStringBuilder;", "equals", "LNSObject;", "setPassword", "LNSString;", "setUser", "setHost", "LAndroidGovNistCoreHost;", "setPort", "I", "setHostPort", "LAndroidGovNistCoreHostPort;", "setUserInfo", "LAndroidGovNistJavaxSipAddressUserInfo;", "clone", "hashCode" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipAddressAuthority = { "Authority", "android.gov.nist.javax.sip.address", ptrTable, methods, fields, 7, 0x1, 20, 3, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipAddressAuthority;
}

@end

void AndroidGovNistJavaxSipAddressAuthority_init(AndroidGovNistJavaxSipAddressAuthority *self) {
  AndroidGovNistJavaxSipAddressNetObject_init(self);
}

AndroidGovNistJavaxSipAddressAuthority *new_AndroidGovNistJavaxSipAddressAuthority_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipAddressAuthority, init)
}

AndroidGovNistJavaxSipAddressAuthority *create_AndroidGovNistJavaxSipAddressAuthority_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipAddressAuthority, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipAddressAuthority)
