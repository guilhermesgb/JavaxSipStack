//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/address/AddressFactoryImpl.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/address/AddressFactoryImpl.h"
#include "android/gov/nist/javax/sip/address/AddressImpl.h"
#include "android/gov/nist/javax/sip/address/GenericURI.h"
#include "android/gov/nist/javax/sip/address/SipUri.h"
#include "android/gov/nist/javax/sip/address/TelURLImpl.h"
#include "android/gov/nist/javax/sip/parser/StringMsgParser.h"
#include "android/gov/nist/javax/sip/parser/URLParser.h"
#include "android/javax/sip/address/Address.h"
#include "android/javax/sip/address/SipURI.h"
#include "android/javax/sip/address/TelURL.h"
#include "android/javax/sip/address/URI.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/text/ParseException.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

J2OBJC_INITIALIZED_DEFN(AndroidGovNistJavaxSipAddressAddressFactoryImpl)

JavaUtilRegexPattern *AndroidGovNistJavaxSipAddressAddressFactoryImpl_SCHEME_PATTERN;

@implementation AndroidGovNistJavaxSipAddressAddressFactoryImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipAddressAddressFactoryImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<AndroidJavaxSipAddressAddress>)createAddress {
  return create_AndroidGovNistJavaxSipAddressAddressImpl_init();
}

- (id<AndroidJavaxSipAddressAddress>)createAddressWithNSString:(NSString *)displayName
                                 withAndroidJavaxSipAddressURI:(id<AndroidJavaxSipAddressURI>)uri {
  if (uri == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null  URI");
  AndroidGovNistJavaxSipAddressAddressImpl *addressImpl = create_AndroidGovNistJavaxSipAddressAddressImpl_init();
  if (displayName != nil) [addressImpl setDisplayNameWithNSString:displayName];
  [addressImpl setURIWithAndroidJavaxSipAddressURI:uri];
  return addressImpl;
}

- (id<AndroidJavaxSipAddressAddress>)createAddressWithAndroidJavaxSipAddressURI:(id<AndroidJavaxSipAddressURI>)uri {
  if (uri == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null address");
  AndroidGovNistJavaxSipAddressAddressImpl *addressImpl = create_AndroidGovNistJavaxSipAddressAddressImpl_init();
  [addressImpl setURIWithAndroidJavaxSipAddressURI:uri];
  return addressImpl;
}

- (id<AndroidJavaxSipAddressAddress>)createAddressWithNSString:(NSString *)address {
  if (address == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null address");
  if ([address isEqual:@"*"]) {
    AndroidGovNistJavaxSipAddressAddressImpl *addressImpl = create_AndroidGovNistJavaxSipAddressAddressImpl_init();
    [addressImpl setAddressTypeWithInt:AndroidGovNistJavaxSipAddressAddressImpl_WILD_CARD];
    id<AndroidJavaxSipAddressSipURI> uri = create_AndroidGovNistJavaxSipAddressSipUri_init();
    [uri setUserWithNSString:@"*"];
    [addressImpl setURIWithAndroidJavaxSipAddressURI:uri];
    return addressImpl;
  }
  else {
    AndroidGovNistJavaxSipParserStringMsgParser *smp = create_AndroidGovNistJavaxSipParserStringMsgParser_init();
    return [smp parseAddressWithNSString:address];
  }
}

- (id<AndroidJavaxSipAddressSipURI>)createSipURIWithNSString:(NSString *)uri {
  if (uri == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null URI");
  @try {
    AndroidGovNistJavaxSipParserStringMsgParser *smp = create_AndroidGovNistJavaxSipParserStringMsgParser_init();
    AndroidGovNistJavaxSipAddressSipUri *sipUri = [smp parseSIPUrlWithNSString:uri];
    return sipUri;
  }
  @catch (JavaTextParseException *ex) {
    @throw create_JavaTextParseException_initWithNSString_withInt_([((JavaTextParseException *) nil_chk(ex)) getMessage], 0);
  }
}

- (id<AndroidJavaxSipAddressSipURI>)createSipURIWithNSString:(NSString *)user
                                                withNSString:(NSString *)host {
  if (host == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null host");
  JavaLangStringBuilder *uriString = create_JavaLangStringBuilder_initWithNSString_(@"sip:");
  if (user != nil) {
    [uriString appendWithNSString:user];
    [uriString appendWithNSString:@"@"];
  }
  if ([host java_indexOf:':'] != [host java_lastIndexOf:':'] && [((NSString *) nil_chk([host java_trim])) charAtWithInt:0] != '[') host = JreStrcat("C$C", '[', host, ']');
  [uriString appendWithNSString:host];
  @try {
    return [self createSipURIWithNSString:[uriString description]];
  }
  @catch (JavaTextParseException *ex) {
    @throw create_JavaTextParseException_initWithNSString_withInt_([((JavaTextParseException *) nil_chk(ex)) getMessage], 0);
  }
}

- (id<AndroidJavaxSipAddressTelURL>)createTelURLWithNSString:(NSString *)uri {
  if (uri == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null url");
  NSString *telUrl = nil;
  if ([uri hasPrefix:@"tel:"]) {
    telUrl = uri;
  }
  else {
    telUrl = JreStrcat("$$", @"tel:", uri);
  }
  @try {
    AndroidGovNistJavaxSipParserStringMsgParser *smp = create_AndroidGovNistJavaxSipParserStringMsgParser_init();
    AndroidGovNistJavaxSipAddressTelURLImpl *timp = (AndroidGovNistJavaxSipAddressTelURLImpl *) cast_chk([smp parseUrlWithNSString:telUrl], [AndroidGovNistJavaxSipAddressTelURLImpl class]);
    return timp;
  }
  @catch (JavaTextParseException *ex) {
    @throw create_JavaTextParseException_initWithNSString_withInt_([((JavaTextParseException *) nil_chk(ex)) getMessage], 0);
  }
}

- (id<AndroidJavaxSipAddressURI>)createURIWithNSString:(NSString *)uri {
  if (uri == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null arg");
  @try {
    AndroidGovNistJavaxSipParserURLParser *urlParser = create_AndroidGovNistJavaxSipParserURLParser_initWithNSString_(uri);
    NSString *scheme = [urlParser peekScheme];
    if (scheme == nil) @throw create_JavaTextParseException_initWithNSString_withInt_(@"bad scheme", 0);
    if ([scheme java_equalsIgnoreCase:@"sip"] || [scheme java_equalsIgnoreCase:@"sips"]) {
      return [self createSipURIWithNSString:uri];
    }
    else if ([scheme java_equalsIgnoreCase:@"tel"]) {
      return [self createTelURLWithNSString:uri];
    }
    if (![((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(AndroidGovNistJavaxSipAddressAddressFactoryImpl_SCHEME_PATTERN)) matcherWithJavaLangCharSequence:scheme])) matches]) {
      @throw create_JavaTextParseException_initWithNSString_withInt_(JreStrcat("$$$$$", @"the scheme ", scheme, @" from the following uri ", uri, @" doesn't match ALPHA *(ALPHA / DIGIT / \"+\" / \"-\" / \".\" ) from RFC3261"), 0);
    }
  }
  @catch (JavaTextParseException *ex) {
    @throw create_JavaTextParseException_initWithNSString_withInt_([((JavaTextParseException *) nil_chk(ex)) getMessage], 0);
  }
  return create_AndroidGovNistJavaxSipAddressGenericURI_initWithNSString_(uri);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressAddress;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressAddress;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressAddress;", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressAddress;", 0x1, 0, 3, 4, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressSipURI;", 0x1, 5, 3, 4, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressSipURI;", 0x1, 5, 6, 4, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressTelURL;", 0x1, 7, 3, 4, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressURI;", 0x1, 8, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createAddress);
  methods[2].selector = @selector(createAddressWithNSString:withAndroidJavaxSipAddressURI:);
  methods[3].selector = @selector(createAddressWithAndroidJavaxSipAddressURI:);
  methods[4].selector = @selector(createAddressWithNSString:);
  methods[5].selector = @selector(createSipURIWithNSString:);
  methods[6].selector = @selector(createSipURIWithNSString:withNSString:);
  methods[7].selector = @selector(createTelURLWithNSString:);
  methods[8].selector = @selector(createURIWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SCHEME_PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "createAddress", "LNSString;LAndroidJavaxSipAddressURI;", "LAndroidJavaxSipAddressURI;", "LNSString;", "LJavaTextParseException;", "createSipURI", "LNSString;LNSString;", "createTelURL", "createURI", &AndroidGovNistJavaxSipAddressAddressFactoryImpl_SCHEME_PATTERN };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipAddressAddressFactoryImpl = { "AddressFactoryImpl", "android.gov.nist.javax.sip.address", ptrTable, methods, fields, 7, 0x1, 9, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipAddressAddressFactoryImpl;
}

+ (void)initialize {
  if (self == [AndroidGovNistJavaxSipAddressAddressFactoryImpl class]) {
    JreStrongAssign(&AndroidGovNistJavaxSipAddressAddressFactoryImpl_SCHEME_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"\\p{Alpha}[[{\\p{Alpha}][\\p{Digit}][\\+][-][\\.]]*"));
    J2OBJC_SET_INITIALIZED(AndroidGovNistJavaxSipAddressAddressFactoryImpl)
  }
}

@end

void AndroidGovNistJavaxSipAddressAddressFactoryImpl_init(AndroidGovNistJavaxSipAddressAddressFactoryImpl *self) {
  NSObject_init(self);
}

AndroidGovNistJavaxSipAddressAddressFactoryImpl *new_AndroidGovNistJavaxSipAddressAddressFactoryImpl_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipAddressAddressFactoryImpl, init)
}

AndroidGovNistJavaxSipAddressAddressFactoryImpl *create_AndroidGovNistJavaxSipAddressAddressFactoryImpl_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipAddressAddressFactoryImpl, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipAddressAddressFactoryImpl)
