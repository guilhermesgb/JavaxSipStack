//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/SIPTransactionErrorEvent.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/stack/SIPTransaction.h"
#include "android/gov/nist/javax/sip/stack/SIPTransactionErrorEvent.h"
#include "java/util/EventObject.h"

@interface AndroidGovNistJavaxSipStackSIPTransactionErrorEvent () {
 @public
  jint errorID_;
}

@end

inline jlong AndroidGovNistJavaxSipStackSIPTransactionErrorEvent_get_serialVersionUID();
#define AndroidGovNistJavaxSipStackSIPTransactionErrorEvent_serialVersionUID -2713188471978065031LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipStackSIPTransactionErrorEvent, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipStackSIPTransactionErrorEvent

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPTransaction:(id<AndroidGovNistJavaxSipStackSIPTransaction>)sourceTransaction
                                                          withInt:(jint)transactionErrorID {
  AndroidGovNistJavaxSipStackSIPTransactionErrorEvent_initWithAndroidGovNistJavaxSipStackSIPTransaction_withInt_(self, sourceTransaction, transactionErrorID);
  return self;
}

- (jint)getErrorID {
  return errorID_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidGovNistJavaxSipStackSIPTransaction:withInt:);
  methods[1].selector = @selector(getErrorID);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipStackSIPTransactionErrorEvent_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "TIMEOUT_ERROR", "I", .constantValue.asInt = AndroidGovNistJavaxSipStackSIPTransactionErrorEvent_TIMEOUT_ERROR, 0x19, -1, -1, -1, -1 },
    { "TRANSPORT_ERROR", "I", .constantValue.asInt = AndroidGovNistJavaxSipStackSIPTransactionErrorEvent_TRANSPORT_ERROR, 0x19, -1, -1, -1, -1 },
    { "TIMEOUT_RETRANSMIT", "I", .constantValue.asInt = AndroidGovNistJavaxSipStackSIPTransactionErrorEvent_TIMEOUT_RETRANSMIT, 0x19, -1, -1, -1, -1 },
    { "errorID_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidGovNistJavaxSipStackSIPTransaction;I" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipStackSIPTransactionErrorEvent = { "SIPTransactionErrorEvent", "android.gov.nist.javax.sip.stack", ptrTable, methods, fields, 7, 0x1, 2, 5, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipStackSIPTransactionErrorEvent;
}

@end

void AndroidGovNistJavaxSipStackSIPTransactionErrorEvent_initWithAndroidGovNistJavaxSipStackSIPTransaction_withInt_(AndroidGovNistJavaxSipStackSIPTransactionErrorEvent *self, id<AndroidGovNistJavaxSipStackSIPTransaction> sourceTransaction, jint transactionErrorID) {
  JavaUtilEventObject_initWithId_(self, sourceTransaction);
  self->errorID_ = transactionErrorID;
}

AndroidGovNistJavaxSipStackSIPTransactionErrorEvent *new_AndroidGovNistJavaxSipStackSIPTransactionErrorEvent_initWithAndroidGovNistJavaxSipStackSIPTransaction_withInt_(id<AndroidGovNistJavaxSipStackSIPTransaction> sourceTransaction, jint transactionErrorID) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipStackSIPTransactionErrorEvent, initWithAndroidGovNistJavaxSipStackSIPTransaction_withInt_, sourceTransaction, transactionErrorID)
}

AndroidGovNistJavaxSipStackSIPTransactionErrorEvent *create_AndroidGovNistJavaxSipStackSIPTransactionErrorEvent_initWithAndroidGovNistJavaxSipStackSIPTransaction_withInt_(id<AndroidGovNistJavaxSipStackSIPTransaction> sourceTransaction, jint transactionErrorID) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipStackSIPTransactionErrorEvent, initWithAndroidGovNistJavaxSipStackSIPTransaction_withInt_, sourceTransaction, transactionErrorID)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipStackSIPTransactionErrorEvent)
