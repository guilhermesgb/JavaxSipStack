//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/IOHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackIOHandler")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackIOHandler
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackIOHandler 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackIOHandler 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackIOHandler

#if !defined (AndroidGovNistJavaxSipStackIOHandler_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackIOHandler || defined(INCLUDE_AndroidGovNistJavaxSipStackIOHandler))
#define AndroidGovNistJavaxSipStackIOHandler_

@class AndroidGovNistJavaxSipStackMessageChannel;
@class AndroidGovNistJavaxSipStackSIPTransactionStack;
@class AndroidGovNistJavaxSipStackTLSMessageChannel;
@class IOSByteArray;
@class JavaNetInetAddress;
@class JavaNetSocket;
@class JavaNetSocketAddress;

@interface AndroidGovNistJavaxSipStackIOHandler : NSObject

#pragma mark Public

- (void)closeAll;

- (JavaNetSocketAddress *)getLocalAddressForTcpDstWithJavaNetInetAddress:(JavaNetInetAddress *)dst
                                                                 withInt:(jint)dstPort
                                                  withJavaNetInetAddress:(JavaNetInetAddress *)localAddress
                                                                 withInt:(jint)localPort;

- (JavaNetSocketAddress *)getLocalAddressForTlsDstWithJavaNetInetAddress:(JavaNetInetAddress *)dst
                                                                 withInt:(jint)dstPort
                                                  withJavaNetInetAddress:(JavaNetInetAddress *)localAddress
                        withAndroidGovNistJavaxSipStackTLSMessageChannel:(AndroidGovNistJavaxSipStackTLSMessageChannel *)channel;

- (JavaNetSocket *)sendBytesWithJavaNetInetAddress:(JavaNetInetAddress *)senderAddress
                            withJavaNetInetAddress:(JavaNetInetAddress *)receiverAddress
                                           withInt:(jint)contactPort
                                      withNSString:(NSString *)transport
                                     withByteArray:(IOSByteArray *)bytes
                                       withBoolean:(jboolean)isClient
     withAndroidGovNistJavaxSipStackMessageChannel:(AndroidGovNistJavaxSipStackMessageChannel *)messageChannel;

#pragma mark Protected

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack;

- (JavaNetSocket *)getSocketWithNSString:(NSString *)key;

+ (NSString *)makeKeyWithJavaNetInetAddress:(JavaNetInetAddress *)addr
                                    withInt:(jint)port;

+ (NSString *)makeKeyWithNSString:(NSString *)addr
                          withInt:(jint)port;

- (void)putSocketWithNSString:(NSString *)key
            withJavaNetSocket:(JavaNetSocket *)sock;

- (void)removeSocketWithNSString:(NSString *)key;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackIOHandler)

FOUNDATION_EXPORT NSString *AndroidGovNistJavaxSipStackIOHandler_makeKeyWithJavaNetInetAddress_withInt_(JavaNetInetAddress *addr, jint port);

FOUNDATION_EXPORT NSString *AndroidGovNistJavaxSipStackIOHandler_makeKeyWithNSString_withInt_(NSString *addr, jint port);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackIOHandler_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(AndroidGovNistJavaxSipStackIOHandler *self, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackIOHandler *new_AndroidGovNistJavaxSipStackIOHandler_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackIOHandler *create_AndroidGovNistJavaxSipStackIOHandler_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackIOHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackIOHandler")
