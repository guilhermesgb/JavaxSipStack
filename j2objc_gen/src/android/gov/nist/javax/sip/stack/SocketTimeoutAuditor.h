//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/SocketTimeoutAuditor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackSocketTimeoutAuditor")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackSocketTimeoutAuditor
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackSocketTimeoutAuditor 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackSocketTimeoutAuditor 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackSocketTimeoutAuditor

#if !defined (AndroidGovNistJavaxSipStackSocketTimeoutAuditor_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackSocketTimeoutAuditor || defined(INCLUDE_AndroidGovNistJavaxSipStackSocketTimeoutAuditor))
#define AndroidGovNistJavaxSipStackSocketTimeoutAuditor_

#define RESTRICT_AndroidGovNistJavaxSipStackSIPStackTimerTask 1
#define INCLUDE_AndroidGovNistJavaxSipStackSIPStackTimerTask 1
#include "android/gov/nist/javax/sip/stack/SIPStackTimerTask.h"

@interface AndroidGovNistJavaxSipStackSocketTimeoutAuditor : AndroidGovNistJavaxSipStackSIPStackTimerTask {
 @public
  jlong nioSocketMaxIdleTime_;
}

#pragma mark Public

- (instancetype)initWithLong:(jlong)nioSocketMaxIdleTime;

- (void)runTask;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackSocketTimeoutAuditor)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackSocketTimeoutAuditor_initWithLong_(AndroidGovNistJavaxSipStackSocketTimeoutAuditor *self, jlong nioSocketMaxIdleTime);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackSocketTimeoutAuditor *new_AndroidGovNistJavaxSipStackSocketTimeoutAuditor_initWithLong_(jlong nioSocketMaxIdleTime) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackSocketTimeoutAuditor *create_AndroidGovNistJavaxSipStackSocketTimeoutAuditor_initWithLong_(jlong nioSocketMaxIdleTime);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackSocketTimeoutAuditor)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackSocketTimeoutAuditor")
