//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/ConnectionOrientedMessageProcessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor

#if !defined (AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor || defined(INCLUDE_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor))
#define AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor_

#define RESTRICT_AndroidGovNistJavaxSipStackMessageProcessor 1
#define INCLUDE_AndroidGovNistJavaxSipStackMessageProcessor 1
#include "android/gov/nist/javax/sip/stack/MessageProcessor.h"

@class AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel;
@class AndroidGovNistJavaxSipStackSIPTransactionStack;
@class JavaNetInetAddress;
@class JavaNetServerSocket;
@protocol JavaUtilMap;

@interface AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor : AndroidGovNistJavaxSipStackMessageProcessor {
 @public
  jint nConnections_;
  jboolean isRunning_;
  id<JavaUtilMap> messageChannels_;
  id<JavaUtilMap> incomingMessageChannels_;
  JavaNetServerSocket *sock_;
  jint useCount_;
}

#pragma mark Public

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)ipAddress
                                   withInt:(jint)port
                              withNSString:(NSString *)transport
withAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack;

- (jboolean)closeReliableConnectionWithNSString:(NSString *)peerAddress
                                        withInt:(jint)peerPort;

- (jint)getMaximumMessageSize;

- (AndroidGovNistJavaxSipStackSIPTransactionStack *)getSIPStack;

- (jboolean)inUse;

- (jboolean)setKeepAliveTimeoutWithNSString:(NSString *)peerAddress
                                    withInt:(jint)peerPort
                                   withLong:(jlong)keepAliveTimeout;

#pragma mark Protected

- (void)cacheMessageChannelWithAndroidGovNistJavaxSipStackConnectionOrientedMessageChannel:(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel *)messageChannel;

- (void)removeWithAndroidGovNistJavaxSipStackConnectionOrientedMessageChannel:(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel *)messageChannel;

- (void)validatePortInRangeWithInt:(jint)port;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor, messageChannels_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor, incomingMessageChannels_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor, sock_, JavaNetServerSocket *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor_initWithJavaNetInetAddress_withInt_withNSString_withAndroidGovNistJavaxSipStackSIPTransactionStack_(AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor *self, JavaNetInetAddress *ipAddress, jint port, NSString *transport, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor")
