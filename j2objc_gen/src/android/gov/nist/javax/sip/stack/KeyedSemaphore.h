//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/KeyedSemaphore.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackKeyedSemaphore")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackKeyedSemaphore
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackKeyedSemaphore 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackKeyedSemaphore 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackKeyedSemaphore

#if !defined (AndroidGovNistJavaxSipStackKeyedSemaphore_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackKeyedSemaphore || defined(INCLUDE_AndroidGovNistJavaxSipStackKeyedSemaphore))
#define AndroidGovNistJavaxSipStackKeyedSemaphore_

@class JavaUtilConcurrentConcurrentHashMap;
@protocol OrgSlf4jLogger;

@interface AndroidGovNistJavaxSipStackKeyedSemaphore : NSObject {
 @public
  JavaUtilConcurrentConcurrentHashMap *map_;
}

#pragma mark Public

- (instancetype)init;

- (void)enterIOCriticalSectionWithNSString:(NSString *)key;

- (void)leaveIOCriticalSectionWithNSString:(NSString *)key;

- (void)removeWithNSString:(NSString *)key;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackKeyedSemaphore)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackKeyedSemaphore, map_, JavaUtilConcurrentConcurrentHashMap *)

inline id<OrgSlf4jLogger> AndroidGovNistJavaxSipStackKeyedSemaphore_get_logger();
inline id<OrgSlf4jLogger> AndroidGovNistJavaxSipStackKeyedSemaphore_set_logger(id<OrgSlf4jLogger> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgSlf4jLogger> AndroidGovNistJavaxSipStackKeyedSemaphore_logger;
J2OBJC_STATIC_FIELD_OBJ(AndroidGovNistJavaxSipStackKeyedSemaphore, logger, id<OrgSlf4jLogger>)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackKeyedSemaphore_init(AndroidGovNistJavaxSipStackKeyedSemaphore *self);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackKeyedSemaphore *new_AndroidGovNistJavaxSipStackKeyedSemaphore_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackKeyedSemaphore *create_AndroidGovNistJavaxSipStackKeyedSemaphore_init();

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackKeyedSemaphore)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackKeyedSemaphore")
