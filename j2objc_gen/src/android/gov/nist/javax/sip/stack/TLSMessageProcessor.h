//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/TLSMessageProcessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackTLSMessageProcessor")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackTLSMessageProcessor
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackTLSMessageProcessor 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackTLSMessageProcessor 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackTLSMessageProcessor

#if !defined (AndroidGovNistJavaxSipStackTLSMessageProcessor_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackTLSMessageProcessor || defined(INCLUDE_AndroidGovNistJavaxSipStackTLSMessageProcessor))
#define AndroidGovNistJavaxSipStackTLSMessageProcessor_

#define RESTRICT_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor 1
#define INCLUDE_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor 1
#include "android/gov/nist/javax/sip/stack/ConnectionOrientedMessageProcessor.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class AndroidGovNistCoreHostPort;
@class AndroidGovNistJavaxSipStackMessageChannel;
@class AndroidGovNistJavaxSipStackSIPTransactionStack;
@class JavaNetInetAddress;

@interface AndroidGovNistJavaxSipStackTLSMessageProcessor : AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor < JavaLangRunnable >

#pragma mark Public

- (AndroidGovNistJavaxSipStackMessageChannel *)createMessageChannelWithAndroidGovNistCoreHostPort:(AndroidGovNistCoreHostPort *)targetHostPort;

- (AndroidGovNistJavaxSipStackMessageChannel *)createMessageChannelWithJavaNetInetAddress:(JavaNetInetAddress *)host
                                                                                  withInt:(jint)port;

- (jint)getDefaultTargetPort;

- (jboolean)isSecure;

- (void)run;

- (void)start;

- (void)stop;

#pragma mark Protected

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)ipAddress
withAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack
                                   withInt:(jint)port;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackTLSMessageProcessor)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackTLSMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(AndroidGovNistJavaxSipStackTLSMessageProcessor *self, JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackTLSMessageProcessor *new_AndroidGovNistJavaxSipStackTLSMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackTLSMessageProcessor *create_AndroidGovNistJavaxSipStackTLSMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackTLSMessageProcessor)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackTLSMessageProcessor")
