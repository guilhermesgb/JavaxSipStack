//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/SIPServerTransaction.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackSIPServerTransaction")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackSIPServerTransaction
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackSIPServerTransaction 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackSIPServerTransaction 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackSIPServerTransaction

#if !defined (AndroidGovNistJavaxSipStackSIPServerTransaction_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackSIPServerTransaction || defined(INCLUDE_AndroidGovNistJavaxSipStackSIPServerTransaction))
#define AndroidGovNistJavaxSipStackSIPServerTransaction_

#define RESTRICT_AndroidGovNistJavaxSipStackSIPTransaction 1
#define INCLUDE_AndroidGovNistJavaxSipStackSIPTransaction 1
#include "android/gov/nist/javax/sip/stack/SIPTransaction.h"

#define RESTRICT_AndroidJavaxSipServerTransaction 1
#define INCLUDE_AndroidJavaxSipServerTransaction 1
#include "android/javax/sip/ServerTransaction.h"

#define RESTRICT_AndroidGovNistJavaxSipServerTransactionExt 1
#define INCLUDE_AndroidGovNistJavaxSipServerTransactionExt 1
#include "android/gov/nist/javax/sip/ServerTransactionExt.h"

#define RESTRICT_AndroidGovNistJavaxSipStackServerRequestInterface 1
#define INCLUDE_AndroidGovNistJavaxSipStackServerRequestInterface 1
#include "android/gov/nist/javax/sip/stack/ServerRequestInterface.h"

@class AndroidGovNistJavaxSipMessageSIPMessage;
@class AndroidGovNistJavaxSipMessageSIPRequest;
@class AndroidGovNistJavaxSipStackMessageChannel;
@class AndroidGovNistJavaxSipStackSIPDialog;
@class AndroidJavaxSipTransactionState;
@class IOSByteArray;
@protocol AndroidGovNistJavaxSipStackSIPClientTransaction;
@protocol AndroidJavaxSipDialog;
@protocol AndroidJavaxSipMessageResponse;

@protocol AndroidGovNistJavaxSipStackSIPServerTransaction < AndroidGovNistJavaxSipStackSIPTransaction, AndroidJavaxSipServerTransaction, AndroidGovNistJavaxSipServerTransactionExt, AndroidGovNistJavaxSipStackServerRequestInterface, JavaObject >

- (void)setRequestInterfaceWithAndroidGovNistJavaxSipStackServerRequestInterface:(id<AndroidGovNistJavaxSipStackServerRequestInterface>)newRequestOf;

- (AndroidGovNistJavaxSipStackMessageChannel *)getResponseChannel;

- (jboolean)isMessagePartOfTransactionWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)messageToTest;

- (jboolean)isTransactionMapped;

- (void)setTransactionMappedWithBoolean:(jboolean)transactionMapped;

- (void)processRequestWithAndroidGovNistJavaxSipMessageSIPRequest:(AndroidGovNistJavaxSipMessageSIPRequest *)transactionRequest
                    withAndroidGovNistJavaxSipStackMessageChannel:(AndroidGovNistJavaxSipStackMessageChannel *)sourceChannel;

- (void)sendMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)messageToSend;

- (NSString *)getViaHost;

- (jint)getViaPort;

- (void)resendLastResponseAsBytes;

- (jint)getLastResponseStatusCode;

- (void)setOriginalRequestWithAndroidGovNistJavaxSipMessageSIPRequest:(AndroidGovNistJavaxSipMessageSIPRequest *)originalRequest;

- (void)sendResponseWithAndroidJavaxSipMessageResponse:(id<AndroidJavaxSipMessageResponse>)response;

- (AndroidJavaxSipTransactionState *)getState;

- (void)setStateWithInt:(jint)newState;

- (jboolean)isEqual:(id)other;

- (id<AndroidJavaxSipDialog>)getDialog;

- (void)setDialogWithAndroidGovNistJavaxSipStackSIPDialog:(AndroidGovNistJavaxSipStackSIPDialog *)sipDialog
                                             withNSString:(NSString *)dialogId;

- (void)terminate;

- (IOSByteArray *)getReliableProvisionalResponse;

- (jboolean)prackRecieved;

- (void)enableRetransmissionAlerts;

- (jboolean)isRetransmissionAlertEnabled;

- (void)disableRetransmissionAlerts;

- (void)setAckSeen;

- (jboolean)ackSeen;

- (void)setMappedWithBoolean:(jboolean)b;

- (void)setPendingSubscribeWithAndroidGovNistJavaxSipStackSIPClientTransaction:(id<AndroidGovNistJavaxSipStackSIPClientTransaction>)pendingSubscribeClientTx;

- (void)releaseSem;

- (void)setInviteTransactionWithAndroidGovNistJavaxSipStackSIPServerTransaction:(id<AndroidGovNistJavaxSipStackSIPServerTransaction>)st;

- (id<AndroidGovNistJavaxSipStackSIPServerTransaction>)getCanceledInviteTransaction;

- (void)scheduleAckRemoval;

- (void)cleanUp;

- (NSString *)getPendingReliableResponseMethod;

- (jlong)getPendingReliableCSeqNumber;

- (jlong)getPendingReliableRSeqNumber;

- (void)waitForTermination;

- (void)sendReliableProvisionalResponseWithAndroidJavaxSipMessageResponse:(id<AndroidJavaxSipMessageResponse>)relResponse;

- (void)map;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipStackSIPServerTransaction)

inline NSString *AndroidGovNistJavaxSipStackSIPServerTransaction_get_CONTENT_TYPE_APPLICATION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AndroidGovNistJavaxSipStackSIPServerTransaction_CONTENT_TYPE_APPLICATION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidGovNistJavaxSipStackSIPServerTransaction, CONTENT_TYPE_APPLICATION, NSString *)

inline NSString *AndroidGovNistJavaxSipStackSIPServerTransaction_get_CONTENT_SUBTYPE_SDP();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AndroidGovNistJavaxSipStackSIPServerTransaction_CONTENT_SUBTYPE_SDP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidGovNistJavaxSipStackSIPServerTransaction, CONTENT_SUBTYPE_SDP, NSString *)

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackSIPServerTransaction)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackSIPServerTransaction")
