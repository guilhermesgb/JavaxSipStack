//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/NIOHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackNIOHandler")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackNIOHandler
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackNIOHandler 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackNIOHandler 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackNIOHandler

#if !defined (AndroidGovNistJavaxSipStackNIOHandler_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackNIOHandler || defined(INCLUDE_AndroidGovNistJavaxSipStackNIOHandler))
#define AndroidGovNistJavaxSipStackNIOHandler_

@class AndroidGovNistJavaxSipStackKeyedSemaphore;
@class AndroidGovNistJavaxSipStackNioTcpMessageChannel;
@class AndroidGovNistJavaxSipStackNioTcpMessageProcessor;
@class AndroidGovNistJavaxSipStackSIPTransactionStack;
@class IOSByteArray;
@class JavaNetInetAddress;
@class JavaNioChannelsSocketChannel;

@interface AndroidGovNistJavaxSipStackNIOHandler : NSObject {
 @public
  AndroidGovNistJavaxSipStackKeyedSemaphore *keyedSemaphore_;
}

#pragma mark Public

- (void)closeAll;

- (JavaNioChannelsSocketChannel *)createOrReuseSocketWithJavaNetInetAddress:(JavaNetInetAddress *)inetAddress
                                                                    withInt:(jint)port;

- (JavaNioChannelsSocketChannel *)sendBytesWithJavaNetInetAddress:(JavaNetInetAddress *)senderAddress
                                           withJavaNetInetAddress:(JavaNetInetAddress *)receiverAddress
                                                          withInt:(jint)contactPort
                                                     withNSString:(NSString *)transport
                                                    withByteArray:(IOSByteArray *)bytes
                                                      withBoolean:(jboolean)isClient
              withAndroidGovNistJavaxSipStackNioTcpMessageChannel:(AndroidGovNistJavaxSipStackNioTcpMessageChannel *)messageChannel;

- (void)stop;

#pragma mark Protected

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack
                 withAndroidGovNistJavaxSipStackNioTcpMessageProcessor:(AndroidGovNistJavaxSipStackNioTcpMessageProcessor *)messageProcessor;

- (JavaNioChannelsSocketChannel *)getSocketWithNSString:(NSString *)key;

+ (NSString *)makeKeyWithJavaNetInetAddress:(JavaNetInetAddress *)addr
                                    withInt:(jint)port;

+ (NSString *)makeKeyWithNSString:(NSString *)addr
                          withInt:(jint)port;

- (void)putSocketWithNSString:(NSString *)key
withJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)sock;

- (void)removeSocketWithJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)channel;

- (void)removeSocketWithNSString:(NSString *)key;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackNIOHandler)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackNIOHandler, keyedSemaphore_, AndroidGovNistJavaxSipStackKeyedSemaphore *)

FOUNDATION_EXPORT NSString *AndroidGovNistJavaxSipStackNIOHandler_makeKeyWithJavaNetInetAddress_withInt_(JavaNetInetAddress *addr, jint port);

FOUNDATION_EXPORT NSString *AndroidGovNistJavaxSipStackNIOHandler_makeKeyWithNSString_withInt_(NSString *addr, jint port);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackNIOHandler_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackNioTcpMessageProcessor_(AndroidGovNistJavaxSipStackNIOHandler *self, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackNioTcpMessageProcessor *messageProcessor);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackNIOHandler *new_AndroidGovNistJavaxSipStackNIOHandler_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackNioTcpMessageProcessor_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackNioTcpMessageProcessor *messageProcessor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackNIOHandler *create_AndroidGovNistJavaxSipStackNIOHandler_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackNioTcpMessageProcessor_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackNioTcpMessageProcessor *messageProcessor);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackNIOHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackNIOHandler")
