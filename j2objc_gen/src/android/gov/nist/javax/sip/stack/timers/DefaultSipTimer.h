//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/timers/DefaultSipTimer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackTimersDefaultSipTimer")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackTimersDefaultSipTimer
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackTimersDefaultSipTimer 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackTimersDefaultSipTimer 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackTimersDefaultSipTimer

#if !defined (AndroidGovNistJavaxSipStackTimersDefaultSipTimer_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackTimersDefaultSipTimer || defined(INCLUDE_AndroidGovNistJavaxSipStackTimersDefaultSipTimer))
#define AndroidGovNistJavaxSipStackTimersDefaultSipTimer_

#define RESTRICT_JavaUtilTimer 1
#define INCLUDE_JavaUtilTimer 1
#include "java/util/Timer.h"

#define RESTRICT_AndroidGovNistJavaxSipStackTimersSipTimer 1
#define INCLUDE_AndroidGovNistJavaxSipStackTimersSipTimer 1
#include "android/gov/nist/javax/sip/stack/timers/SipTimer.h"

@class AndroidGovNistJavaxSipSipStackImpl;
@class AndroidGovNistJavaxSipStackSIPStackTimerTask;
@class JavaUtilConcurrentAtomicAtomicBoolean;
@class JavaUtilProperties;

@interface AndroidGovNistJavaxSipStackTimersDefaultSipTimer : JavaUtilTimer < AndroidGovNistJavaxSipStackTimersSipTimer > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *started_;
  AndroidGovNistJavaxSipSipStackImpl *sipStackImpl_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)cancelWithAndroidGovNistJavaxSipStackSIPStackTimerTask:(AndroidGovNistJavaxSipStackSIPStackTimerTask *)task;

- (jboolean)isStarted;

- (jboolean)scheduleWithAndroidGovNistJavaxSipStackSIPStackTimerTask:(AndroidGovNistJavaxSipStackSIPStackTimerTask *)task
                                                            withLong:(jlong)delay;

- (jboolean)scheduleWithFixedDelayWithAndroidGovNistJavaxSipStackSIPStackTimerTask:(AndroidGovNistJavaxSipStackSIPStackTimerTask *)task
                                                                          withLong:(jlong)delay
                                                                          withLong:(jlong)period;

- (void)startWithAndroidGovNistJavaxSipSipStackImpl:(AndroidGovNistJavaxSipSipStackImpl *)sipStack
                             withJavaUtilProperties:(JavaUtilProperties *)configurationProperties;

- (void)stop;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackTimersDefaultSipTimer)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackTimersDefaultSipTimer, started_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackTimersDefaultSipTimer, sipStackImpl_, AndroidGovNistJavaxSipSipStackImpl *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackTimersDefaultSipTimer_init(AndroidGovNistJavaxSipStackTimersDefaultSipTimer *self);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackTimersDefaultSipTimer *new_AndroidGovNistJavaxSipStackTimersDefaultSipTimer_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackTimersDefaultSipTimer *create_AndroidGovNistJavaxSipStackTimersDefaultSipTimer_init();

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackTimersDefaultSipTimer)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackTimersDefaultSipTimer")
