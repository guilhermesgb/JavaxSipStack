//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/UDPMessageChannel.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackUDPMessageChannel")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackUDPMessageChannel
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackUDPMessageChannel 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackUDPMessageChannel 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackUDPMessageChannel

#if !defined (AndroidGovNistJavaxSipStackUDPMessageChannel_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackUDPMessageChannel || defined(INCLUDE_AndroidGovNistJavaxSipStackUDPMessageChannel))
#define AndroidGovNistJavaxSipStackUDPMessageChannel_

#define RESTRICT_AndroidGovNistJavaxSipStackMessageChannel 1
#define INCLUDE_AndroidGovNistJavaxSipStackMessageChannel 1
#include "android/gov/nist/javax/sip/stack/MessageChannel.h"

#define RESTRICT_AndroidGovNistJavaxSipParserParseExceptionListener 1
#define INCLUDE_AndroidGovNistJavaxSipParserParseExceptionListener 1
#include "android/gov/nist/javax/sip/parser/ParseExceptionListener.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

#define RESTRICT_AndroidGovNistJavaxSipStackRawMessageChannel 1
#define INCLUDE_AndroidGovNistJavaxSipStackRawMessageChannel 1
#include "android/gov/nist/javax/sip/stack/RawMessageChannel.h"

@class AndroidGovNistJavaxSipMessageSIPMessage;
@class AndroidGovNistJavaxSipStackSIPTransactionStack;
@class AndroidGovNistJavaxSipStackUDPMessageProcessor;
@class IOSByteArray;
@class IOSClass;
@class JavaNetDatagramPacket;
@class JavaNetInetAddress;
@class JavaTextParseException;
@protocol AndroidGovNistJavaxSipParserMessageParser;

@interface AndroidGovNistJavaxSipStackUDPMessageChannel : AndroidGovNistJavaxSipStackMessageChannel < AndroidGovNistJavaxSipParserParseExceptionListener, JavaLangRunnable, AndroidGovNistJavaxSipStackRawMessageChannel > {
 @public
  AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack_;
  id<AndroidGovNistJavaxSipParserMessageParser> myParser_;
  jint myPort_;
}

#pragma mark Public

- (void)close;

- (jboolean)isEqual:(id)other;

- (NSString *)getHost;

- (NSString *)getKey;

- (NSString *)getPeerAddress;

- (NSString *)getPeerName;

- (JavaNetInetAddress *)getPeerPacketSourceAddress;

- (jint)getPeerPacketSourcePort;

- (jint)getPeerPort;

- (NSString *)getPeerProtocol;

- (jint)getPort;

- (AndroidGovNistJavaxSipStackSIPTransactionStack *)getSIPStack;

- (NSString *)getTransport;

- (NSString *)getViaHost;

- (jint)getViaPort;

- (void)handleExceptionWithJavaTextParseException:(JavaTextParseException *)ex
      withAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage
                                     withIOSClass:(IOSClass *)hdrClass
                                     withNSString:(NSString *)header
                                     withNSString:(NSString *)message;

- (jboolean)isReliable;

- (jboolean)isSecure;

- (void)processMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage;

- (void)run;

- (void)sendMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage;

#pragma mark Protected

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)targetAddr
                                   withInt:(jint)port
withAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack
withAndroidGovNistJavaxSipStackUDPMessageProcessor:(AndroidGovNistJavaxSipStackUDPMessageProcessor *)messageProcessor;

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)stack
                    withAndroidGovNistJavaxSipStackUDPMessageProcessor:(AndroidGovNistJavaxSipStackUDPMessageProcessor *)messageProcessor
                                             withJavaNetDatagramPacket:(JavaNetDatagramPacket *)packet;

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)stack
                    withAndroidGovNistJavaxSipStackUDPMessageProcessor:(AndroidGovNistJavaxSipStackUDPMessageProcessor *)messageProcessor
                                                          withNSString:(NSString *)threadName;

- (JavaNetInetAddress *)getPeerInetAddress;

- (void)sendMessageWithByteArray:(IOSByteArray *)msg
          withJavaNetInetAddress:(JavaNetInetAddress *)peerAddress
                         withInt:(jint)peerPort
                     withBoolean:(jboolean)reConnect;

- (void)sendMessageWithByteArray:(IOSByteArray *)msg
          withJavaNetInetAddress:(JavaNetInetAddress *)peerAddress
                         withInt:(jint)peerPort
                    withNSString:(NSString *)peerProtocol
                     withBoolean:(jboolean)retry;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackUDPMessageChannel)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackUDPMessageChannel, sipStack_, AndroidGovNistJavaxSipStackSIPTransactionStack *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackUDPMessageChannel, myParser_, id<AndroidGovNistJavaxSipParserMessageParser>)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackUDPMessageChannel_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackUDPMessageProcessor_withNSString_(AndroidGovNistJavaxSipStackUDPMessageChannel *self, AndroidGovNistJavaxSipStackSIPTransactionStack *stack, AndroidGovNistJavaxSipStackUDPMessageProcessor *messageProcessor, NSString *threadName);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackUDPMessageChannel *new_AndroidGovNistJavaxSipStackUDPMessageChannel_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackUDPMessageProcessor_withNSString_(AndroidGovNistJavaxSipStackSIPTransactionStack *stack, AndroidGovNistJavaxSipStackUDPMessageProcessor *messageProcessor, NSString *threadName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackUDPMessageChannel *create_AndroidGovNistJavaxSipStackUDPMessageChannel_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackUDPMessageProcessor_withNSString_(AndroidGovNistJavaxSipStackSIPTransactionStack *stack, AndroidGovNistJavaxSipStackUDPMessageProcessor *messageProcessor, NSString *threadName);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackUDPMessageChannel_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackUDPMessageProcessor_withJavaNetDatagramPacket_(AndroidGovNistJavaxSipStackUDPMessageChannel *self, AndroidGovNistJavaxSipStackSIPTransactionStack *stack, AndroidGovNistJavaxSipStackUDPMessageProcessor *messageProcessor, JavaNetDatagramPacket *packet);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackUDPMessageChannel *new_AndroidGovNistJavaxSipStackUDPMessageChannel_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackUDPMessageProcessor_withJavaNetDatagramPacket_(AndroidGovNistJavaxSipStackSIPTransactionStack *stack, AndroidGovNistJavaxSipStackUDPMessageProcessor *messageProcessor, JavaNetDatagramPacket *packet) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackUDPMessageChannel *create_AndroidGovNistJavaxSipStackUDPMessageChannel_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackUDPMessageProcessor_withJavaNetDatagramPacket_(AndroidGovNistJavaxSipStackSIPTransactionStack *stack, AndroidGovNistJavaxSipStackUDPMessageProcessor *messageProcessor, JavaNetDatagramPacket *packet);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackUDPMessageChannel_initWithJavaNetInetAddress_withInt_withAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackUDPMessageProcessor_(AndroidGovNistJavaxSipStackUDPMessageChannel *self, JavaNetInetAddress *targetAddr, jint port, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackUDPMessageProcessor *messageProcessor);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackUDPMessageChannel *new_AndroidGovNistJavaxSipStackUDPMessageChannel_initWithJavaNetInetAddress_withInt_withAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackUDPMessageProcessor_(JavaNetInetAddress *targetAddr, jint port, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackUDPMessageProcessor *messageProcessor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackUDPMessageChannel *create_AndroidGovNistJavaxSipStackUDPMessageChannel_initWithJavaNetInetAddress_withInt_withAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackUDPMessageProcessor_(JavaNetInetAddress *targetAddr, jint port, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackUDPMessageProcessor *messageProcessor);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackUDPMessageChannel)

#endif

#if !defined (AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackUDPMessageChannel || defined(INCLUDE_AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask))
#define AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask_

#define RESTRICT_AndroidGovNistJavaxSipStackSIPStackTimerTask 1
#define INCLUDE_AndroidGovNistJavaxSipStackSIPStackTimerTask 1
#include "android/gov/nist/javax/sip/stack/SIPStackTimerTask.h"

@class AndroidGovNistJavaxSipStackUDPMessageChannel;

@interface AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask : AndroidGovNistJavaxSipStackSIPStackTimerTask {
 @public
  NSString *ipAddress_;
  jint port_;
}

#pragma mark Public

- (instancetype)initWithAndroidGovNistJavaxSipStackUDPMessageChannel:(AndroidGovNistJavaxSipStackUDPMessageChannel *)outer$
                                                        withNSString:(NSString *)ipAddress
                                                             withInt:(jint)port;

- (NSUInteger)hash;

- (void)runTask;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask, ipAddress_, NSString *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask_initWithAndroidGovNistJavaxSipStackUDPMessageChannel_withNSString_withInt_(AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask *self, AndroidGovNistJavaxSipStackUDPMessageChannel *outer$, NSString *ipAddress, jint port);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask *new_AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask_initWithAndroidGovNistJavaxSipStackUDPMessageChannel_withNSString_withInt_(AndroidGovNistJavaxSipStackUDPMessageChannel *outer$, NSString *ipAddress, jint port) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask *create_AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask_initWithAndroidGovNistJavaxSipStackUDPMessageChannel_withNSString_withInt_(AndroidGovNistJavaxSipStackUDPMessageChannel *outer$, NSString *ipAddress, jint port);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackUDPMessageChannel_PingBackTimerTask)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackUDPMessageChannel")
