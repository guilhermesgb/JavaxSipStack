//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/TCPMessageChannel.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackTCPMessageChannel")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackTCPMessageChannel
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackTCPMessageChannel 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackTCPMessageChannel 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackTCPMessageChannel

#if !defined (AndroidGovNistJavaxSipStackTCPMessageChannel_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackTCPMessageChannel || defined(INCLUDE_AndroidGovNistJavaxSipStackTCPMessageChannel))
#define AndroidGovNistJavaxSipStackTCPMessageChannel_

#define RESTRICT_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel 1
#define INCLUDE_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel 1
#include "android/gov/nist/javax/sip/stack/ConnectionOrientedMessageChannel.h"

@class AndroidGovNistJavaxSipMessageSIPMessage;
@class AndroidGovNistJavaxSipStackSIPTransactionStack;
@class AndroidGovNistJavaxSipStackTCPMessageProcessor;
@class IOSByteArray;
@class IOSClass;
@class JavaIoOutputStream;
@class JavaNetInetAddress;
@class JavaNetSocket;
@class JavaTextParseException;

@interface AndroidGovNistJavaxSipStackTCPMessageChannel : AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel {
 @public
  JavaIoOutputStream *myClientOutputStream_;
}

#pragma mark Public

- (void)closeWithBoolean:(jboolean)removeSocket
             withBoolean:(jboolean)stopKeepAliveTask;

- (jboolean)isEqual:(id)other;

- (NSString *)getTransport;

- (void)handleExceptionWithJavaTextParseException:(JavaTextParseException *)ex
      withAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage
                                     withIOSClass:(IOSClass *)hdrClass
                                     withNSString:(NSString *)header
                                     withNSString:(NSString *)message;

- (jboolean)isSecure;

- (void)sendMessageWithByteArray:(IOSByteArray *)message
          withJavaNetInetAddress:(JavaNetInetAddress *)receiverAddress
                         withInt:(jint)receiverPort
                     withBoolean:(jboolean)retry;

#pragma mark Protected

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)inetAddr
                                   withInt:(jint)port
withAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack
withAndroidGovNistJavaxSipStackTCPMessageProcessor:(AndroidGovNistJavaxSipStackTCPMessageProcessor *)messageProcessor;

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack;

- (instancetype)initWithJavaNetSocket:(JavaNetSocket *)sock
withAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack
withAndroidGovNistJavaxSipStackTCPMessageProcessor:(AndroidGovNistJavaxSipStackTCPMessageProcessor *)msgProcessor
                         withNSString:(NSString *)threadName;

- (void)sendMessageWithByteArray:(IOSByteArray *)msg
                     withBoolean:(jboolean)isClient;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackTCPMessageChannel)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackTCPMessageChannel, myClientOutputStream_, JavaIoOutputStream *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackTCPMessageChannel_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(AndroidGovNistJavaxSipStackTCPMessageChannel *self, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackTCPMessageChannel *new_AndroidGovNistJavaxSipStackTCPMessageChannel_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackTCPMessageChannel *create_AndroidGovNistJavaxSipStackTCPMessageChannel_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackTCPMessageChannel_initWithJavaNetSocket_withAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackTCPMessageProcessor_withNSString_(AndroidGovNistJavaxSipStackTCPMessageChannel *self, JavaNetSocket *sock, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackTCPMessageProcessor *msgProcessor, NSString *threadName);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackTCPMessageChannel *new_AndroidGovNistJavaxSipStackTCPMessageChannel_initWithJavaNetSocket_withAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackTCPMessageProcessor_withNSString_(JavaNetSocket *sock, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackTCPMessageProcessor *msgProcessor, NSString *threadName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackTCPMessageChannel *create_AndroidGovNistJavaxSipStackTCPMessageChannel_initWithJavaNetSocket_withAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackTCPMessageProcessor_withNSString_(JavaNetSocket *sock, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackTCPMessageProcessor *msgProcessor, NSString *threadName);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackTCPMessageChannel_initWithJavaNetInetAddress_withInt_withAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackTCPMessageProcessor_(AndroidGovNistJavaxSipStackTCPMessageChannel *self, JavaNetInetAddress *inetAddr, jint port, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackTCPMessageProcessor *messageProcessor);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackTCPMessageChannel *new_AndroidGovNistJavaxSipStackTCPMessageChannel_initWithJavaNetInetAddress_withInt_withAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackTCPMessageProcessor_(JavaNetInetAddress *inetAddr, jint port, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackTCPMessageProcessor *messageProcessor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackTCPMessageChannel *create_AndroidGovNistJavaxSipStackTCPMessageChannel_initWithJavaNetInetAddress_withInt_withAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackTCPMessageProcessor_(JavaNetInetAddress *inetAddr, jint port, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipStackTCPMessageProcessor *messageProcessor);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackTCPMessageChannel)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackTCPMessageChannel")
