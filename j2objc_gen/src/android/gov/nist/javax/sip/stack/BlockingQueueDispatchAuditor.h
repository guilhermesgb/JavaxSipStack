//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/BlockingQueueDispatchAuditor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor

#if !defined (AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor || defined(INCLUDE_AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor))
#define AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor_

#define RESTRICT_JavaUtilTimerTask 1
#define INCLUDE_JavaUtilTimerTask 1
#include "java/util/TimerTask.h"

@protocol JavaUtilQueue;

@interface AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor : JavaUtilTimerTask

#pragma mark Public

- (instancetype)initWithJavaUtilQueue:(id<JavaUtilQueue>)queue;

- (jint)getTimeout;

- (void)run;

- (void)setTimeoutWithInt:(jint)timeout;

- (void)startWithInt:(jint)interval;

- (void)stop;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor_initWithJavaUtilQueue_(AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor *self, id<JavaUtilQueue> queue);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor *new_AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor_initWithJavaUtilQueue_(id<JavaUtilQueue> queue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor *create_AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor_initWithJavaUtilQueue_(id<JavaUtilQueue> queue);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackBlockingQueueDispatchAuditor")
