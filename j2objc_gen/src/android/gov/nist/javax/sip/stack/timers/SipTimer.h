//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/timers/SipTimer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackTimersSipTimer")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackTimersSipTimer
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackTimersSipTimer 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackTimersSipTimer 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackTimersSipTimer

#if !defined (AndroidGovNistJavaxSipStackTimersSipTimer_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackTimersSipTimer || defined(INCLUDE_AndroidGovNistJavaxSipStackTimersSipTimer))
#define AndroidGovNistJavaxSipStackTimersSipTimer_

@class AndroidGovNistJavaxSipSipStackImpl;
@class AndroidGovNistJavaxSipStackSIPStackTimerTask;
@class JavaUtilProperties;

@protocol AndroidGovNistJavaxSipStackTimersSipTimer < JavaObject >

- (jboolean)scheduleWithAndroidGovNistJavaxSipStackSIPStackTimerTask:(AndroidGovNistJavaxSipStackSIPStackTimerTask *)task
                                                            withLong:(jlong)delay;

- (jboolean)scheduleWithFixedDelayWithAndroidGovNistJavaxSipStackSIPStackTimerTask:(AndroidGovNistJavaxSipStackSIPStackTimerTask *)task
                                                                          withLong:(jlong)delay
                                                                          withLong:(jlong)period;

- (void)stop;

- (jboolean)cancelWithAndroidGovNistJavaxSipStackSIPStackTimerTask:(AndroidGovNistJavaxSipStackSIPStackTimerTask *)task;

- (void)startWithAndroidGovNistJavaxSipSipStackImpl:(AndroidGovNistJavaxSipSipStackImpl *)sipStack
                             withJavaUtilProperties:(JavaUtilProperties *)configurationProperties;

- (jboolean)isStarted;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipStackTimersSipTimer)

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackTimersSipTimer)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackTimersSipTimer")
