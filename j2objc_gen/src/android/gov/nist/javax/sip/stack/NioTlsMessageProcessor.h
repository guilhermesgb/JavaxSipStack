//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/NioTlsMessageProcessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTlsMessageProcessor")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackNioTlsMessageProcessor
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTlsMessageProcessor 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTlsMessageProcessor 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackNioTlsMessageProcessor

#if !defined (AndroidGovNistJavaxSipStackNioTlsMessageProcessor_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTlsMessageProcessor || defined(INCLUDE_AndroidGovNistJavaxSipStackNioTlsMessageProcessor))
#define AndroidGovNistJavaxSipStackNioTlsMessageProcessor_

#define RESTRICT_AndroidGovNistJavaxSipStackNioTcpMessageProcessor 1
#define INCLUDE_AndroidGovNistJavaxSipStackNioTcpMessageProcessor 1
#include "android/gov/nist/javax/sip/stack/NioTcpMessageProcessor.h"

@class AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel;
@class AndroidGovNistJavaxSipStackNioTcpMessageChannel;
@class AndroidGovNistJavaxSipStackSIPTransactionStack;
@class IOSObjectArray;
@class JavaNetInetAddress;
@class JavaNioChannelsSocketChannel;
@class JavaxNetSslSSLContext;

@interface AndroidGovNistJavaxSipStackNioTlsMessageProcessor : AndroidGovNistJavaxSipStackNioTcpMessageProcessor {
 @public
  IOSObjectArray *trustAllCerts_;
  JavaxNetSslSSLContext *sslServerCtx_;
  JavaxNetSslSSLContext *sslClientCtx_;
}

#pragma mark Public

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)ipAddress
withAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack
                                   withInt:(jint)port;

- (AndroidGovNistJavaxSipStackNioTcpMessageChannel *)createMessageChannelWithAndroidGovNistJavaxSipStackNioTcpMessageProcessor:(AndroidGovNistJavaxSipStackNioTcpMessageProcessor *)nioTcpMessageProcessor
                                                                                              withJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)client;

- (void)init__ OBJC_METHOD_FAMILY_NONE;

#pragma mark Package-Private

- (AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel *)constructMessageChannelWithJavaNetInetAddress:(JavaNetInetAddress *)targetHost
                                                                                                       withInt:(jint)port;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackNioTlsMessageProcessor)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackNioTlsMessageProcessor, trustAllCerts_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackNioTlsMessageProcessor, sslServerCtx_, JavaxNetSslSSLContext *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackNioTlsMessageProcessor, sslClientCtx_, JavaxNetSslSSLContext *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackNioTlsMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(AndroidGovNistJavaxSipStackNioTlsMessageProcessor *self, JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackNioTlsMessageProcessor *new_AndroidGovNistJavaxSipStackNioTlsMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackNioTlsMessageProcessor *create_AndroidGovNistJavaxSipStackNioTlsMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackNioTlsMessageProcessor)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTlsMessageProcessor")
