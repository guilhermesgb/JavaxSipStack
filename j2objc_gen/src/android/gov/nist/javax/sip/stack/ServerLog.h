//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/ServerLog.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackServerLog")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackServerLog
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackServerLog 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackServerLog 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackServerLog

#if !defined (AndroidGovNistJavaxSipStackServerLog_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackServerLog || defined(INCLUDE_AndroidGovNistJavaxSipStackServerLog))
#define AndroidGovNistJavaxSipStackServerLog_

#define RESTRICT_AndroidGovNistCoreServerLogger 1
#define INCLUDE_AndroidGovNistCoreServerLogger 1
#include "android/gov/nist/core/ServerLogger.h"

@class AndroidGovNistJavaxSipMessageSIPMessage;
@class JavaLangException;
@class JavaUtilProperties;
@protocol AndroidJavaxSipSipStack;
@protocol OrgSlf4jLogger;

@interface AndroidGovNistJavaxSipStackServerLog : NSObject < AndroidGovNistCoreServerLogger > {
 @public
  id<OrgSlf4jLogger> stackLogger_;
  jint traceLevel_;
}

#pragma mark Public

- (instancetype)init;

- (void)checkLogFile;

- (void)closeLogFile;

- (NSString *)getLogFileName;

- (jint)getTraceLevel;

- (void)logExceptionWithJavaLangException:(JavaLangException *)ex;

- (void)logMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)message
                                                 withNSString:(NSString *)from
                                                 withNSString:(NSString *)to
                                                  withBoolean:(jboolean)sender
                                                     withLong:(jlong)time;

- (void)logMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)message
                                                 withNSString:(NSString *)from
                                                 withNSString:(NSString *)to
                                                 withNSString:(NSString *)status
                                                  withBoolean:(jboolean)sender;

- (void)logMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)message
                                                 withNSString:(NSString *)from
                                                 withNSString:(NSString *)to
                                                 withNSString:(NSString *)status
                                                  withBoolean:(jboolean)sender
                                                     withLong:(jlong)time;

- (jboolean)needsLogging;

- (void)setAuxInfoWithNSString:(NSString *)auxInfo;

- (void)setLevelWithInt:(jint)jsipLoggingLevel;

- (void)setLogFileNameWithNSString:(NSString *)name;

- (void)setSipStackWithAndroidJavaxSipSipStack:(id<AndroidJavaxSipSipStack>)sipStack;

- (void)setStackIpAddressWithNSString:(NSString *)ipAddress;

- (void)setStackPropertiesWithJavaUtilProperties:(JavaUtilProperties *)stackProperties;

- (void)setTraceLevelWithInt:(jint)level;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipStackServerLog)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackServerLog, stackLogger_, id<OrgSlf4jLogger>)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackServerLog_init(AndroidGovNistJavaxSipStackServerLog *self);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackServerLog *new_AndroidGovNistJavaxSipStackServerLog_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackServerLog *create_AndroidGovNistJavaxSipStackServerLog_init();

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackServerLog)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackServerLog")
