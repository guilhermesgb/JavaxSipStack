//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/NioTlsChannelInterface.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/stack/NioTlsChannelInterface.h"

@interface AndroidGovNistJavaxSipStackNioTlsChannelInterface : NSObject

@end

@implementation AndroidGovNistJavaxSipStackNioTlsChannelInterface

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaNioByteBuffer;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNioByteBuffer;", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaNioByteBuffer;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 1, 6, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipSipStackImpl;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipClientTransactionExt;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(sendEncryptedDataWithByteArray:);
  methods[1].selector = @selector(prepareAppDataBuffer);
  methods[2].selector = @selector(prepareAppDataBufferWithInt:);
  methods[3].selector = @selector(prepareEncryptedDataBuffer);
  methods[4].selector = @selector(addPlaintextBytesWithByteArray:);
  methods[5].selector = @selector(getSIPStack);
  methods[6].selector = @selector(getEncapsulatedClientTransaction);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "sendEncryptedData", "[B", "LJavaIoIOException;", "prepareAppDataBuffer", "I", "addPlaintextBytes", "LJavaLangException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipStackNioTlsChannelInterface = { "NioTlsChannelInterface", "android.gov.nist.javax.sip.stack", ptrTable, methods, NULL, 7, 0x609, 7, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipStackNioTlsChannelInterface;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipStackNioTlsChannelInterface)
