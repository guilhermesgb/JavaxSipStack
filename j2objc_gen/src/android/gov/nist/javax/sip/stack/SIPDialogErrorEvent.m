//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/SIPDialogErrorEvent.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/DialogTimeoutEvent.h"
#include "android/gov/nist/javax/sip/stack/SIPClientTransaction.h"
#include "android/gov/nist/javax/sip/stack/SIPDialog.h"
#include "android/gov/nist/javax/sip/stack/SIPDialogErrorEvent.h"
#include "java/util/EventObject.h"

@interface AndroidGovNistJavaxSipStackSIPDialogErrorEvent () {
 @public
  jint errorID_;
  id<AndroidGovNistJavaxSipStackSIPClientTransaction> clientTransaction_;
}

@end

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackSIPDialogErrorEvent, clientTransaction_, id<AndroidGovNistJavaxSipStackSIPClientTransaction>)

@implementation AndroidGovNistJavaxSipStackSIPDialogErrorEvent

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPDialog:(AndroidGovNistJavaxSipStackSIPDialog *)sourceDialog
                                                     withInt:(jint)dialogErrorID {
  AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withInt_(self, sourceDialog, dialogErrorID);
  return self;
}

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPDialog:(AndroidGovNistJavaxSipStackSIPDialog *)sourceDialog
         withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason:(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *)reason {
  AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(self, sourceDialog, reason);
  return self;
}

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPDialog:(AndroidGovNistJavaxSipStackSIPDialog *)sourceDialog
         withAndroidGovNistJavaxSipStackSIPClientTransaction:(id<AndroidGovNistJavaxSipStackSIPClientTransaction>)clientTransaction
         withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason:(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *)reason {
  AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipStackSIPClientTransaction_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(self, sourceDialog, clientTransaction, reason);
  return self;
}

- (jint)getErrorID {
  return errorID_;
}

- (id<AndroidGovNistJavaxSipStackSIPClientTransaction>)getClientTransaction {
  return self->clientTransaction_;
}

- (void)setClientTransactionWithAndroidGovNistJavaxSipStackSIPClientTransaction:(id<AndroidGovNistJavaxSipStackSIPClientTransaction>)clientTransaction {
  JreStrongAssign(&self->clientTransaction_, clientTransaction);
}

- (void)dealloc {
  RELEASE_(clientTransaction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipStackSIPClientTransaction;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidGovNistJavaxSipStackSIPDialog:withInt:);
  methods[1].selector = @selector(initWithAndroidGovNistJavaxSipStackSIPDialog:withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason:);
  methods[2].selector = @selector(initWithAndroidGovNistJavaxSipStackSIPDialog:withAndroidGovNistJavaxSipStackSIPClientTransaction:withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason:);
  methods[3].selector = @selector(getErrorID);
  methods[4].selector = @selector(getClientTransaction);
  methods[5].selector = @selector(setClientTransactionWithAndroidGovNistJavaxSipStackSIPClientTransaction:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DIALOG_ACK_NOT_RECEIVED_TIMEOUT", "I", .constantValue.asInt = AndroidGovNistJavaxSipStackSIPDialogErrorEvent_DIALOG_ACK_NOT_RECEIVED_TIMEOUT, 0x19, -1, -1, -1, -1 },
    { "DIALOG_ACK_NOT_SENT_TIMEOUT", "I", .constantValue.asInt = AndroidGovNistJavaxSipStackSIPDialogErrorEvent_DIALOG_ACK_NOT_SENT_TIMEOUT, 0x19, -1, -1, -1, -1 },
    { "DIALOG_REINVITE_TIMEOUT", "I", .constantValue.asInt = AndroidGovNistJavaxSipStackSIPDialogErrorEvent_DIALOG_REINVITE_TIMEOUT, 0x19, -1, -1, -1, -1 },
    { "EARLY_STATE_TIMEOUT", "I", .constantValue.asInt = AndroidGovNistJavaxSipStackSIPDialogErrorEvent_EARLY_STATE_TIMEOUT, 0x19, -1, -1, -1, -1 },
    { "DIALOG_ERROR_INTERNAL_COULD_NOT_TAKE_ACK_SEM", "I", .constantValue.asInt = AndroidGovNistJavaxSipStackSIPDialogErrorEvent_DIALOG_ERROR_INTERNAL_COULD_NOT_TAKE_ACK_SEM, 0x19, -1, -1, -1, -1 },
    { "errorID_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "clientTransaction_", "LAndroidGovNistJavaxSipStackSIPClientTransaction;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidGovNistJavaxSipStackSIPDialog;I", "LAndroidGovNistJavaxSipStackSIPDialog;LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", "LAndroidGovNistJavaxSipStackSIPDialog;LAndroidGovNistJavaxSipStackSIPClientTransaction;LAndroidGovNistJavaxSipDialogTimeoutEvent_Reason;", "setClientTransaction", "LAndroidGovNistJavaxSipStackSIPClientTransaction;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipStackSIPDialogErrorEvent = { "SIPDialogErrorEvent", "android.gov.nist.javax.sip.stack", ptrTable, methods, fields, 7, 0x1, 6, 7, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipStackSIPDialogErrorEvent;
}

@end

void AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withInt_(AndroidGovNistJavaxSipStackSIPDialogErrorEvent *self, AndroidGovNistJavaxSipStackSIPDialog *sourceDialog, jint dialogErrorID) {
  JavaUtilEventObject_initWithId_(self, sourceDialog);
  self->errorID_ = dialogErrorID;
}

AndroidGovNistJavaxSipStackSIPDialogErrorEvent *new_AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withInt_(AndroidGovNistJavaxSipStackSIPDialog *sourceDialog, jint dialogErrorID) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipStackSIPDialogErrorEvent, initWithAndroidGovNistJavaxSipStackSIPDialog_withInt_, sourceDialog, dialogErrorID)
}

AndroidGovNistJavaxSipStackSIPDialogErrorEvent *create_AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withInt_(AndroidGovNistJavaxSipStackSIPDialog *sourceDialog, jint dialogErrorID) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipStackSIPDialogErrorEvent, initWithAndroidGovNistJavaxSipStackSIPDialog_withInt_, sourceDialog, dialogErrorID)
}

void AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(AndroidGovNistJavaxSipStackSIPDialogErrorEvent *self, AndroidGovNistJavaxSipStackSIPDialog *sourceDialog, AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *reason) {
  JavaUtilEventObject_initWithId_(self, sourceDialog);
  if (reason == JreLoadEnum(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason, AckNotReceived)) {
    self->errorID_ = AndroidGovNistJavaxSipStackSIPDialogErrorEvent_DIALOG_ACK_NOT_RECEIVED_TIMEOUT;
  }
  else if (reason == JreLoadEnum(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason, AckNotSent)) {
    self->errorID_ = AndroidGovNistJavaxSipStackSIPDialogErrorEvent_DIALOG_ACK_NOT_SENT_TIMEOUT;
  }
  else if (reason == JreLoadEnum(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason, ReInviteTimeout)) {
    self->errorID_ = AndroidGovNistJavaxSipStackSIPDialogErrorEvent_DIALOG_REINVITE_TIMEOUT;
  }
  else if (reason == JreLoadEnum(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason, CannotAcquireAckSemaphoreForOk)) {
    self->errorID_ = AndroidGovNistJavaxSipStackSIPDialogErrorEvent_DIALOG_ERROR_INTERNAL_COULD_NOT_TAKE_ACK_SEM;
  }
  else if (reason == JreLoadEnum(AndroidGovNistJavaxSipDialogTimeoutEvent_Reason, EarlyStateTimeout)) {
    self->errorID_ = AndroidGovNistJavaxSipStackSIPDialogErrorEvent_EARLY_STATE_TIMEOUT;
  }
}

AndroidGovNistJavaxSipStackSIPDialogErrorEvent *new_AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(AndroidGovNistJavaxSipStackSIPDialog *sourceDialog, AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *reason) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipStackSIPDialogErrorEvent, initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_, sourceDialog, reason)
}

AndroidGovNistJavaxSipStackSIPDialogErrorEvent *create_AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(AndroidGovNistJavaxSipStackSIPDialog *sourceDialog, AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *reason) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipStackSIPDialogErrorEvent, initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_, sourceDialog, reason)
}

void AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipStackSIPClientTransaction_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(AndroidGovNistJavaxSipStackSIPDialogErrorEvent *self, AndroidGovNistJavaxSipStackSIPDialog *sourceDialog, id<AndroidGovNistJavaxSipStackSIPClientTransaction> clientTransaction, AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *reason) {
  AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(self, sourceDialog, reason);
  JreStrongAssign(&self->clientTransaction_, clientTransaction);
}

AndroidGovNistJavaxSipStackSIPDialogErrorEvent *new_AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipStackSIPClientTransaction_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(AndroidGovNistJavaxSipStackSIPDialog *sourceDialog, id<AndroidGovNistJavaxSipStackSIPClientTransaction> clientTransaction, AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *reason) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipStackSIPDialogErrorEvent, initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipStackSIPClientTransaction_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_, sourceDialog, clientTransaction, reason)
}

AndroidGovNistJavaxSipStackSIPDialogErrorEvent *create_AndroidGovNistJavaxSipStackSIPDialogErrorEvent_initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipStackSIPClientTransaction_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_(AndroidGovNistJavaxSipStackSIPDialog *sourceDialog, id<AndroidGovNistJavaxSipStackSIPClientTransaction> clientTransaction, AndroidGovNistJavaxSipDialogTimeoutEvent_Reason *reason) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipStackSIPDialogErrorEvent, initWithAndroidGovNistJavaxSipStackSIPDialog_withAndroidGovNistJavaxSipStackSIPClientTransaction_withAndroidGovNistJavaxSipDialogTimeoutEvent_Reason_, sourceDialog, clientTransaction, reason)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipStackSIPDialogErrorEvent)
