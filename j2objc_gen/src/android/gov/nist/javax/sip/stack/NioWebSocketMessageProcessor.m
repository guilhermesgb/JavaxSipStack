//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/NioWebSocketMessageProcessor.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/stack/ConnectionOrientedMessageChannel.h"
#include "android/gov/nist/javax/sip/stack/NioTcpMessageChannel.h"
#include "android/gov/nist/javax/sip/stack/NioTcpMessageProcessor.h"
#include "android/gov/nist/javax/sip/stack/NioWebSocketMessageChannel.h"
#include "android/gov/nist/javax/sip/stack/NioWebSocketMessageProcessor.h"
#include "android/gov/nist/javax/sip/stack/SIPTransactionStack.h"
#include "java/net/InetAddress.h"
#include "java/nio/channels/SocketChannel.h"
#include "org/slf4j/Logger.h"
#include "org/slf4j/LoggerFactory.h"

inline id<OrgSlf4jLogger> AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor_get_logger();
inline id<OrgSlf4jLogger> AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor_set_logger(id<OrgSlf4jLogger> value);
static id<OrgSlf4jLogger> AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor_logger;
J2OBJC_STATIC_FIELD_OBJ(AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor, logger, id<OrgSlf4jLogger>)

J2OBJC_INITIALIZED_DEFN(AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor)

@implementation AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)ipAddress
withAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack
                                   withInt:(jint)port {
  AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(self, ipAddress, sipStack, port);
  return self;
}

- (AndroidGovNistJavaxSipStackNioTcpMessageChannel *)createMessageChannelWithAndroidGovNistJavaxSipStackNioTcpMessageProcessor:(AndroidGovNistJavaxSipStackNioTcpMessageProcessor *)nioTcpMessageProcessor
                                                                                              withJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)client {
  return AndroidGovNistJavaxSipStackNioWebSocketMessageChannel_createWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackNioWebSocketMessageProcessor_withJavaNioChannelsSocketChannel_(sipStack_, self, client);
}

- (AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel *)constructMessageChannelWithJavaNetInetAddress:(JavaNetInetAddress *)targetHost
                                                                                                       withInt:(jint)port {
  return create_AndroidGovNistJavaxSipStackNioWebSocketMessageChannel_initWithJavaNetInetAddress_withInt_withAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipStackNioTcpMessageProcessor_(targetHost, port, sipStack_, self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipStackNioTcpMessageChannel;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipStackConnectionOrientedMessageChannel;", 0x0, 4, 5, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaNetInetAddress:withAndroidGovNistJavaxSipStackSIPTransactionStack:withInt:);
  methods[1].selector = @selector(createMessageChannelWithAndroidGovNistJavaxSipStackNioTcpMessageProcessor:withJavaNioChannelsSocketChannel:);
  methods[2].selector = @selector(constructMessageChannelWithJavaNetInetAddress:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "LOrgSlf4jLogger;", .constantValue.asLong = 0, 0xa, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaNetInetAddress;LAndroidGovNistJavaxSipStackSIPTransactionStack;I", "createMessageChannel", "LAndroidGovNistJavaxSipStackNioTcpMessageProcessor;LJavaNioChannelsSocketChannel;", "LJavaIoIOException;", "constructMessageChannel", "LJavaNetInetAddress;I", &AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor_logger };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor = { "NioWebSocketMessageProcessor", "android.gov.nist.javax.sip.stack", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor;
}

+ (void)initialize {
  if (self == [AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor class]) {
    JreStrongAssign(&AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor_logger, OrgSlf4jLoggerFactory_getLoggerWithIOSClass_(AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor_class_()));
    J2OBJC_SET_INITIALIZED(AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor)
  }
}

@end

void AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor *self, JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port) {
  AndroidGovNistJavaxSipStackNioTcpMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(self, ipAddress, sipStack, port);
  JreStrongAssign(&self->transport_, @"WS");
}

AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor *new_AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor, initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_, ipAddress, sipStack, port)
}

AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor *create_AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor, initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_, ipAddress, sipStack, port)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipStackNioWebSocketMessageProcessor)
