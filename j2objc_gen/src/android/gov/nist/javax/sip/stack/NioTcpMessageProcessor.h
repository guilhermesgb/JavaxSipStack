//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/NioTcpMessageProcessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTcpMessageProcessor")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackNioTcpMessageProcessor
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTcpMessageProcessor 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTcpMessageProcessor 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackNioTcpMessageProcessor

#if !defined (AndroidGovNistJavaxSipStackNioTcpMessageProcessor_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTcpMessageProcessor || defined(INCLUDE_AndroidGovNistJavaxSipStackNioTcpMessageProcessor))
#define AndroidGovNistJavaxSipStackNioTcpMessageProcessor_

#define RESTRICT_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor 1
#define INCLUDE_AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor 1
#include "android/gov/nist/javax/sip/stack/ConnectionOrientedMessageProcessor.h"

@class AndroidGovNistCoreHostPort;
@class AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel;
@class AndroidGovNistJavaxSipStackMessageChannel;
@class AndroidGovNistJavaxSipStackNIOHandler;
@class AndroidGovNistJavaxSipStackNioTcpMessageChannel;
@class AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask;
@class AndroidGovNistJavaxSipStackSIPTransactionStack;
@class IOSByteArray;
@class JavaLangThread;
@class JavaNetInetAddress;
@class JavaNetInetSocketAddress;
@class JavaNioChannelsSelector;
@class JavaNioChannelsServerSocketChannel;
@class JavaNioChannelsSocketChannel;

@interface AndroidGovNistJavaxSipStackNioTcpMessageProcessor : AndroidGovNistJavaxSipStackConnectionOrientedMessageProcessor {
 @public
  JavaNioChannelsSelector *selector_;
  JavaLangThread *selectorThread_;
  AndroidGovNistJavaxSipStackNIOHandler *nioHandler_;
  JavaNioChannelsServerSocketChannel *channel_;
}

#pragma mark Public

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)ipAddress
withAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack
                                   withInt:(jint)port;

- (JavaNioChannelsSocketChannel *)blockingConnectWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)address
                                                       withJavaNetInetAddress:(JavaNetInetAddress *)localAddress
                                                                      withInt:(jint)timeout;

- (AndroidGovNistJavaxSipStackMessageChannel *)createMessageChannelWithAndroidGovNistCoreHostPort:(AndroidGovNistCoreHostPort *)targetHostPort;

- (AndroidGovNistJavaxSipStackMessageChannel *)createMessageChannelWithJavaNetInetAddress:(JavaNetInetAddress *)targetHost
                                                                                  withInt:(jint)port;

- (AndroidGovNistJavaxSipStackNioTcpMessageChannel *)createMessageChannelWithAndroidGovNistJavaxSipStackNioTcpMessageProcessor:(AndroidGovNistJavaxSipStackNioTcpMessageProcessor *)nioTcpMessageProcessor
                                                                                              withJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)client;

- (jint)getDefaultTargetPort;

- (jboolean)isSecure;

- (void)sendWithJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)socket
                               withByteArray:(IOSByteArray *)data;

- (void)start;

- (void)stop;

#pragma mark Protected

- (AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask *)createProcessorTask;

- (void)removeWithAndroidGovNistJavaxSipStackConnectionOrientedMessageChannel:(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel *)messageChannel;

#pragma mark Package-Private

- (AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel *)constructMessageChannelWithJavaNetInetAddress:(JavaNetInetAddress *)targetHost
                                                                                                       withInt:(jint)port;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackNioTcpMessageProcessor)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackNioTcpMessageProcessor, selector_, JavaNioChannelsSelector *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackNioTcpMessageProcessor, selectorThread_, JavaLangThread *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackNioTcpMessageProcessor, nioHandler_, AndroidGovNistJavaxSipStackNIOHandler *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackNioTcpMessageProcessor, channel_, JavaNioChannelsServerSocketChannel *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackNioTcpMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(AndroidGovNistJavaxSipStackNioTcpMessageProcessor *self, JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackNioTcpMessageProcessor *new_AndroidGovNistJavaxSipStackNioTcpMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackNioTcpMessageProcessor *create_AndroidGovNistJavaxSipStackNioTcpMessageProcessor_initWithJavaNetInetAddress_withAndroidGovNistJavaxSipStackSIPTransactionStack_withInt_(JavaNetInetAddress *ipAddress, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, jint port);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackNioTcpMessageProcessor)

#endif

#if !defined (AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTcpMessageProcessor || defined(INCLUDE_AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest))
#define AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest_

@class JavaNioChannelsSocketChannel;

@interface AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest : NSObject {
 @public
  JavaNioChannelsSocketChannel *socket_;
  jint type_;
  jint ops_;
}

#pragma mark Public

- (instancetype)initWithJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)socket
                                             withInt:(jint)type
                                             withInt:(jint)ops;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest, socket_, JavaNioChannelsSocketChannel *)

inline jint AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest_get_REGISTER();
#define AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest_REGISTER 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest, REGISTER, jint)

inline jint AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest_get_CHANGEOPS();
#define AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest_CHANGEOPS 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest, CHANGEOPS, jint)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest_initWithJavaNioChannelsSocketChannel_withInt_withInt_(AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest *self, JavaNioChannelsSocketChannel *socket, jint type, jint ops);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest *new_AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest_initWithJavaNioChannelsSocketChannel_withInt_withInt_(JavaNioChannelsSocketChannel *socket, jint type, jint ops) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest *create_AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest_initWithJavaNioChannelsSocketChannel_withInt_withInt_(JavaNioChannelsSocketChannel *socket, jint type, jint ops);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ChangeRequest)

#endif

#if !defined (AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTcpMessageProcessor || defined(INCLUDE_AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask))
#define AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class AndroidGovNistJavaxSipStackNioTcpMessageProcessor;
@class JavaNioChannelsSelectionKey;

@interface AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask : NSObject < JavaLangRunnable >

#pragma mark Public

- (instancetype)initWithAndroidGovNistJavaxSipStackNioTcpMessageProcessor:(AndroidGovNistJavaxSipStackNioTcpMessageProcessor *)outer$;

- (void)acceptWithJavaNioChannelsSelectionKey:(JavaNioChannelsSelectionKey *)selectionKey;

- (void)connectWithJavaNioChannelsSelectionKey:(JavaNioChannelsSelectionKey *)selectionKey;

- (void)readWithJavaNioChannelsSelectionKey:(JavaNioChannelsSelectionKey *)selectionKey;

- (void)run;

- (void)writeWithJavaNioChannelsSelectionKey:(JavaNioChannelsSelectionKey *)selectionKey;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask_initWithAndroidGovNistJavaxSipStackNioTcpMessageProcessor_(AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask *self, AndroidGovNistJavaxSipStackNioTcpMessageProcessor *outer$);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask *new_AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask_initWithAndroidGovNistJavaxSipStackNioTcpMessageProcessor_(AndroidGovNistJavaxSipStackNioTcpMessageProcessor *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask *create_AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask_initWithAndroidGovNistJavaxSipStackNioTcpMessageProcessor_(AndroidGovNistJavaxSipStackNioTcpMessageProcessor *outer$);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackNioTcpMessageProcessor_ProcessorTask)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackNioTcpMessageProcessor")
