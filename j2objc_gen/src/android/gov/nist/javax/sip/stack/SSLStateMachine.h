//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/SSLStateMachine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackSSLStateMachine")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackSSLStateMachine
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackSSLStateMachine 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackSSLStateMachine 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackSSLStateMachine

#if !defined (AndroidGovNistJavaxSipStackSSLStateMachine_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackSSLStateMachine || defined(INCLUDE_AndroidGovNistJavaxSipStackSSLStateMachine))
#define AndroidGovNistJavaxSipStackSSLStateMachine_

@class IOSByteArray;
@class JavaNioByteBuffer;
@class JavaxNetSslSSLEngine;
@protocol AndroidGovNistJavaxSipStackNioTlsChannelInterface;
@protocol AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback;
@protocol JavaUtilQueue;

@interface AndroidGovNistJavaxSipStackSSLStateMachine : NSObject {
 @public
  JavaxNetSslSSLEngine *sslEngine_;
  id<JavaUtilQueue> pendingOutboundBuffers_;
  id<AndroidGovNistJavaxSipStackNioTlsChannelInterface> channel_;
  JavaNioByteBuffer *tlsRecordBuffer_;
}

#pragma mark Public

- (instancetype)initWithJavaxNetSslSSLEngine:(JavaxNetSslSSLEngine *)sslEngine
withAndroidGovNistJavaxSipStackNioTlsChannelInterface:(id<AndroidGovNistJavaxSipStackNioTlsChannelInterface>)channel;

- (void)sendSSLMetadataWithByteArray:(IOSByteArray *)msg;

- (void)unwrapWithJavaNioByteBuffer:(JavaNioByteBuffer *)src;

- (void)wrapWithJavaNioByteBuffer:(JavaNioByteBuffer *)src
            withJavaNioByteBuffer:(JavaNioByteBuffer *)dst
withAndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback:(id<AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback>)callback;

- (void)wrapRemaining;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackSSLStateMachine)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackSSLStateMachine, sslEngine_, JavaxNetSslSSLEngine *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackSSLStateMachine, pendingOutboundBuffers_, id<JavaUtilQueue>)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackSSLStateMachine, channel_, id<AndroidGovNistJavaxSipStackNioTlsChannelInterface>)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackSSLStateMachine, tlsRecordBuffer_, JavaNioByteBuffer *)

inline JavaNioByteBuffer *AndroidGovNistJavaxSipStackSSLStateMachine_get_EMPTY_BUFFER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaNioByteBuffer *AndroidGovNistJavaxSipStackSSLStateMachine_EMPTY_BUFFER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidGovNistJavaxSipStackSSLStateMachine, EMPTY_BUFFER, JavaNioByteBuffer *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackSSLStateMachine_initWithJavaxNetSslSSLEngine_withAndroidGovNistJavaxSipStackNioTlsChannelInterface_(AndroidGovNistJavaxSipStackSSLStateMachine *self, JavaxNetSslSSLEngine *sslEngine, id<AndroidGovNistJavaxSipStackNioTlsChannelInterface> channel);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackSSLStateMachine *new_AndroidGovNistJavaxSipStackSSLStateMachine_initWithJavaxNetSslSSLEngine_withAndroidGovNistJavaxSipStackNioTlsChannelInterface_(JavaxNetSslSSLEngine *sslEngine, id<AndroidGovNistJavaxSipStackNioTlsChannelInterface> channel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackSSLStateMachine *create_AndroidGovNistJavaxSipStackSSLStateMachine_initWithJavaxNetSslSSLEngine_withAndroidGovNistJavaxSipStackNioTlsChannelInterface_(JavaxNetSslSSLEngine *sslEngine, id<AndroidGovNistJavaxSipStackNioTlsChannelInterface> channel);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackSSLStateMachine)

#endif

#if !defined (AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackSSLStateMachine || defined(INCLUDE_AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback))
#define AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback_

@class IOSByteArray;

@protocol AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback < JavaObject >

- (void)doSendWithByteArray:(IOSByteArray *)bytes;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback)

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback)

#endif

#if !defined (AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackSSLStateMachine || defined(INCLUDE_AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem))
#define AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem_

@class JavaNioByteBuffer;
@protocol AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback;

@interface AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem : NSObject

#pragma mark Public

- (instancetype)initWithJavaNioByteBuffer:(JavaNioByteBuffer *)buffer
withAndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback:(id<AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback>)callback;

- (id<AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback>)getCallBack;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem_initWithJavaNioByteBuffer_withAndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback_(AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem *self, JavaNioByteBuffer *buffer, id<AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback> callback);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem *new_AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem_initWithJavaNioByteBuffer_withAndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback_(JavaNioByteBuffer *buffer, id<AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback> callback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem *create_AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem_initWithJavaNioByteBuffer_withAndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback_(JavaNioByteBuffer *buffer, id<AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendCallback> callback);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackSSLStateMachine_MessageSendItem)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackSSLStateMachine")
