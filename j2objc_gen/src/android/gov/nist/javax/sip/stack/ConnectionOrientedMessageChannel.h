//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/ConnectionOrientedMessageChannel.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel

#if !defined (AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel || defined(INCLUDE_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel))
#define AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_

#define RESTRICT_AndroidGovNistJavaxSipStackMessageChannel 1
#define INCLUDE_AndroidGovNistJavaxSipStackMessageChannel 1
#include "android/gov/nist/javax/sip/stack/MessageChannel.h"

#define RESTRICT_AndroidGovNistJavaxSipParserSIPMessageListener 1
#define INCLUDE_AndroidGovNistJavaxSipParserSIPMessageListener 1
#include "android/gov/nist/javax/sip/parser/SIPMessageListener.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

#define RESTRICT_AndroidGovNistJavaxSipStackRawMessageChannel 1
#define INCLUDE_AndroidGovNistJavaxSipStackRawMessageChannel 1
#include "android/gov/nist/javax/sip/stack/RawMessageChannel.h"

@class AndroidGovNistJavaxSipMessageSIPMessage;
@class AndroidGovNistJavaxSipParserPipelinedMsgParser;
@class AndroidGovNistJavaxSipStackSIPTransactionStack;
@class IOSByteArray;
@class JavaIoInputStream;
@class JavaLangThread;
@class JavaNetInetAddress;
@class JavaNetSocket;

@interface AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel : AndroidGovNistJavaxSipStackMessageChannel < AndroidGovNistJavaxSipParserSIPMessageListener, JavaLangRunnable, AndroidGovNistJavaxSipStackRawMessageChannel > {
 @public
  AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack_;
  JavaNetSocket *mySock_;
  AndroidGovNistJavaxSipParserPipelinedMsgParser *myParser_;
  NSString *key_;
  JavaIoInputStream *myClientInputStream_;
  jboolean isRunning_;
  jboolean isCached_;
  JavaLangThread *mythread_;
  NSString *myAddress_;
  jint myPort_;
  JavaNetInetAddress *peerAddress_;
  jint peerPortAdvertisedInHeaders_;
  NSString *peerAddressAdvertisedInHeaders_;
  jint peerPort_;
  NSString *peerProtocol_;
}

#pragma mark Public

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack;

- (void)cancelPingKeepAliveTimeoutTaskIfStarted;

- (void)close;

- (jlong)getKeepAliveTimeout;

- (NSString *)getKey;

- (NSString *)getPeerAddress;

- (JavaNetInetAddress *)getPeerPacketSourceAddress;

- (jint)getPeerPacketSourcePort;

- (jint)getPeerPort;

- (NSString *)getPeerProtocol;

- (AndroidGovNistJavaxSipStackSIPTransactionStack *)getSIPStack;

- (NSString *)getViaHost;

- (jint)getViaPort;

- (jboolean)isReliable;

- (void)processMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage;

- (void)processMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage
                                           withJavaNetInetAddress:(JavaNetInetAddress *)address;

- (void)rescheduleKeepAliveTimeoutWithLong:(jlong)newKeepAliveTimeout;

- (void)run;

- (void)sendMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage;

- (void)sendSingleCLRF;

- (void)setKeepAliveTimeoutWithLong:(jlong)keepAliveTimeout;

#pragma mark Protected

- (void)closeWithBoolean:(jboolean)removeSocket
             withBoolean:(jboolean)stopKeepAliveTask;

- (JavaNetInetAddress *)getPeerInetAddress;

- (void)sendMessageWithByteArray:(IOSByteArray *)msg
                     withBoolean:(jboolean)b;

- (void)uncache;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel, sipStack_, AndroidGovNistJavaxSipStackSIPTransactionStack *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel, mySock_, JavaNetSocket *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel, myParser_, AndroidGovNistJavaxSipParserPipelinedMsgParser *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel, key_, NSString *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel, myClientInputStream_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel, mythread_, JavaLangThread *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel, myAddress_, NSString *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel, peerAddress_, JavaNetInetAddress *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel, peerAddressAdvertisedInHeaders_, NSString *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel, peerProtocol_, NSString *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel *self, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel)

#endif

#if !defined (AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel || defined(INCLUDE_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask))
#define AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask_

#define RESTRICT_AndroidGovNistJavaxSipStackSIPStackTimerTask 1
#define INCLUDE_AndroidGovNistJavaxSipStackSIPStackTimerTask 1
#include "android/gov/nist/javax/sip/stack/SIPStackTimerTask.h"

@class AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel;

@interface AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask : AndroidGovNistJavaxSipStackSIPStackTimerTask

#pragma mark Public

- (void)runTask;

#pragma mark Package-Private

- (instancetype)initWithAndroidGovNistJavaxSipStackConnectionOrientedMessageChannel:(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask_initWithAndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask *self, AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel *outer$);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask *new_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask_initWithAndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask *create_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask_initWithAndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel *outer$);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel_KeepAliveTimeoutTimerTask)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackConnectionOrientedMessageChannel")
