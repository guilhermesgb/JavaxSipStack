//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/WebSocketHttpHandshake.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackWebSocketHttpHandshake")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackWebSocketHttpHandshake
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackWebSocketHttpHandshake 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackWebSocketHttpHandshake 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackWebSocketHttpHandshake

#if !defined (AndroidGovNistJavaxSipStackWebSocketHttpHandshake_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackWebSocketHttpHandshake || defined(INCLUDE_AndroidGovNistJavaxSipStackWebSocketHttpHandshake))
#define AndroidGovNistJavaxSipStackWebSocketHttpHandshake_

@class IOSByteArray;

@interface AndroidGovNistJavaxSipStackWebSocketHttpHandshake : NSObject

#pragma mark Public

- (instancetype)init;

- (IOSByteArray *)createHttpResponseWithNSString:(NSString *)request;

#pragma mark Package-Private

+ (NSString *)computeRev13ResponseWithNSString:(NSString *)key;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackWebSocketHttpHandshake)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackWebSocketHttpHandshake_init(AndroidGovNistJavaxSipStackWebSocketHttpHandshake *self);

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackWebSocketHttpHandshake *new_AndroidGovNistJavaxSipStackWebSocketHttpHandshake_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipStackWebSocketHttpHandshake *create_AndroidGovNistJavaxSipStackWebSocketHttpHandshake_init();

FOUNDATION_EXPORT NSString *AndroidGovNistJavaxSipStackWebSocketHttpHandshake_computeRev13ResponseWithNSString_(NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackWebSocketHttpHandshake)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackWebSocketHttpHandshake")
