//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/stack/MessageChannel.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackMessageChannel")
#ifdef RESTRICT_AndroidGovNistJavaxSipStackMessageChannel
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackMessageChannel 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipStackMessageChannel 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipStackMessageChannel

#if !defined (AndroidGovNistJavaxSipStackMessageChannel_) && (INCLUDE_ALL_AndroidGovNistJavaxSipStackMessageChannel || defined(INCLUDE_AndroidGovNistJavaxSipStackMessageChannel))
#define AndroidGovNistJavaxSipStackMessageChannel_

@class AndroidGovNistCoreHostPort;
@class AndroidGovNistJavaxSipHeaderVia;
@class AndroidGovNistJavaxSipMessageSIPMessage;
@class AndroidGovNistJavaxSipMessageSIPResponse;
@class AndroidGovNistJavaxSipStackMessageProcessor;
@class AndroidGovNistJavaxSipStackSIPTransactionStack;
@class IOSByteArray;
@class JavaNetInetAddress;
@class JavaTextParseException;
@protocol AndroidGovNistJavaxSipStackSIPClientTransaction;
@protocol AndroidJavaxSipAddressHop;

@interface AndroidGovNistJavaxSipStackMessageChannel : NSObject {
 @public
  jint useCount_;
  AndroidGovNistJavaxSipStackMessageProcessor *messageProcessor_;
}

#pragma mark Public

- (instancetype)init;

- (void)close;

- (id<AndroidGovNistJavaxSipStackSIPClientTransaction>)getEncapsulatedClientTransaction;

- (NSString *)getHost;

- (AndroidGovNistCoreHostPort *)getHostPort;

- (NSString *)getKey;

+ (NSString *)getKeyWithAndroidGovNistCoreHostPort:(AndroidGovNistCoreHostPort *)hostPort
                                      withNSString:(NSString *)transport;

+ (NSString *)getKeyWithJavaNetInetAddress:(JavaNetInetAddress *)inetAddr
                                   withInt:(jint)port
                              withNSString:(NSString *)transport;

- (AndroidGovNistJavaxSipStackMessageProcessor *)getMessageProcessor;

- (NSString *)getPeerAddress;

- (AndroidGovNistCoreHostPort *)getPeerHostPort;

- (JavaNetInetAddress *)getPeerPacketSourceAddress;

- (jint)getPeerPacketSourcePort;

- (jint)getPeerPort;

- (jint)getPort;

- (NSString *)getRawIpSourceAddress;

- (AndroidGovNistJavaxSipStackSIPTransactionStack *)getSIPStack;

- (NSString *)getTransport;

- (AndroidGovNistJavaxSipHeaderVia *)getViaHeader;

- (NSString *)getViaHost;

- (AndroidGovNistCoreHostPort *)getViaHostPort;

- (jint)getViaPort;

- (jboolean)isReliable;

- (jboolean)isSecure;

- (void)logMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage
                                       withJavaNetInetAddress:(JavaNetInetAddress *)address
                                                      withInt:(jint)port
                                                     withLong:(jlong)time;

- (void)logResponseWithAndroidGovNistJavaxSipMessageSIPResponse:(AndroidGovNistJavaxSipMessageSIPResponse *)sipResponse
                                                       withLong:(jlong)receptionTime
                                                   withNSString:(NSString *)status;

- (void)sendMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage;

- (void)sendMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage
                                 withAndroidJavaxSipAddressHop:(id<AndroidJavaxSipAddressHop>)hop;

- (void)sendMessageWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage
                                        withJavaNetInetAddress:(JavaNetInetAddress *)receiverAddress
                                                       withInt:(jint)receiverPort;

- (void)setEncapsulatedClientTransactionWithAndroidGovNistJavaxSipStackSIPClientTransaction:(id<AndroidGovNistJavaxSipStackSIPClientTransaction>)transaction;

#pragma mark Protected

- (NSString *)createBadReqResWithNSString:(NSString *)badReq
               withJavaTextParseException:(JavaTextParseException *)pe;

- (JavaNetInetAddress *)getPeerInetAddress;

- (NSString *)getPeerProtocol;

- (void)sendMessageWithByteArray:(IOSByteArray *)message
          withJavaNetInetAddress:(JavaNetInetAddress *)receiverAddress
                         withInt:(jint)receiverPort
                     withBoolean:(jboolean)reconnectFlag;

- (void)uncache;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipStackMessageChannel)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipStackMessageChannel, messageProcessor_, AndroidGovNistJavaxSipStackMessageProcessor *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipStackMessageChannel_init(AndroidGovNistJavaxSipStackMessageChannel *self);

FOUNDATION_EXPORT NSString *AndroidGovNistJavaxSipStackMessageChannel_getKeyWithJavaNetInetAddress_withInt_withNSString_(JavaNetInetAddress *inetAddr, jint port, NSString *transport);

FOUNDATION_EXPORT NSString *AndroidGovNistJavaxSipStackMessageChannel_getKeyWithAndroidGovNistCoreHostPort_withNSString_(AndroidGovNistCoreHostPort *hostPort, NSString *transport);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipStackMessageChannel)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipStackMessageChannel")
