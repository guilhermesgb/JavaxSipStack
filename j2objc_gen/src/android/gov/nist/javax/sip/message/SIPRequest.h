//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/message/SIPRequest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipMessageSIPRequest")
#ifdef RESTRICT_AndroidGovNistJavaxSipMessageSIPRequest
#define INCLUDE_ALL_AndroidGovNistJavaxSipMessageSIPRequest 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipMessageSIPRequest 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipMessageSIPRequest

#if !defined (AndroidGovNistJavaxSipMessageSIPRequest_) && (INCLUDE_ALL_AndroidGovNistJavaxSipMessageSIPRequest || defined(INCLUDE_AndroidGovNistJavaxSipMessageSIPRequest))
#define AndroidGovNistJavaxSipMessageSIPRequest_

#define RESTRICT_AndroidGovNistJavaxSipMessageSIPMessage 1
#define INCLUDE_AndroidGovNistJavaxSipMessageSIPMessage 1
#include "android/gov/nist/javax/sip/message/SIPMessage.h"

#define RESTRICT_AndroidJavaxSipMessageRequest 1
#define INCLUDE_AndroidJavaxSipMessageRequest 1
#include "android/javax/sip/message/Request.h"

#define RESTRICT_AndroidGovNistJavaxSipMessageRequestExt 1
#define INCLUDE_AndroidGovNistJavaxSipMessageRequestExt 1
#include "android/gov/nist/javax/sip/message/RequestExt.h"

@class AndroidGovNistJavaxSipHeaderContentType;
@class AndroidGovNistJavaxSipHeaderRequestLine;
@class AndroidGovNistJavaxSipHeaderTo;
@class AndroidGovNistJavaxSipMessageSIPResponse;
@class IOSByteArray;
@class JavaLangStringBuilder;
@class JavaUtilLinkedList;
@protocol AndroidJavaxSipAddressURI;
@protocol JavaUtilSet;

@interface AndroidGovNistJavaxSipMessageSIPRequest : AndroidGovNistJavaxSipMessageSIPMessage < AndroidJavaxSipMessageRequest, AndroidGovNistJavaxSipMessageRequestExt > {
 @public
  AndroidGovNistJavaxSipHeaderRequestLine *requestLine_;
}

#pragma mark Public

- (instancetype)init;

- (void)checkHeaders;

- (void)cleanUp;

- (id)java_clone;

- (AndroidGovNistJavaxSipMessageSIPRequest *)createAckRequestWithAndroidGovNistJavaxSipHeaderTo:(AndroidGovNistJavaxSipHeaderTo *)responseToHeader;

- (AndroidGovNistJavaxSipMessageSIPRequest *)createCancelRequest;

- (AndroidGovNistJavaxSipMessageSIPRequest *)createErrorAckWithAndroidGovNistJavaxSipHeaderTo:(AndroidGovNistJavaxSipHeaderTo *)responseToHeader;

- (AndroidGovNistJavaxSipMessageSIPResponse *)createResponseWithInt:(jint)statusCode;

- (AndroidGovNistJavaxSipMessageSIPResponse *)createResponseWithInt:(jint)statusCode
                                                       withNSString:(NSString *)reasonPhrase;

- (NSString *)debugDump;

- (NSString *)encode;

- (IOSByteArray *)encodeAsBytesWithNSString:(NSString *)transport;

- (JavaLangStringBuilder *)encodeMessageWithJavaLangStringBuilder:(JavaLangStringBuilder *)retval;

- (jboolean)isEqual:(id)other;

+ (NSString *)getCannonicalNameWithNSString:(NSString *)method;

- (AndroidGovNistJavaxSipHeaderContentType *)getContentTypeHeader;

- (NSString *)getFirstLine;

- (id)getInviteTransaction;

- (NSString *)getMergeId;

- (JavaUtilLinkedList *)getMessageAsEncodedStrings;

- (id)getMessageChannel;

- (NSString *)getMethod;

- (AndroidGovNistJavaxSipHeaderRequestLine *)getRequestLine;

- (id<AndroidJavaxSipAddressURI>)getRequestURI;

- (NSString *)getSIPVersion;

- (id)getTransaction;

- (NSString *)getViaHost;

- (jint)getViaPort;

+ (jboolean)isDialogCreatingWithNSString:(NSString *)ucaseMethod;

+ (jboolean)isTargetRefreshWithNSString:(NSString *)ucaseMethod;

- (jboolean)matchWithId:(id)matchObj;

- (void)setInviteTransactionWithId:(id)inviteTransaction;

- (void)setMessageChannelWithId:(id)messageChannel;

- (void)setMethodWithNSString:(NSString *)method;

- (void)setRequestLineWithAndroidGovNistJavaxSipHeaderRequestLine:(AndroidGovNistJavaxSipHeaderRequestLine *)requestLine;

- (void)setRequestURIWithAndroidJavaxSipAddressURI:(id<AndroidJavaxSipAddressURI>)uri;

- (void)setSIPVersionWithNSString:(NSString *)sipVersion;

- (void)setTransactionWithId:(id)transaction;

- (NSString *)description;

#pragma mark Protected

- (jboolean)mustCopyRRWithInt:(jint)code;

- (void)setDefaults;

- (void)setRequestLineDefaults;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipMessageSIPRequest)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPRequest, requestLine_, AndroidGovNistJavaxSipHeaderRequestLine *)

inline id<JavaUtilSet> AndroidGovNistJavaxSipMessageSIPRequest_get_headersToIncludeInResponse();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilSet> AndroidGovNistJavaxSipMessageSIPRequest_headersToIncludeInResponse;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidGovNistJavaxSipMessageSIPRequest, headersToIncludeInResponse, id<JavaUtilSet>)

FOUNDATION_EXPORT jboolean AndroidGovNistJavaxSipMessageSIPRequest_isTargetRefreshWithNSString_(NSString *ucaseMethod);

FOUNDATION_EXPORT jboolean AndroidGovNistJavaxSipMessageSIPRequest_isDialogCreatingWithNSString_(NSString *ucaseMethod);

FOUNDATION_EXPORT NSString *AndroidGovNistJavaxSipMessageSIPRequest_getCannonicalNameWithNSString_(NSString *method);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipMessageSIPRequest_init(AndroidGovNistJavaxSipMessageSIPRequest *self);

FOUNDATION_EXPORT AndroidGovNistJavaxSipMessageSIPRequest *new_AndroidGovNistJavaxSipMessageSIPRequest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipMessageSIPRequest *create_AndroidGovNistJavaxSipMessageSIPRequest_init();

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipMessageSIPRequest)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipMessageSIPRequest")
