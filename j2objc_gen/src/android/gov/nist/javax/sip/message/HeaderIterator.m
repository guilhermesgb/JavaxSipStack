//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/message/HeaderIterator.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/message/HeaderIterator.h"
#include "android/gov/nist/javax/sip/message/SIPMessage.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Iterator.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/function/Consumer.h"

@interface AndroidGovNistJavaxSipMessageHeaderIterator () {
 @public
  jboolean toRemove_;
  jint index_;
  AndroidGovNistJavaxSipMessageSIPMessage *sipMessage_;
  AndroidGovNistJavaxSipHeaderSIPHeader *sipHeader_;
}

@end

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageHeaderIterator, sipMessage_, AndroidGovNistJavaxSipMessageSIPMessage *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageHeaderIterator, sipHeader_, AndroidGovNistJavaxSipHeaderSIPHeader *)

@implementation AndroidGovNistJavaxSipMessageHeaderIterator

- (instancetype)initWithAndroidGovNistJavaxSipMessageSIPMessage:(AndroidGovNistJavaxSipMessageSIPMessage *)sipMessage
                      withAndroidGovNistJavaxSipHeaderSIPHeader:(AndroidGovNistJavaxSipHeaderSIPHeader *)sipHeader {
  AndroidGovNistJavaxSipMessageHeaderIterator_initWithAndroidGovNistJavaxSipMessageSIPMessage_withAndroidGovNistJavaxSipHeaderSIPHeader_(self, sipMessage, sipHeader);
  return self;
}

- (id)next {
  if (sipHeader_ == nil || index_ == 1) @throw create_JavaUtilNoSuchElementException_init();
  toRemove_ = true;
  index_ = 1;
  return sipHeader_;
}

- (id)previous {
  if (sipHeader_ == nil || index_ == 0) @throw create_JavaUtilNoSuchElementException_init();
  toRemove_ = true;
  index_ = 0;
  return sipHeader_;
}

- (jint)nextIndex {
  return 1;
}

- (jint)previousIndex {
  return index_ == 0 ? -1 : 0;
}

- (void)setWithId:(id)header {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)addWithId:(id)header {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)remove {
  if (self->sipHeader_ == nil) @throw create_JavaLangIllegalStateException_init();
  if (toRemove_) {
    JreStrongAssign(&self->sipHeader_, nil);
    [((AndroidGovNistJavaxSipMessageSIPMessage *) nil_chk(self->sipMessage_)) removeHeaderWithNSString:[((AndroidGovNistJavaxSipHeaderSIPHeader *) nil_chk(sipHeader_)) getName]];
  }
  else {
    @throw create_JavaLangIllegalStateException_init();
  }
}

- (jboolean)hasNext {
  return index_ == 0;
}

- (jboolean)hasPrevious {
  return index_ == 1;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(sipMessage_);
  RELEASE_(sipHeader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidGovNistJavaxSipMessageSIPMessage:withAndroidGovNistJavaxSipHeaderSIPHeader:);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(previous);
  methods[3].selector = @selector(nextIndex);
  methods[4].selector = @selector(previousIndex);
  methods[5].selector = @selector(setWithId:);
  methods[6].selector = @selector(addWithId:);
  methods[7].selector = @selector(remove);
  methods[8].selector = @selector(hasNext);
  methods[9].selector = @selector(hasPrevious);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "toRemove_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sipMessage_", "LAndroidGovNistJavaxSipMessageSIPMessage;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sipHeader_", "LAndroidGovNistJavaxSipHeaderSIPHeader;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidGovNistJavaxSipMessageSIPMessage;LAndroidGovNistJavaxSipHeaderSIPHeader;", "LJavaUtilNoSuchElementException;", "set", "LNSObject;", "add", "LJavaLangIllegalStateException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipMessageHeaderIterator = { "HeaderIterator", "android.gov.nist.javax.sip.message", ptrTable, methods, fields, 7, 0x1, 10, 4, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipMessageHeaderIterator;
}

@end

void AndroidGovNistJavaxSipMessageHeaderIterator_initWithAndroidGovNistJavaxSipMessageSIPMessage_withAndroidGovNistJavaxSipHeaderSIPHeader_(AndroidGovNistJavaxSipMessageHeaderIterator *self, AndroidGovNistJavaxSipMessageSIPMessage *sipMessage, AndroidGovNistJavaxSipHeaderSIPHeader *sipHeader) {
  NSObject_init(self);
  JreStrongAssign(&self->sipMessage_, sipMessage);
  JreStrongAssign(&self->sipHeader_, sipHeader);
}

AndroidGovNistJavaxSipMessageHeaderIterator *new_AndroidGovNistJavaxSipMessageHeaderIterator_initWithAndroidGovNistJavaxSipMessageSIPMessage_withAndroidGovNistJavaxSipHeaderSIPHeader_(AndroidGovNistJavaxSipMessageSIPMessage *sipMessage, AndroidGovNistJavaxSipHeaderSIPHeader *sipHeader) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipMessageHeaderIterator, initWithAndroidGovNistJavaxSipMessageSIPMessage_withAndroidGovNistJavaxSipHeaderSIPHeader_, sipMessage, sipHeader)
}

AndroidGovNistJavaxSipMessageHeaderIterator *create_AndroidGovNistJavaxSipMessageHeaderIterator_initWithAndroidGovNistJavaxSipMessageSIPMessage_withAndroidGovNistJavaxSipHeaderSIPHeader_(AndroidGovNistJavaxSipMessageSIPMessage *sipMessage, AndroidGovNistJavaxSipHeaderSIPHeader *sipHeader) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipMessageHeaderIterator, initWithAndroidGovNistJavaxSipMessageSIPMessage_withAndroidGovNistJavaxSipHeaderSIPHeader_, sipMessage, sipHeader)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipMessageHeaderIterator)
