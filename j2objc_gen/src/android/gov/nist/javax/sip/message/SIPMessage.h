//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/message/SIPMessage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipMessageSIPMessage")
#ifdef RESTRICT_AndroidGovNistJavaxSipMessageSIPMessage
#define INCLUDE_ALL_AndroidGovNistJavaxSipMessageSIPMessage 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipMessageSIPMessage 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipMessageSIPMessage

#if !defined (AndroidGovNistJavaxSipMessageSIPMessage_) && (INCLUDE_ALL_AndroidGovNistJavaxSipMessageSIPMessage || defined(INCLUDE_AndroidGovNistJavaxSipMessageSIPMessage))
#define AndroidGovNistJavaxSipMessageSIPMessage_

#define RESTRICT_AndroidGovNistJavaxSipMessageMessageObject 1
#define INCLUDE_AndroidGovNistJavaxSipMessageMessageObject 1
#include "android/gov/nist/javax/sip/message/MessageObject.h"

#define RESTRICT_AndroidJavaxSipMessageMessage 1
#define INCLUDE_AndroidJavaxSipMessageMessage 1
#include "android/javax/sip/message/Message.h"

#define RESTRICT_AndroidGovNistJavaxSipMessageMessageExt 1
#define INCLUDE_AndroidGovNistJavaxSipMessageMessageExt 1
#include "android/gov/nist/javax/sip/message/MessageExt.h"

@class AndroidGovNistJavaxSipHeaderAuthorization;
@class AndroidGovNistJavaxSipHeaderCSeq;
@class AndroidGovNistJavaxSipHeaderCallID;
@class AndroidGovNistJavaxSipHeaderContact;
@class AndroidGovNistJavaxSipHeaderContactList;
@class AndroidGovNistJavaxSipHeaderContentLength;
@class AndroidGovNistJavaxSipHeaderContentType;
@class AndroidGovNistJavaxSipHeaderErrorInfoList;
@class AndroidGovNistJavaxSipHeaderFrom;
@class AndroidGovNistJavaxSipHeaderMaxForwards;
@class AndroidGovNistJavaxSipHeaderRecordRouteList;
@class AndroidGovNistJavaxSipHeaderRouteList;
@class AndroidGovNistJavaxSipHeaderSIPHeader;
@class AndroidGovNistJavaxSipHeaderSIPHeaderList;
@class AndroidGovNistJavaxSipHeaderTo;
@class AndroidGovNistJavaxSipHeaderVia;
@class AndroidGovNistJavaxSipHeaderViaList;
@class IOSByteArray;
@class JavaLangStringBuilder;
@class JavaNetInetAddress;
@class JavaUtilConcurrentConcurrentLinkedQueue;
@class JavaUtilLinkedList;
@protocol AndroidGovNistJavaxSipMessageMultipartMimeContent;
@protocol AndroidJavaxSipHeaderCSeqHeader;
@protocol AndroidJavaxSipHeaderCallIdHeader;
@protocol AndroidJavaxSipHeaderContentDispositionHeader;
@protocol AndroidJavaxSipHeaderContentEncodingHeader;
@protocol AndroidJavaxSipHeaderContentLanguageHeader;
@protocol AndroidJavaxSipHeaderContentLengthHeader;
@protocol AndroidJavaxSipHeaderContentTypeHeader;
@protocol AndroidJavaxSipHeaderExpiresHeader;
@protocol AndroidJavaxSipHeaderFromHeader;
@protocol AndroidJavaxSipHeaderHeader;
@protocol AndroidJavaxSipHeaderMaxForwardsHeader;
@protocol AndroidJavaxSipHeaderToHeader;
@protocol AndroidJavaxSipHeaderViaHeader;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilListIterator;
@protocol JavaUtilMap;

@interface AndroidGovNistJavaxSipMessageSIPMessage : AndroidGovNistJavaxSipMessageMessageObject < AndroidJavaxSipMessageMessage, AndroidGovNistJavaxSipMessageMessageExt > {
 @public
  jboolean nullRequest_;
  JavaUtilLinkedList *unrecognizedHeaders_;
  JavaUtilConcurrentConcurrentLinkedQueue *headers_;
  AndroidGovNistJavaxSipHeaderFrom *fromHeader_;
  AndroidGovNistJavaxSipHeaderTo *toHeader_;
  AndroidGovNistJavaxSipHeaderCSeq *cSeqHeader_;
  AndroidGovNistJavaxSipHeaderCallID *callIdHeader_;
  AndroidGovNistJavaxSipHeaderContentLength *contentLengthHeader_;
  AndroidGovNistJavaxSipHeaderMaxForwards *maxForwardsHeader_;
  jint size_;
  NSString *messageContent_;
  IOSByteArray *messageContentBytes_;
  id messageContentObject_;
  id<JavaUtilMap> headerTable_;
  id applicationData_;
  NSString *forkId_;
}

#pragma mark Public

- (instancetype)init;

- (void)addFirstWithAndroidJavaxSipHeaderHeader:(id<AndroidJavaxSipHeaderHeader>)header;

- (void)addHeaderWithAndroidJavaxSipHeaderHeader:(id<AndroidJavaxSipHeaderHeader>)sipHeader;

- (void)addHeaderWithNSString:(NSString *)sipHeader;

- (void)addLastWithAndroidJavaxSipHeaderHeader:(id<AndroidJavaxSipHeaderHeader>)header;

- (void)addUnparsedWithNSString:(NSString *)unparsed;

- (void)attachHeaderWithAndroidGovNistJavaxSipHeaderSIPHeader:(AndroidGovNistJavaxSipHeaderSIPHeader *)h
                                                  withBoolean:(jboolean)replaceflag;

- (void)attachHeaderWithAndroidGovNistJavaxSipHeaderSIPHeader:(AndroidGovNistJavaxSipHeaderSIPHeader *)header
                                                  withBoolean:(jboolean)replaceFlag
                                                  withBoolean:(jboolean)top;

- (void)cleanUp;

- (id)java_clone;

- (NSString *)debugDump;

- (NSString *)encode;

- (IOSByteArray *)encodeAsBytesWithNSString:(NSString *)transport;

- (JavaLangStringBuilder *)encodeMessageWithJavaLangStringBuilder:(JavaLangStringBuilder *)retval;

- (jboolean)isEqual:(id)other;

- (id)getApplicationData;

- (AndroidGovNistJavaxSipHeaderAuthorization *)getAuthorization;

- (id<AndroidJavaxSipHeaderCallIdHeader>)getCallId;

- (id<AndroidJavaxSipHeaderCallIdHeader>)getCallIdHeader;

- (AndroidGovNistJavaxSipHeaderContact *)getContactHeader;

- (AndroidGovNistJavaxSipHeaderContactList *)getContactHeaders;

- (id)getContent;

- (id<AndroidJavaxSipHeaderContentDispositionHeader>)getContentDisposition;

- (id<AndroidJavaxSipHeaderContentEncodingHeader>)getContentEncoding;

- (id<AndroidJavaxSipHeaderContentLanguageHeader>)getContentLanguage;

- (id<AndroidJavaxSipHeaderContentLengthHeader>)getContentLength;

- (id<AndroidJavaxSipHeaderContentLengthHeader>)getContentLengthHeader;

- (AndroidGovNistJavaxSipHeaderContentType *)getContentTypeHeader;

- (id<AndroidJavaxSipHeaderCSeqHeader>)getCSeq;

- (id<AndroidJavaxSipHeaderCSeqHeader>)getCSeqHeader;

- (NSString *)getDialogIdWithBoolean:(jboolean)isServer;

- (NSString *)getDialogIdWithBoolean:(jboolean)isServer
                        withNSString:(NSString *)toTag;

- (AndroidGovNistJavaxSipHeaderErrorInfoList *)getErrorInfoHeaders;

- (id<AndroidJavaxSipHeaderExpiresHeader>)getExpires;

- (NSString *)getFirstLine;

- (NSString *)getForkId;

- (id<AndroidJavaxSipHeaderFromHeader>)getFrom;

- (id<AndroidJavaxSipHeaderFromHeader>)getFromHeader;

- (NSString *)getFromTag;

- (id<AndroidJavaxSipHeaderHeader>)getHeaderWithNSString:(NSString *)headerName;

- (NSString *)getHeaderAsFormattedStringWithNSString:(NSString *)name;

- (id<JavaUtilListIterator>)getHeaderNames;

- (id<JavaUtilIterator>)getHeaders;

- (id<JavaUtilListIterator>)getHeadersWithNSString:(NSString *)headerName;

- (JavaNetInetAddress *)getLocalAddress;

- (jint)getLocalPort;

- (id<AndroidJavaxSipHeaderMaxForwardsHeader>)getMaxForwards;

- (JavaUtilLinkedList *)getMessageAsEncodedStrings;

- (NSString *)getMessageContent;

- (id<AndroidGovNistJavaxSipMessageMultipartMimeContent>)getMultipartMimeContent;

- (JavaNetInetAddress *)getPeerPacketSourceAddress;

- (jint)getPeerPacketSourcePort;

- (IOSByteArray *)getRawContent;

- (AndroidGovNistJavaxSipHeaderRecordRouteList *)getRecordRouteHeaders;

- (JavaNetInetAddress *)getRemoteAddress;

- (jint)getRemotePort;

- (AndroidGovNistJavaxSipHeaderRouteList *)getRouteHeaders;

- (AndroidGovNistJavaxSipHeaderSIPHeader *)getSIPHeaderListLowerCaseWithNSString:(NSString *)lowerCaseHeaderName;

- (NSString *)getSIPVersion;

- (jint)getSize;

- (id<AndroidJavaxSipHeaderToHeader>)getTo;

- (id<AndroidJavaxSipHeaderToHeader>)getToHeader;

- (AndroidGovNistJavaxSipHeaderVia *)getTopmostVia;

- (id<AndroidJavaxSipHeaderViaHeader>)getTopmostViaHeader;

- (NSString *)getToTag;

- (NSString *)getTransactionId;

- (id<JavaUtilListIterator>)getUnrecognizedHeaders;

- (AndroidGovNistJavaxSipHeaderViaList *)getViaHeaders;

- (jboolean)hasContent;

- (jboolean)hasFromTag;

- (NSUInteger)hash;

- (jboolean)hasHeaderWithNSString:(NSString *)headerName;

- (jboolean)hasToTag;

- (jboolean)isNullRequest;

+ (jboolean)isRequestHeaderWithAndroidGovNistJavaxSipHeaderSIPHeader:(AndroidGovNistJavaxSipHeaderSIPHeader *)sipHeader;

+ (jboolean)isResponseHeaderWithAndroidGovNistJavaxSipHeaderSIPHeader:(AndroidGovNistJavaxSipHeaderSIPHeader *)sipHeader;

- (jboolean)matchWithId:(id)other;

- (void)mergeWithId:(id)template_;

- (void)removeContent;

- (void)removeFirstWithNSString:(NSString *)headerName;

- (void)removeHeaderWithNSString:(NSString *)headerName;

- (void)removeHeaderWithNSString:(NSString *)headerName
                     withBoolean:(jboolean)top;

- (void)removeLastWithNSString:(NSString *)headerName;

- (void)setApplicationDataWithId:(id)applicationData;

- (void)setCallIdWithAndroidJavaxSipHeaderCallIdHeader:(id<AndroidJavaxSipHeaderCallIdHeader>)callId;

- (void)setCallIdWithNSString:(NSString *)callId;

- (void)setContentWithId:(id)content
withAndroidJavaxSipHeaderContentTypeHeader:(id<AndroidJavaxSipHeaderContentTypeHeader>)contentTypeHeader;

- (void)setContentDispositionWithAndroidJavaxSipHeaderContentDispositionHeader:(id<AndroidJavaxSipHeaderContentDispositionHeader>)contentDispositionHeader;

- (void)setContentEncodingWithAndroidJavaxSipHeaderContentEncodingHeader:(id<AndroidJavaxSipHeaderContentEncodingHeader>)contentEncodingHeader;

- (void)setContentLanguageWithAndroidJavaxSipHeaderContentLanguageHeader:(id<AndroidJavaxSipHeaderContentLanguageHeader>)contentLanguageHeader;

- (void)setContentLengthWithAndroidJavaxSipHeaderContentLengthHeader:(id<AndroidJavaxSipHeaderContentLengthHeader>)contentLength;

- (void)setCSeqWithAndroidJavaxSipHeaderCSeqHeader:(id<AndroidJavaxSipHeaderCSeqHeader>)cseqHeader;

- (void)setExpiresWithAndroidJavaxSipHeaderExpiresHeader:(id<AndroidJavaxSipHeaderExpiresHeader>)expiresHeader;

- (void)setFromWithAndroidJavaxSipHeaderFromHeader:(id<AndroidJavaxSipHeaderFromHeader>)from;

- (void)setFromTagWithNSString:(NSString *)tag;

- (void)setHeaderWithAndroidJavaxSipHeaderHeader:(id<AndroidJavaxSipHeaderHeader>)sipHeader;

- (void)setHeaderWithAndroidGovNistJavaxSipHeaderSIPHeaderList:(AndroidGovNistJavaxSipHeaderSIPHeaderList *)sipHeaderList;

- (void)setHeadersWithJavaUtilList:(id<JavaUtilList>)headers;

- (void)setLocalAddressWithJavaNetInetAddress:(JavaNetInetAddress *)localAddress;

- (void)setLocalPortWithInt:(jint)localPort;

- (void)setMaxForwardsWithAndroidJavaxSipHeaderMaxForwardsHeader:(id<AndroidJavaxSipHeaderMaxForwardsHeader>)maxForwards;

- (void)setMessageContentWithByteArray:(IOSByteArray *)content;

- (void)setMessageContentWithByteArray:(IOSByteArray *)content
                           withBoolean:(jboolean)strict
                           withBoolean:(jboolean)computeContentLength
                               withInt:(jint)givenLength;

- (void)setMessageContentWithByteArray:(IOSByteArray *)content
                           withBoolean:(jboolean)computeContentLength
                               withInt:(jint)givenLength;

- (void)setMessageContentWithNSString:(NSString *)type
                         withNSString:(NSString *)subType
                        withByteArray:(IOSByteArray *)messageContent;

- (void)setMessageContentWithNSString:(NSString *)type
                         withNSString:(NSString *)subType
                         withNSString:(NSString *)messageContent;

- (void)setNullRequest;

- (void)setPeerPacketSourceAddressWithJavaNetInetAddress:(JavaNetInetAddress *)peerPacketSourceAddress;

- (void)setPeerPacketSourcePortWithInt:(jint)peerPacketSourcePort;

- (void)setRemoteAddressWithJavaNetInetAddress:(JavaNetInetAddress *)remoteAddress;

- (void)setRemotePortWithInt:(jint)remotePort;

- (void)setSIPVersionWithNSString:(NSString *)sipVersion;

- (void)setSizeWithInt:(jint)size;

- (void)setToWithAndroidJavaxSipHeaderToHeader:(id<AndroidJavaxSipHeaderToHeader>)to;

- (void)setToTagWithNSString:(NSString *)tag;

- (void)setViaWithJavaUtilList:(id<JavaUtilList>)viaList;

- (NSString *)description;

#pragma mark Protected

- (JavaLangStringBuilder *)encodeSIPHeadersWithJavaLangStringBuilder:(JavaLangStringBuilder *)encoding;

- (NSString *)getCharset;

- (id<AndroidJavaxSipHeaderHeader>)getHeaderLowerCaseWithNSString:(NSString *)lowerCaseHeaderName;

- (JavaUtilLinkedList *)getUnrecognizedHeadersList;

- (void)setUnrecognizedHeadersListWithJavaUtilLinkedList:(JavaUtilLinkedList *)unrecognizedHeaders;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipMessageSIPMessage)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, unrecognizedHeaders_, JavaUtilLinkedList *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, headers_, JavaUtilConcurrentConcurrentLinkedQueue *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, fromHeader_, AndroidGovNistJavaxSipHeaderFrom *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, toHeader_, AndroidGovNistJavaxSipHeaderTo *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, cSeqHeader_, AndroidGovNistJavaxSipHeaderCSeq *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, callIdHeader_, AndroidGovNistJavaxSipHeaderCallID *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, contentLengthHeader_, AndroidGovNistJavaxSipHeaderContentLength *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, maxForwardsHeader_, AndroidGovNistJavaxSipHeaderMaxForwards *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, messageContent_, NSString *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, messageContentBytes_, IOSByteArray *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, messageContentObject_, id)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, headerTable_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, applicationData_, id)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageSIPMessage, forkId_, NSString *)

FOUNDATION_EXPORT jboolean AndroidGovNistJavaxSipMessageSIPMessage_isRequestHeaderWithAndroidGovNistJavaxSipHeaderSIPHeader_(AndroidGovNistJavaxSipHeaderSIPHeader *sipHeader);

FOUNDATION_EXPORT jboolean AndroidGovNistJavaxSipMessageSIPMessage_isResponseHeaderWithAndroidGovNistJavaxSipHeaderSIPHeader_(AndroidGovNistJavaxSipHeaderSIPHeader *sipHeader);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipMessageSIPMessage_init(AndroidGovNistJavaxSipMessageSIPMessage *self);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipMessageSIPMessage)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipMessageSIPMessage")
