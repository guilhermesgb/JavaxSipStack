//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/message/MultipartMimeContentImpl.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/core/Separators.h"
#include "android/gov/nist/javax/sip/header/HeaderFactoryExt.h"
#include "android/gov/nist/javax/sip/header/HeaderFactoryImpl.h"
#include "android/gov/nist/javax/sip/message/Content.h"
#include "android/gov/nist/javax/sip/message/ContentImpl.h"
#include "android/gov/nist/javax/sip/message/MultipartMimeContentImpl.h"
#include "android/javax/sip/header/ContentDispositionHeader.h"
#include "android/javax/sip/header/ContentTypeHeader.h"
#include "android/javax/sip/header/Header.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Scanner.h"

@interface AndroidGovNistJavaxSipMessageMultipartMimeContentImpl () {
 @public
  id<JavaUtilList> contentList_;
  id<AndroidGovNistJavaxSipHeaderHeaderFactoryExt> headerFactory_;
  id<AndroidJavaxSipHeaderContentTypeHeader> multipartMimeContentTypeHeader_;
  NSString *boundary_;
}

- (AndroidGovNistJavaxSipMessageContentImpl *)parseBodyPartWithNSString:(NSString *)bodyPart;

@end

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageMultipartMimeContentImpl, contentList_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageMultipartMimeContentImpl, headerFactory_, id<AndroidGovNistJavaxSipHeaderHeaderFactoryExt>)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageMultipartMimeContentImpl, multipartMimeContentTypeHeader_, id<AndroidJavaxSipHeaderContentTypeHeader>)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipMessageMultipartMimeContentImpl, boundary_, NSString *)

__attribute__((unused)) static AndroidGovNistJavaxSipMessageContentImpl *AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_parseBodyPartWithNSString_(AndroidGovNistJavaxSipMessageMultipartMimeContentImpl *self, NSString *bodyPart);

NSString *AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_BOUNDARY = @"boundary";

@implementation AndroidGovNistJavaxSipMessageMultipartMimeContentImpl

- (instancetype)initWithAndroidJavaxSipHeaderContentTypeHeader:(id<AndroidJavaxSipHeaderContentTypeHeader>)contentTypeHeader {
  AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_initWithAndroidJavaxSipHeaderContentTypeHeader_(self, contentTypeHeader);
  return self;
}

- (jboolean)addWithAndroidGovNistJavaxSipMessageContent:(id<AndroidGovNistJavaxSipMessageContent>)content {
  return [((id<JavaUtilList>) nil_chk(contentList_)) addWithId:(AndroidGovNistJavaxSipMessageContentImpl *) cast_chk(content, [AndroidGovNistJavaxSipMessageContentImpl class])];
}

- (id<AndroidJavaxSipHeaderContentTypeHeader>)getContentTypeHeader {
  return multipartMimeContentTypeHeader_;
}

- (NSString *)description {
  JavaLangStringBuilder *result = create_JavaLangStringBuilder_init();
  for (id<AndroidGovNistJavaxSipMessageContent> __strong content in nil_chk(self->contentList_)) {
    [result appendWithNSString:JreStrcat("$$$", @"--", boundary_, AndroidGovNistCoreSeparators_NEWLINE)];
    [result appendWithNSString:[((id<AndroidGovNistJavaxSipMessageContent>) nil_chk(content)) description]];
    [result appendWithNSString:AndroidGovNistCoreSeparators_NEWLINE];
  }
  if (![contentList_ isEmpty]) {
    [result appendWithNSString:JreStrcat("$$$", @"--", boundary_, @"--")];
  }
  return [result description];
}

- (void)createContentListWithNSString:(NSString *)body {
  if (boundary_ != nil) {
    JavaUtilScanner *scanner = create_JavaUtilScanner_initWithNSString_(body);
    [scanner useDelimiterWithNSString:JreStrcat("$$$", @"\x0d?\n?--", boundary_, @"(--)?\x0d?\n?")];
    while ([scanner hasNext]) {
      NSString *bodyPart = [scanner next];
      id<AndroidGovNistJavaxSipMessageContent> partContent = AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_parseBodyPartWithNSString_(self, bodyPart);
      [((id<JavaUtilList>) nil_chk(contentList_)) addWithId:partContent];
    }
  }
  else {
    AndroidGovNistJavaxSipMessageContentImpl *content = AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_parseBodyPartWithNSString_(self, body);
    [((AndroidGovNistJavaxSipMessageContentImpl *) nil_chk(content)) setContentTypeHeaderWithAndroidJavaxSipHeaderContentTypeHeader:[self getContentTypeHeader]];
    [((id<JavaUtilList>) nil_chk(self->contentList_)) addWithId:content];
  }
}

- (AndroidGovNistJavaxSipMessageContentImpl *)parseBodyPartWithNSString:(NSString *)bodyPart {
  return AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_parseBodyPartWithNSString_(self, bodyPart);
}

- (void)addContentWithAndroidGovNistJavaxSipMessageContent:(id<AndroidGovNistJavaxSipMessageContent>)content {
  [self addWithAndroidGovNistJavaxSipMessageContent:content];
}

- (id<JavaUtilIterator>)getContents {
  return [((id<JavaUtilList>) nil_chk(self->contentList_)) iterator];
}

- (jint)getContentCount {
  return [((id<JavaUtilList>) nil_chk(self->contentList_)) size];
}

- (void)dealloc {
  RELEASE_(contentList_);
  RELEASE_(headerFactory_);
  RELEASE_(multipartMimeContentTypeHeader_);
  RELEASE_(boundary_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipHeaderContentTypeHeader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipMessageContentImpl;", 0x2, 7, 5, 6, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 9, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidJavaxSipHeaderContentTypeHeader:);
  methods[1].selector = @selector(addWithAndroidGovNistJavaxSipMessageContent:);
  methods[2].selector = @selector(getContentTypeHeader);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(createContentListWithNSString:);
  methods[5].selector = @selector(parseBodyPartWithNSString:);
  methods[6].selector = @selector(addContentWithAndroidGovNistJavaxSipMessageContent:);
  methods[7].selector = @selector(getContents);
  methods[8].selector = @selector(getContentCount);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BOUNDARY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "contentList_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 11, -1 },
    { "headerFactory_", "LAndroidGovNistJavaxSipHeaderHeaderFactoryExt;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "multipartMimeContentTypeHeader_", "LAndroidJavaxSipHeaderContentTypeHeader;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "boundary_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidJavaxSipHeaderContentTypeHeader;", "add", "LAndroidGovNistJavaxSipMessageContent;", "toString", "createContentList", "LNSString;", "LJavaTextParseException;", "parseBodyPart", "addContent", "()Ljava/util/Iterator<Landroid/gov/nist/javax/sip/message/Content;>;", &AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_BOUNDARY, "Ljava/util/List<Landroid/gov/nist/javax/sip/message/Content;>;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipMessageMultipartMimeContentImpl = { "MultipartMimeContentImpl", "android.gov.nist.javax.sip.message", ptrTable, methods, fields, 7, 0x1, 9, 5, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipMessageMultipartMimeContentImpl;
}

@end

void AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_initWithAndroidJavaxSipHeaderContentTypeHeader_(AndroidGovNistJavaxSipMessageMultipartMimeContentImpl *self, id<AndroidJavaxSipHeaderContentTypeHeader> contentTypeHeader) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->contentList_, new_JavaUtilLinkedList_init());
  JreStrongAssignAndConsume(&self->headerFactory_, new_AndroidGovNistJavaxSipHeaderHeaderFactoryImpl_init());
  JreStrongAssign(&self->multipartMimeContentTypeHeader_, contentTypeHeader);
  JreStrongAssign(&self->boundary_, [((id<AndroidJavaxSipHeaderContentTypeHeader>) nil_chk(contentTypeHeader)) getParameterWithNSString:AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_BOUNDARY]);
}

AndroidGovNistJavaxSipMessageMultipartMimeContentImpl *new_AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_initWithAndroidJavaxSipHeaderContentTypeHeader_(id<AndroidJavaxSipHeaderContentTypeHeader> contentTypeHeader) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipMessageMultipartMimeContentImpl, initWithAndroidJavaxSipHeaderContentTypeHeader_, contentTypeHeader)
}

AndroidGovNistJavaxSipMessageMultipartMimeContentImpl *create_AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_initWithAndroidJavaxSipHeaderContentTypeHeader_(id<AndroidJavaxSipHeaderContentTypeHeader> contentTypeHeader) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipMessageMultipartMimeContentImpl, initWithAndroidJavaxSipHeaderContentTypeHeader_, contentTypeHeader)
}

AndroidGovNistJavaxSipMessageContentImpl *AndroidGovNistJavaxSipMessageMultipartMimeContentImpl_parseBodyPartWithNSString_(AndroidGovNistJavaxSipMessageMultipartMimeContentImpl *self, NSString *bodyPart) {
  IOSObjectArray *nextPartSplit = [((NSString *) nil_chk(bodyPart)) java_split:@"\x0d?\n\x0d?\n" limit:2];
  IOSObjectArray *headers = nil;
  NSString *bodyContent;
  if (((IOSObjectArray *) nil_chk(nextPartSplit))->size_ == 2) {
    headers = [((NSString *) nil_chk(IOSObjectArray_Get(nextPartSplit, 0))) java_split:@"\x0d?\n"];
    bodyContent = IOSObjectArray_Get(nextPartSplit, 1);
  }
  else {
    bodyContent = bodyPart;
  }
  AndroidGovNistJavaxSipMessageContentImpl *content = create_AndroidGovNistJavaxSipMessageContentImpl_initWithNSString_(bodyContent);
  if (headers != nil) {
    {
      IOSObjectArray *a__ = headers;
      NSString * const *b__ = a__->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *partHeader = *b__++;
        id<AndroidJavaxSipHeaderHeader> header = [((id<AndroidGovNistJavaxSipHeaderHeaderFactoryExt>) nil_chk(self->headerFactory_)) createHeaderWithNSString:partHeader];
        if ([AndroidJavaxSipHeaderContentTypeHeader_class_() isInstance:header]) {
          [content setContentTypeHeaderWithAndroidJavaxSipHeaderContentTypeHeader:(id<AndroidJavaxSipHeaderContentTypeHeader>) cast_check(header, AndroidJavaxSipHeaderContentTypeHeader_class_())];
        }
        else if ([AndroidJavaxSipHeaderContentDispositionHeader_class_() isInstance:header]) {
          [content setContentDispositionHeaderWithAndroidJavaxSipHeaderContentDispositionHeader:(id<AndroidJavaxSipHeaderContentDispositionHeader>) cast_check(header, AndroidJavaxSipHeaderContentDispositionHeader_class_())];
        }
        else {
          [content addExtensionHeaderWithAndroidJavaxSipHeaderHeader:header];
        }
      }
    }
  }
  return content;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipMessageMultipartMimeContentImpl)
