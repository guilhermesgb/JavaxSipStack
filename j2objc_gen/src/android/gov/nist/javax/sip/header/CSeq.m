//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/CSeq.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/javax/sip/header/CSeq.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderNames.h"
#include "android/gov/nist/javax/sip/message/SIPRequest.h"
#include "android/javax/sip/InvalidArgumentException.h"
#include "android/javax/sip/header/CSeqHeader.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"

inline jlong AndroidGovNistJavaxSipHeaderCSeq_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderCSeq_serialVersionUID -5405798080040422910LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderCSeq, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderCSeq

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderCSeq_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithLong:(jlong)seqno
                withNSString:(NSString *)method {
  AndroidGovNistJavaxSipHeaderCSeq_initWithLong_withNSString_(self, seqno, method);
  return self;
}

- (jboolean)isEqual:(id)other {
  if ([AndroidJavaxSipHeaderCSeqHeader_class_() isInstance:other]) {
    id<AndroidJavaxSipHeaderCSeqHeader> o = (id<AndroidJavaxSipHeaderCSeqHeader>) cast_check(other, AndroidJavaxSipHeaderCSeqHeader_class_());
    return [self getSeqNumber] == [((id<AndroidJavaxSipHeaderCSeqHeader>) nil_chk(o)) getSeqNumber] && [((NSString *) nil_chk([self getMethod])) isEqual:[o getMethod]];
  }
  return false;
}

- (NSString *)encode {
  return JreStrcat("$$$$$", headerName_, AndroidGovNistCoreGenericObject_COLON, AndroidGovNistCoreGenericObject_SP, [self encodeBody], AndroidGovNistCoreGenericObject_NEWLINE);
}

- (NSString *)encodeBody {
  return [((JavaLangStringBuilder *) nil_chk([self encodeBodyWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithId:seqno_])) appendWithNSString:AndroidGovNistCoreGenericObject_SP])) appendWithNSString:[((NSString *) nil_chk(method_)) uppercaseString]];
}

- (NSString *)getMethod {
  return method_;
}

- (void)setSeqNumberWithLong:(jlong)sequenceNumber {
  if (sequenceNumber < 0) @throw create_AndroidJavaxSipInvalidArgumentException_initWithNSString_(JreStrcat("$J", @"JAIN-SIP Exception, CSeq, setSequenceNumber(), the sequence number parameter is < 0 : ", sequenceNumber));
  else if (sequenceNumber > JreLShift64(((jlong) 1), 32 - 1)) @throw create_AndroidJavaxSipInvalidArgumentException_initWithNSString_(JreStrcat("$J", @"JAIN-SIP Exception, CSeq, setSequenceNumber(), the sequence number parameter is too large : ", sequenceNumber));
  JreStrongAssign(&seqno_, JavaLangLong_valueOfWithLong_(sequenceNumber));
}

- (void)setSequenceNumberWithInt:(jint)sequenceNumber {
  [self setSeqNumberWithLong:(jlong) sequenceNumber];
}

- (void)setMethodWithNSString:(NSString *)meth {
  if (meth == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception, CSeq, setMethod(), the meth parameter is null");
  JreStrongAssign(&self->method_, AndroidGovNistJavaxSipMessageSIPRequest_getCannonicalNameWithNSString_(meth));
}

- (jint)getSequenceNumber {
  if (self->seqno_ == nil) return 0;
  else return [self->seqno_ intValue];
}

- (jlong)getSeqNumber {
  return [((JavaLangLong *) nil_chk(self->seqno_)) longLongValue];
}

- (void)dealloc {
  RELEASE_(seqno_);
  RELEASE_(method_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 7, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, 7, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, 12, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithLong:withNSString:);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(encode);
  methods[4].selector = @selector(encodeBody);
  methods[5].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[6].selector = @selector(getMethod);
  methods[7].selector = @selector(setSeqNumberWithLong:);
  methods[8].selector = @selector(setSequenceNumberWithInt:);
  methods[9].selector = @selector(setMethodWithNSString:);
  methods[10].selector = @selector(getSequenceNumber);
  methods[11].selector = @selector(getSeqNumber);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderCSeq_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "seqno_", "LJavaLangLong;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "method_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "JLNSString;", "equals", "LNSObject;", "encodeBody", "LJavaLangStringBuilder;", "setSeqNumber", "J", "LAndroidJavaxSipInvalidArgumentException;", "setSequenceNumber", "I", "setMethod", "LNSString;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderCSeq = { "CSeq", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x1, 12, 3, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderCSeq;
}

@end

void AndroidGovNistJavaxSipHeaderCSeq_init(AndroidGovNistJavaxSipHeaderCSeq *self) {
  AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderSIPHeaderNames_CSEQ);
}

AndroidGovNistJavaxSipHeaderCSeq *new_AndroidGovNistJavaxSipHeaderCSeq_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderCSeq, init)
}

AndroidGovNistJavaxSipHeaderCSeq *create_AndroidGovNistJavaxSipHeaderCSeq_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderCSeq, init)
}

void AndroidGovNistJavaxSipHeaderCSeq_initWithLong_withNSString_(AndroidGovNistJavaxSipHeaderCSeq *self, jlong seqno, NSString *method) {
  AndroidGovNistJavaxSipHeaderCSeq_init(self);
  JreStrongAssign(&self->seqno_, JavaLangLong_valueOfWithLong_(seqno));
  JreStrongAssign(&self->method_, AndroidGovNistJavaxSipMessageSIPRequest_getCannonicalNameWithNSString_(method));
}

AndroidGovNistJavaxSipHeaderCSeq *new_AndroidGovNistJavaxSipHeaderCSeq_initWithLong_withNSString_(jlong seqno, NSString *method) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderCSeq, initWithLong_withNSString_, seqno, method)
}

AndroidGovNistJavaxSipHeaderCSeq *create_AndroidGovNistJavaxSipHeaderCSeq_initWithLong_withNSString_(jlong seqno, NSString *method) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderCSeq, initWithLong_withNSString_, seqno, method)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderCSeq)
