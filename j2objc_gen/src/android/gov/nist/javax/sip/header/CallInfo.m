//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/CallInfo.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/javax/sip/address/GenericURI.h"
#include "android/gov/nist/javax/sip/header/CallInfo.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderNames.h"
#include "android/javax/sip/address/URI.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/text/ParseException.h"

inline jlong AndroidGovNistJavaxSipHeaderCallInfo_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderCallInfo_serialVersionUID -8179246487696752928LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderCallInfo, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderCallInfo

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderCallInfo_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)encodeBody {
  return [((JavaLangStringBuilder *) nil_chk([self encodeBodyWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:AndroidGovNistCoreGenericObject_LESS_THAN];
  [((AndroidGovNistJavaxSipAddressGenericURI *) nil_chk(info_)) encodeWithJavaLangStringBuilder:buffer];
  [buffer appendWithNSString:AndroidGovNistCoreGenericObject_GREATER_THAN];
  if (parameters_ != nil && ![parameters_ isEmpty]) {
    [buffer appendWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON];
    [((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) encodeWithJavaLangStringBuilder:buffer];
  }
  return buffer;
}

- (NSString *)getPurpose {
  return [self getParameterWithNSString:@"purpose"];
}

- (id<AndroidJavaxSipAddressURI>)getInfo {
  return info_;
}

- (void)setPurposeWithNSString:(NSString *)purpose {
  if (purpose == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null arg");
  @try {
    [self setParameterWithNSString:@"purpose" withNSString:purpose];
  }
  @catch (JavaTextParseException *ex) {
  }
}

- (void)setInfoWithAndroidJavaxSipAddressURI:(id<AndroidJavaxSipAddressURI>)info {
  JreStrongAssign(&self->info_, (AndroidGovNistJavaxSipAddressGenericURI *) cast_chk(info, [AndroidGovNistJavaxSipAddressGenericURI class]));
}

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderCallInfo *retval = (AndroidGovNistJavaxSipHeaderCallInfo *) cast_chk([super java_clone], [AndroidGovNistJavaxSipHeaderCallInfo class]);
  if (self->info_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSipHeaderCallInfo *) nil_chk(retval))->info_, (AndroidGovNistJavaxSipAddressGenericURI *) cast_chk([self->info_ java_clone], [AndroidGovNistJavaxSipAddressGenericURI class]));
  return retval;
}

- (void)dealloc {
  RELEASE_(info_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressURI;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encodeBody);
  methods[2].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[3].selector = @selector(getPurpose);
  methods[4].selector = @selector(getInfo);
  methods[5].selector = @selector(setPurposeWithNSString:);
  methods[6].selector = @selector(setInfoWithAndroidJavaxSipAddressURI:);
  methods[7].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderCallInfo_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "info_", "LAndroidGovNistJavaxSipAddressGenericURI;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "encodeBody", "LJavaLangStringBuilder;", "setPurpose", "LNSString;", "setInfo", "LAndroidJavaxSipAddressURI;", "clone" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderCallInfo = { "CallInfo", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x11, 8, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderCallInfo;
}

@end

void AndroidGovNistJavaxSipHeaderCallInfo_init(AndroidGovNistJavaxSipHeaderCallInfo *self) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderSIPHeaderNames_CALL_INFO);
}

AndroidGovNistJavaxSipHeaderCallInfo *new_AndroidGovNistJavaxSipHeaderCallInfo_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderCallInfo, init)
}

AndroidGovNistJavaxSipHeaderCallInfo *create_AndroidGovNistJavaxSipHeaderCallInfo_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderCallInfo, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderCallInfo)
