//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/ims/PMediaAuthorization.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PMediaAuthorization.h"
#include "android/gov/nist/javax/sip/header/ims/PMediaAuthorizationHeader.h"
#include "android/gov/nist/javax/sip/header/ims/SIPHeaderNamesIms.h"
#include "android/javax/sip/InvalidArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/text/ParseException.h"

@interface AndroidGovNistJavaxSipHeaderImsPMediaAuthorization () {
 @public
  NSString *token_;
}

@end

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipHeaderImsPMediaAuthorization, token_, NSString *)

inline jlong AndroidGovNistJavaxSipHeaderImsPMediaAuthorization_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderImsPMediaAuthorization_serialVersionUID -6463630258703731133LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderImsPMediaAuthorization, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderImsPMediaAuthorization

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderImsPMediaAuthorization_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getToken {
  return token_;
}

- (void)setMediaAuthorizationTokenWithNSString:(NSString *)token {
  if (token == nil || ((jint) [token length]) == 0) @throw create_AndroidJavaxSipInvalidArgumentException_initWithNSString_(@" the Media-Authorization-Token parameter is null or empty");
  JreStrongAssign(&self->token_, token);
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)encoding {
  return [((JavaLangStringBuilder *) nil_chk(encoding)) appendWithNSString:token_];
}

- (void)setValueWithNSString:(NSString *)value {
  @throw create_JavaTextParseException_initWithNSString_withInt_(value, 0);
}

- (jboolean)isEqual:(id)other {
  if ([AndroidGovNistJavaxSipHeaderImsPMediaAuthorizationHeader_class_() isInstance:other]) {
    id<AndroidGovNistJavaxSipHeaderImsPMediaAuthorizationHeader> o = (id<AndroidGovNistJavaxSipHeaderImsPMediaAuthorizationHeader>) cast_check(other, AndroidGovNistJavaxSipHeaderImsPMediaAuthorizationHeader_class_());
    return [((NSString *) nil_chk([self getToken])) isEqual:[((id<AndroidGovNistJavaxSipHeaderImsPMediaAuthorizationHeader>) nil_chk(o)) getToken]];
  }
  return false;
}

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderImsPMediaAuthorization *retval = (AndroidGovNistJavaxSipHeaderImsPMediaAuthorization *) cast_chk([super java_clone], [AndroidGovNistJavaxSipHeaderImsPMediaAuthorization class]);
  if (self->token_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSipHeaderImsPMediaAuthorization *) nil_chk(retval))->token_, self->token_);
  return retval;
}

- (void)dealloc {
  RELEASE_(token_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, 6, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getToken);
  methods[2].selector = @selector(setMediaAuthorizationTokenWithNSString:);
  methods[3].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[4].selector = @selector(setValueWithNSString:);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderImsPMediaAuthorization_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "token_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setMediaAuthorizationToken", "LNSString;", "LAndroidJavaxSipInvalidArgumentException;", "encodeBody", "LJavaLangStringBuilder;", "setValue", "LJavaTextParseException;", "equals", "LNSObject;", "clone" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderImsPMediaAuthorization = { "PMediaAuthorization", "android.gov.nist.javax.sip.header.ims", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderImsPMediaAuthorization;
}

@end

void AndroidGovNistJavaxSipHeaderImsPMediaAuthorization_init(AndroidGovNistJavaxSipHeaderImsPMediaAuthorization *self) {
  AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderImsSIPHeaderNamesIms_P_MEDIA_AUTHORIZATION);
}

AndroidGovNistJavaxSipHeaderImsPMediaAuthorization *new_AndroidGovNistJavaxSipHeaderImsPMediaAuthorization_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderImsPMediaAuthorization, init)
}

AndroidGovNistJavaxSipHeaderImsPMediaAuthorization *create_AndroidGovNistJavaxSipHeaderImsPMediaAuthorization_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderImsPMediaAuthorization, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderImsPMediaAuthorization)
