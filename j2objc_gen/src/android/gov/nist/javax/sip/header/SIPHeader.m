//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/SIPHeader.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/SIPObject.h"
#include "java/lang/StringBuilder.h"

@implementation AndroidGovNistJavaxSipHeaderSIPHeader

- (instancetype)initWithNSString:(NSString *)hname {
  AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(self, hname);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderSIPHeader_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getHeaderName {
  return headerName_;
}

- (NSString *)getName {
  return self->headerName_;
}

- (void)setHeaderNameWithNSString:(NSString *)hdrname {
  JreStrongAssign(&headerName_, hdrname);
}

- (NSString *)getHeaderValue {
  return [((JavaLangStringBuilder *) nil_chk([self encodeBodyWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (jboolean)isHeaderList {
  return false;
}

- (NSString *)encode {
  return [((JavaLangStringBuilder *) nil_chk([self encodeWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)encodeWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:self->headerName_])) appendWithNSString:AndroidGovNistCoreGenericObject_COLON])) appendWithNSString:AndroidGovNistCoreGenericObject_SP];
  [self encodeBodyWithJavaLangStringBuilder:buffer];
  [buffer appendWithNSString:AndroidGovNistCoreGenericObject_NEWLINE];
  return buffer;
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getValue {
  return [self getHeaderValue];
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(self->headerName_)) hash]);
}

- (NSString *)description {
  return [self encode];
}

- (void)dealloc {
  RELEASE_(headerName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x404, 4, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 6, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(getHeaderName);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(setHeaderNameWithNSString:);
  methods[5].selector = @selector(getHeaderValue);
  methods[6].selector = @selector(isHeaderList);
  methods[7].selector = @selector(encode);
  methods[8].selector = @selector(encodeWithJavaLangStringBuilder:);
  methods[9].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[10].selector = @selector(getValue);
  methods[11].selector = @selector(hash);
  methods[12].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "headerName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "setHeaderName", "encode", "LJavaLangStringBuilder;", "encodeBody", "hashCode", "toString" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderSIPHeader = { "SIPHeader", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x401, 13, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderSIPHeader;
}

@end

void AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(AndroidGovNistJavaxSipHeaderSIPHeader *self, NSString *hname) {
  AndroidGovNistJavaxSipHeaderSIPObject_init(self);
  JreStrongAssign(&self->headerName_, [((NSString *) nil_chk(hname)) java_intern]);
}

void AndroidGovNistJavaxSipHeaderSIPHeader_init(AndroidGovNistJavaxSipHeaderSIPHeader *self) {
  AndroidGovNistJavaxSipHeaderSIPObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderSIPHeader)
