//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/AddressParametersHeader.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/address/AddressImpl.h"
#include "android/gov/nist/javax/sip/header/AddressParametersHeader.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/javax/sip/address/Address.h"
#include "android/javax/sip/header/HeaderAddress.h"
#include "android/javax/sip/header/Parameters.h"

@implementation AndroidGovNistJavaxSipHeaderAddressParametersHeader

- (id<AndroidJavaxSipAddressAddress>)getAddress {
  return address_;
}

- (void)setAddressWithAndroidJavaxSipAddressAddress:(id<AndroidJavaxSipAddressAddress>)address {
  JreStrongAssign(&self->address_, (AndroidGovNistJavaxSipAddressAddressImpl *) cast_chk(address, [AndroidGovNistJavaxSipAddressAddressImpl class]));
}

- (instancetype)initWithNSString:(NSString *)name {
  AndroidGovNistJavaxSipHeaderAddressParametersHeader_initWithNSString_(self, name);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                     withBoolean:(jboolean)sync {
  AndroidGovNistJavaxSipHeaderAddressParametersHeader_initWithNSString_withBoolean_(self, name, sync);
  return self;
}

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderAddressParametersHeader *retval = (AndroidGovNistJavaxSipHeaderAddressParametersHeader *) cast_chk([super java_clone], [AndroidGovNistJavaxSipHeaderAddressParametersHeader class]);
  if (self->address_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSipHeaderAddressParametersHeader *) nil_chk(retval))->address_, (AndroidGovNistJavaxSipAddressAddressImpl *) cast_chk([self->address_ java_clone], [AndroidGovNistJavaxSipAddressAddressImpl class]));
  return retval;
}

- (jboolean)isEqual:(id)other {
  if (self == other) return true;
  if ([AndroidJavaxSipHeaderHeaderAddress_class_() isInstance:other] && [AndroidJavaxSipHeaderParameters_class_() isInstance:other]) {
    id<AndroidJavaxSipHeaderHeaderAddress> o = (id<AndroidJavaxSipHeaderHeaderAddress>) cast_check(other, AndroidJavaxSipHeaderHeaderAddress_class_());
    return [((id<AndroidJavaxSipAddressAddress>) nil_chk([self getAddress])) isEqual:[((id<AndroidJavaxSipHeaderHeaderAddress>) nil_chk(o)) getAddress]] && [self equalParametersWithAndroidJavaxSipHeaderParameters:(id<AndroidJavaxSipHeaderParameters>) cast_check(o, AndroidJavaxSipHeaderParameters_class_())];
  }
  return false;
}

- (void)dealloc {
  RELEASE_(address_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LAndroidJavaxSipAddressAddress;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getAddress);
  methods[1].selector = @selector(setAddressWithAndroidJavaxSipAddressAddress:);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(initWithNSString:withBoolean:);
  methods[4].selector = @selector(java_clone);
  methods[5].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "address_", "LAndroidGovNistJavaxSipAddressAddressImpl;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setAddress", "LAndroidJavaxSipAddressAddress;", "LNSString;", "LNSString;Z", "clone", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderAddressParametersHeader = { "AddressParametersHeader", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x401, 6, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderAddressParametersHeader;
}

@end

void AndroidGovNistJavaxSipHeaderAddressParametersHeader_initWithNSString_(AndroidGovNistJavaxSipHeaderAddressParametersHeader *self, NSString *name) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, name);
}

void AndroidGovNistJavaxSipHeaderAddressParametersHeader_initWithNSString_withBoolean_(AndroidGovNistJavaxSipHeaderAddressParametersHeader *self, NSString *name, jboolean sync) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_withBoolean_(self, name, sync);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderAddressParametersHeader)
