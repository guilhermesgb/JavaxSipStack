//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/AcceptEncoding.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/javax/sip/header/AcceptEncoding.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/javax/sip/InvalidArgumentException.h"
#include "android/javax/sip/header/AcceptEncodingHeader.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"

inline jlong AndroidGovNistJavaxSipHeaderAcceptEncoding_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderAcceptEncoding_serialVersionUID -1476807565552873525LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderAcceptEncoding, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderAcceptEncoding

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderAcceptEncoding_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)encodeBody {
  return [((JavaLangStringBuilder *) nil_chk([self encodeWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  if (contentCoding_ != nil) {
    [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:contentCoding_];
  }
  if (parameters_ != nil && ![parameters_ isEmpty]) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON])) appendWithNSString:[((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) encode]];
  }
  return buffer;
}

- (jfloat)getQValue {
  return [self getParameterAsFloatWithNSString:@"q"];
}

- (NSString *)getEncoding {
  return contentCoding_;
}

- (void)setQValueWithFloat:(jfloat)q {
  if (q < 0.0 || q > 1.0) @throw create_AndroidJavaxSipInvalidArgumentException_initWithNSString_(@"qvalue out of range!");
  [super setParameterWithNSString:@"q" withFloat:q];
}

- (void)setEncodingWithNSString:(NSString *)encoding {
  if (encoding == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@" encoding parameter is null");
  JreStrongAssign(&contentCoding_, encoding);
}

- (void)dealloc {
  RELEASE_(contentCoding_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 7, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encodeBody);
  methods[2].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[3].selector = @selector(getQValue);
  methods[4].selector = @selector(getEncoding);
  methods[5].selector = @selector(setQValueWithFloat:);
  methods[6].selector = @selector(setEncodingWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderAcceptEncoding_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "contentCoding_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "encodeBody", "LJavaLangStringBuilder;", "setQValue", "F", "LAndroidJavaxSipInvalidArgumentException;", "setEncoding", "LNSString;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderAcceptEncoding = { "AcceptEncoding", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x11, 7, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderAcceptEncoding;
}

@end

void AndroidGovNistJavaxSipHeaderAcceptEncoding_init(AndroidGovNistJavaxSipHeaderAcceptEncoding *self) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidJavaxSipHeaderAcceptEncodingHeader_NAME);
}

AndroidGovNistJavaxSipHeaderAcceptEncoding *new_AndroidGovNistJavaxSipHeaderAcceptEncoding_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderAcceptEncoding, init)
}

AndroidGovNistJavaxSipHeaderAcceptEncoding *create_AndroidGovNistJavaxSipHeaderAcceptEncoding_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderAcceptEncoding, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderAcceptEncoding)
