//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/Expires.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/Expires.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/javax/sip/InvalidArgumentException.h"
#include "android/javax/sip/header/ExpiresHeader.h"
#include "java/lang/StringBuilder.h"

inline jlong AndroidGovNistJavaxSipHeaderExpires_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderExpires_serialVersionUID 3134344915465784267LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderExpires, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderExpires

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderExpires_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)encodeBody {
  return [((JavaLangStringBuilder *) nil_chk([self encodeBodyWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  return [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithInt:expires_];
}

- (jint)getExpires {
  return expires_;
}

- (void)setExpiresWithInt:(jint)expires {
  if (expires < 0) @throw create_AndroidJavaxSipInvalidArgumentException_initWithNSString_(JreStrcat("$I", @"bad argument ", expires));
  self->expires_ = expires;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encodeBody);
  methods[2].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[3].selector = @selector(getExpires);
  methods[4].selector = @selector(setExpiresWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderExpires_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "expires_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "encodeBody", "LJavaLangStringBuilder;", "setExpires", "I", "LAndroidJavaxSipInvalidArgumentException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderExpires = { "Expires", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderExpires;
}

@end

void AndroidGovNistJavaxSipHeaderExpires_init(AndroidGovNistJavaxSipHeaderExpires *self) {
  AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(self, AndroidJavaxSipHeaderExpiresHeader_NAME);
}

AndroidGovNistJavaxSipHeaderExpires *new_AndroidGovNistJavaxSipHeaderExpires_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderExpires, init)
}

AndroidGovNistJavaxSipHeaderExpires *create_AndroidGovNistJavaxSipHeaderExpires_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderExpires, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderExpires)
