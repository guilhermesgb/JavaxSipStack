//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/ExtensionHeaderImpl.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/javax/sip/header/ExtensionHeaderImpl.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/StringBuilder.h"

inline jlong AndroidGovNistJavaxSipHeaderExtensionHeaderImpl_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderExtensionHeaderImpl_serialVersionUID -8693922839612081849LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderExtensionHeaderImpl, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderExtensionHeaderImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderExtensionHeaderImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)headerName {
  AndroidGovNistJavaxSipHeaderExtensionHeaderImpl_initWithNSString_(self, headerName);
  return self;
}

- (void)setNameWithNSString:(NSString *)headerName {
  JreStrongAssign(&self->headerName_, headerName);
}

- (void)setValueWithNSString:(NSString *)value {
  JreStrongAssign(&self->value_, value);
}

- (NSString *)getHeaderValue {
  if (self->value_ != nil) {
    return self->value_;
  }
  else {
    NSString *encodedHdr = nil;
    @try {
      encodedHdr = [self encode];
    }
    @catch (JavaLangException *ex) {
      return nil;
    }
    JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_initWithNSString_(encodedHdr);
    while ([buffer length] > 0 && [buffer charAtWithInt:0] != ':') {
      [buffer deleteCharAtWithInt:0];
    }
    [buffer deleteCharAtWithInt:0];
    JreStrongAssign(&self->value_, [((NSString *) nil_chk([buffer description])) java_trim]);
    return self->value_;
  }
}

- (NSString *)encode {
  return [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([create_JavaLangStringBuffer_initWithNSString_(self->headerName_) appendWithNSString:AndroidGovNistCoreGenericObject_COLON])) appendWithNSString:AndroidGovNistCoreGenericObject_SP])) appendWithNSString:self->value_])) appendWithNSString:AndroidGovNistCoreGenericObject_NEWLINE])) description];
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  return [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:[self encodeBody]];
}

- (NSString *)encodeBody {
  return [self getHeaderValue];
}

- (void)dealloc {
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(setNameWithNSString:);
  methods[3].selector = @selector(setValueWithNSString:);
  methods[4].selector = @selector(getHeaderValue);
  methods[5].selector = @selector(encode);
  methods[6].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[7].selector = @selector(encodeBody);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderExtensionHeaderImpl_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "setName", "setValue", "encodeBody", "LJavaLangStringBuilder;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderExtensionHeaderImpl = { "ExtensionHeaderImpl", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderExtensionHeaderImpl;
}

@end

void AndroidGovNistJavaxSipHeaderExtensionHeaderImpl_init(AndroidGovNistJavaxSipHeaderExtensionHeaderImpl *self) {
  AndroidGovNistJavaxSipHeaderSIPHeader_init(self);
}

AndroidGovNistJavaxSipHeaderExtensionHeaderImpl *new_AndroidGovNistJavaxSipHeaderExtensionHeaderImpl_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderExtensionHeaderImpl, init)
}

AndroidGovNistJavaxSipHeaderExtensionHeaderImpl *create_AndroidGovNistJavaxSipHeaderExtensionHeaderImpl_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderExtensionHeaderImpl, init)
}

void AndroidGovNistJavaxSipHeaderExtensionHeaderImpl_initWithNSString_(AndroidGovNistJavaxSipHeaderExtensionHeaderImpl *self, NSString *headerName) {
  AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(self, headerName);
}

AndroidGovNistJavaxSipHeaderExtensionHeaderImpl *new_AndroidGovNistJavaxSipHeaderExtensionHeaderImpl_initWithNSString_(NSString *headerName) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderExtensionHeaderImpl, initWithNSString_, headerName)
}

AndroidGovNistJavaxSipHeaderExtensionHeaderImpl *create_AndroidGovNistJavaxSipHeaderExtensionHeaderImpl_initWithNSString_(NSString *headerName) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderExtensionHeaderImpl, initWithNSString_, headerName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderExtensionHeaderImpl)
