//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/AcceptLanguage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipHeaderAcceptLanguage")
#ifdef RESTRICT_AndroidGovNistJavaxSipHeaderAcceptLanguage
#define INCLUDE_ALL_AndroidGovNistJavaxSipHeaderAcceptLanguage 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipHeaderAcceptLanguage 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipHeaderAcceptLanguage

#if !defined (AndroidGovNistJavaxSipHeaderAcceptLanguage_) && (INCLUDE_ALL_AndroidGovNistJavaxSipHeaderAcceptLanguage || defined(INCLUDE_AndroidGovNistJavaxSipHeaderAcceptLanguage))
#define AndroidGovNistJavaxSipHeaderAcceptLanguage_

#define RESTRICT_AndroidGovNistJavaxSipHeaderParametersHeader 1
#define INCLUDE_AndroidGovNistJavaxSipHeaderParametersHeader 1
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"

#define RESTRICT_AndroidJavaxSipHeaderAcceptLanguageHeader 1
#define INCLUDE_AndroidJavaxSipHeaderAcceptLanguageHeader 1
#include "android/javax/sip/header/AcceptLanguageHeader.h"

@class JavaLangStringBuilder;
@class JavaUtilLocale;

@interface AndroidGovNistJavaxSipHeaderAcceptLanguage : AndroidGovNistJavaxSipHeaderParametersHeader < AndroidJavaxSipHeaderAcceptLanguageHeader > {
 @public
  NSString *languageRange_;
}

#pragma mark Public

- (instancetype)init;

- (JavaUtilLocale *)getAcceptLanguage;

- (NSString *)getLanguageRange;

- (jfloat)getQValue;

- (jboolean)hasQValue;

- (void)removeQValue;

- (void)setAcceptLanguageWithJavaUtilLocale:(JavaUtilLocale *)language;

- (void)setLanguageRangeWithNSString:(NSString *)languageRange;

- (void)setQValueWithFloat:(jfloat)q;

#pragma mark Protected

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)encoding;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipHeaderAcceptLanguage)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipHeaderAcceptLanguage, languageRange_, NSString *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipHeaderAcceptLanguage_init(AndroidGovNistJavaxSipHeaderAcceptLanguage *self);

FOUNDATION_EXPORT AndroidGovNistJavaxSipHeaderAcceptLanguage *new_AndroidGovNistJavaxSipHeaderAcceptLanguage_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipHeaderAcceptLanguage *create_AndroidGovNistJavaxSipHeaderAcceptLanguage_init();

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipHeaderAcceptLanguage)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipHeaderAcceptLanguage")
