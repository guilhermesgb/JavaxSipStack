//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/Credentials.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/javax/sip/header/Credentials.h"
#include "android/gov/nist/javax/sip/header/SIPObject.h"

inline jlong AndroidGovNistJavaxSipHeaderCredentials_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderCredentials_serialVersionUID -6335592791505451524LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderCredentials, serialVersionUID, jlong)

inline NSString *AndroidGovNistJavaxSipHeaderCredentials_get_DOMAIN();
inline NSString *AndroidGovNistJavaxSipHeaderCredentials_set_DOMAIN(NSString *value);
static NSString *AndroidGovNistJavaxSipHeaderCredentials_DOMAIN = @"domain";
J2OBJC_STATIC_FIELD_OBJ(AndroidGovNistJavaxSipHeaderCredentials, DOMAIN, NSString *)

inline NSString *AndroidGovNistJavaxSipHeaderCredentials_get_REALM();
inline NSString *AndroidGovNistJavaxSipHeaderCredentials_set_REALM(NSString *value);
static NSString *AndroidGovNistJavaxSipHeaderCredentials_REALM = @"realm";
J2OBJC_STATIC_FIELD_OBJ(AndroidGovNistJavaxSipHeaderCredentials, REALM, NSString *)

inline NSString *AndroidGovNistJavaxSipHeaderCredentials_get_OPAQUE();
inline NSString *AndroidGovNistJavaxSipHeaderCredentials_set_OPAQUE(NSString *value);
static NSString *AndroidGovNistJavaxSipHeaderCredentials_OPAQUE = @"opaque";
J2OBJC_STATIC_FIELD_OBJ(AndroidGovNistJavaxSipHeaderCredentials, OPAQUE, NSString *)

inline NSString *AndroidGovNistJavaxSipHeaderCredentials_get_RESPONSE();
inline NSString *AndroidGovNistJavaxSipHeaderCredentials_set_RESPONSE(NSString *value);
static NSString *AndroidGovNistJavaxSipHeaderCredentials_RESPONSE = @"response";
J2OBJC_STATIC_FIELD_OBJ(AndroidGovNistJavaxSipHeaderCredentials, RESPONSE, NSString *)

inline NSString *AndroidGovNistJavaxSipHeaderCredentials_get_URI();
inline NSString *AndroidGovNistJavaxSipHeaderCredentials_set_URI(NSString *value);
static NSString *AndroidGovNistJavaxSipHeaderCredentials_URI = @"uri";
J2OBJC_STATIC_FIELD_OBJ(AndroidGovNistJavaxSipHeaderCredentials, URI, NSString *)

inline NSString *AndroidGovNistJavaxSipHeaderCredentials_get_NONCE();
inline NSString *AndroidGovNistJavaxSipHeaderCredentials_set_NONCE(NSString *value);
static NSString *AndroidGovNistJavaxSipHeaderCredentials_NONCE = @"nonce";
J2OBJC_STATIC_FIELD_OBJ(AndroidGovNistJavaxSipHeaderCredentials, NONCE, NSString *)

inline NSString *AndroidGovNistJavaxSipHeaderCredentials_get_CNONCE();
inline NSString *AndroidGovNistJavaxSipHeaderCredentials_set_CNONCE(NSString *value);
static NSString *AndroidGovNistJavaxSipHeaderCredentials_CNONCE = @"cnonce";
J2OBJC_STATIC_FIELD_OBJ(AndroidGovNistJavaxSipHeaderCredentials, CNONCE, NSString *)

inline NSString *AndroidGovNistJavaxSipHeaderCredentials_get_USERNAME();
inline NSString *AndroidGovNistJavaxSipHeaderCredentials_set_USERNAME(NSString *value);
static NSString *AndroidGovNistJavaxSipHeaderCredentials_USERNAME = @"username";
J2OBJC_STATIC_FIELD_OBJ(AndroidGovNistJavaxSipHeaderCredentials, USERNAME, NSString *)

@implementation AndroidGovNistJavaxSipHeaderCredentials

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderCredentials_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (AndroidGovNistCoreNameValueList *)getCredentials {
  return parameters_;
}

- (NSString *)getScheme {
  return scheme_;
}

- (void)setSchemeWithNSString:(NSString *)s {
  JreStrongAssign(&scheme_, s);
}

- (void)setCredentialsWithAndroidGovNistCoreNameValueList:(AndroidGovNistCoreNameValueList *)c {
  JreStrongAssign(&parameters_, c);
}

- (NSString *)encode {
  NSString *retval = scheme_;
  if (![((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) isEmpty]) {
    JreStrAppend(&retval, "$$", AndroidGovNistCoreGenericObject_SP, [((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) encode]);
  }
  return retval;
}

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderCredentials *retval = (AndroidGovNistJavaxSipHeaderCredentials *) cast_chk([super java_clone], [AndroidGovNistJavaxSipHeaderCredentials class]);
  if (self->parameters_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSipHeaderCredentials *) nil_chk(retval))->parameters_, (AndroidGovNistCoreNameValueList *) cast_chk([self->parameters_ java_clone], [AndroidGovNistCoreNameValueList class]));
  return retval;
}

- (void)dealloc {
  RELEASE_(scheme_);
  RELEASE_(parameters_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistCoreNameValueList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getCredentials);
  methods[2].selector = @selector(getScheme);
  methods[3].selector = @selector(setSchemeWithNSString:);
  methods[4].selector = @selector(setCredentialsWithAndroidGovNistCoreNameValueList:);
  methods[5].selector = @selector(encode);
  methods[6].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderCredentials_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "DOMAIN", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 5, -1, -1 },
    { "REALM", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 6, -1, -1 },
    { "OPAQUE", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 7, -1, -1 },
    { "RESPONSE", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 8, -1, -1 },
    { "URI", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 9, -1, -1 },
    { "NONCE", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 10, -1, -1 },
    { "CNONCE", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 11, -1, -1 },
    { "USERNAME", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 12, -1, -1 },
    { "scheme_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "parameters_", "LAndroidGovNistCoreNameValueList;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setScheme", "LNSString;", "setCredentials", "LAndroidGovNistCoreNameValueList;", "clone", &AndroidGovNistJavaxSipHeaderCredentials_DOMAIN, &AndroidGovNistJavaxSipHeaderCredentials_REALM, &AndroidGovNistJavaxSipHeaderCredentials_OPAQUE, &AndroidGovNistJavaxSipHeaderCredentials_RESPONSE, &AndroidGovNistJavaxSipHeaderCredentials_URI, &AndroidGovNistJavaxSipHeaderCredentials_NONCE, &AndroidGovNistJavaxSipHeaderCredentials_CNONCE, &AndroidGovNistJavaxSipHeaderCredentials_USERNAME };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderCredentials = { "Credentials", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x1, 7, 11, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderCredentials;
}

@end

void AndroidGovNistJavaxSipHeaderCredentials_init(AndroidGovNistJavaxSipHeaderCredentials *self) {
  AndroidGovNistJavaxSipHeaderSIPObject_init(self);
  JreStrongAssignAndConsume(&self->parameters_, new_AndroidGovNistCoreNameValueList_init());
  [self->parameters_ setSeparatorWithNSString:AndroidGovNistCoreGenericObject_COMMA];
}

AndroidGovNistJavaxSipHeaderCredentials *new_AndroidGovNistJavaxSipHeaderCredentials_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderCredentials, init)
}

AndroidGovNistJavaxSipHeaderCredentials *create_AndroidGovNistJavaxSipHeaderCredentials_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderCredentials, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderCredentials)
