//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/Challenge.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipHeaderChallenge")
#ifdef RESTRICT_AndroidGovNistJavaxSipHeaderChallenge
#define INCLUDE_ALL_AndroidGovNistJavaxSipHeaderChallenge 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipHeaderChallenge 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipHeaderChallenge

#if !defined (AndroidGovNistJavaxSipHeaderChallenge_) && (INCLUDE_ALL_AndroidGovNistJavaxSipHeaderChallenge || defined(INCLUDE_AndroidGovNistJavaxSipHeaderChallenge))
#define AndroidGovNistJavaxSipHeaderChallenge_

#define RESTRICT_AndroidGovNistJavaxSipHeaderSIPObject 1
#define INCLUDE_AndroidGovNistJavaxSipHeaderSIPObject 1
#include "android/gov/nist/javax/sip/header/SIPObject.h"

@class AndroidGovNistCoreNameValue;
@class AndroidGovNistCoreNameValueList;

@interface AndroidGovNistJavaxSipHeaderChallenge : AndroidGovNistJavaxSipHeaderSIPObject {
 @public
  NSString *scheme_;
  AndroidGovNistCoreNameValueList *authParams_;
}

#pragma mark Public

- (instancetype)init;

- (id)java_clone;

- (NSString *)encode;

- (NSString *)getAlgorithm;

- (AndroidGovNistCoreNameValueList *)getAuthParams;

- (NSString *)getDomain;

- (NSString *)getOpaque;

- (NSString *)getParameterWithNSString:(NSString *)name;

- (NSString *)getQOP;

- (NSString *)getRealm;

- (NSString *)getResponse;

- (NSString *)getScheme;

- (NSString *)getSignature;

- (NSString *)getSignedBy;

- (NSString *)getStale;

- (NSString *)getURI;

- (jboolean)hasParameterWithNSString:(NSString *)name;

- (jboolean)hasParameters;

- (jboolean)removeParameterWithNSString:(NSString *)name;

- (void)removeParameters;

- (void)setAuthParamsWithAndroidGovNistCoreNameValueList:(AndroidGovNistCoreNameValueList *)a;

- (void)setParameterWithAndroidGovNistCoreNameValue:(AndroidGovNistCoreNameValue *)nv;

- (void)setSchemeWithNSString:(NSString *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipHeaderChallenge)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipHeaderChallenge, scheme_, NSString *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipHeaderChallenge, authParams_, AndroidGovNistCoreNameValueList *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipHeaderChallenge_init(AndroidGovNistJavaxSipHeaderChallenge *self);

FOUNDATION_EXPORT AndroidGovNistJavaxSipHeaderChallenge *new_AndroidGovNistJavaxSipHeaderChallenge_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipHeaderChallenge *create_AndroidGovNistJavaxSipHeaderChallenge_init();

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipHeaderChallenge)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipHeaderChallenge")
