//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/NameMap.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/Accept.h"
#include "android/gov/nist/javax/sip/header/AcceptEncoding.h"
#include "android/gov/nist/javax/sip/header/AcceptLanguage.h"
#include "android/gov/nist/javax/sip/header/AlertInfo.h"
#include "android/gov/nist/javax/sip/header/Allow.h"
#include "android/gov/nist/javax/sip/header/AllowEvents.h"
#include "android/gov/nist/javax/sip/header/Authorization.h"
#include "android/gov/nist/javax/sip/header/CSeq.h"
#include "android/gov/nist/javax/sip/header/CallID.h"
#include "android/gov/nist/javax/sip/header/CallInfo.h"
#include "android/gov/nist/javax/sip/header/Contact.h"
#include "android/gov/nist/javax/sip/header/ContentDisposition.h"
#include "android/gov/nist/javax/sip/header/ContentEncoding.h"
#include "android/gov/nist/javax/sip/header/ContentLanguage.h"
#include "android/gov/nist/javax/sip/header/ContentLength.h"
#include "android/gov/nist/javax/sip/header/ContentType.h"
#include "android/gov/nist/javax/sip/header/ErrorInfo.h"
#include "android/gov/nist/javax/sip/header/Event.h"
#include "android/gov/nist/javax/sip/header/Expires.h"
#include "android/gov/nist/javax/sip/header/From.h"
#include "android/gov/nist/javax/sip/header/InReplyTo.h"
#include "android/gov/nist/javax/sip/header/MaxForwards.h"
#include "android/gov/nist/javax/sip/header/MimeVersion.h"
#include "android/gov/nist/javax/sip/header/MinExpires.h"
#include "android/gov/nist/javax/sip/header/NameMap.h"
#include "android/gov/nist/javax/sip/header/Organization.h"
#include "android/gov/nist/javax/sip/header/Priority.h"
#include "android/gov/nist/javax/sip/header/ProxyAuthenticate.h"
#include "android/gov/nist/javax/sip/header/ProxyAuthorization.h"
#include "android/gov/nist/javax/sip/header/ProxyRequire.h"
#include "android/gov/nist/javax/sip/header/RecordRoute.h"
#include "android/gov/nist/javax/sip/header/ReplyTo.h"
#include "android/gov/nist/javax/sip/header/Require.h"
#include "android/gov/nist/javax/sip/header/RetryAfter.h"
#include "android/gov/nist/javax/sip/header/Route.h"
#include "android/gov/nist/javax/sip/header/SIPDateHeader.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderNames.h"
#include "android/gov/nist/javax/sip/header/Server.h"
#include "android/gov/nist/javax/sip/header/Subject.h"
#include "android/gov/nist/javax/sip/header/SubscriptionState.h"
#include "android/gov/nist/javax/sip/header/Supported.h"
#include "android/gov/nist/javax/sip/header/TimeStamp.h"
#include "android/gov/nist/javax/sip/header/To.h"
#include "android/gov/nist/javax/sip/header/Unsupported.h"
#include "android/gov/nist/javax/sip/header/UserAgent.h"
#include "android/gov/nist/javax/sip/header/Via.h"
#include "android/gov/nist/javax/sip/header/WWWAuthenticate.h"
#include "android/gov/nist/javax/sip/header/Warning.h"
#include "android/gov/nist/javax/sip/header/ims/PAccessNetworkInfo.h"
#include "android/gov/nist/javax/sip/header/ims/PAccessNetworkInfoHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PAssertedIdentity.h"
#include "android/gov/nist/javax/sip/header/ims/PAssertedIdentityHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PAssociatedURI.h"
#include "android/gov/nist/javax/sip/header/ims/PAssociatedURIHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PCalledPartyID.h"
#include "android/gov/nist/javax/sip/header/ims/PCalledPartyIDHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PChargingFunctionAddresses.h"
#include "android/gov/nist/javax/sip/header/ims/PChargingFunctionAddressesHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PChargingVector.h"
#include "android/gov/nist/javax/sip/header/ims/PChargingVectorHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PMediaAuthorization.h"
#include "android/gov/nist/javax/sip/header/ims/PMediaAuthorizationHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PPreferredIdentity.h"
#include "android/gov/nist/javax/sip/header/ims/PPreferredIdentityHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PVisitedNetworkID.h"
#include "android/gov/nist/javax/sip/header/ims/PVisitedNetworkIDHeader.h"
#include "android/gov/nist/javax/sip/header/ims/Path.h"
#include "android/gov/nist/javax/sip/header/ims/PathHeader.h"
#include "android/gov/nist/javax/sip/header/ims/Privacy.h"
#include "android/gov/nist/javax/sip/header/ims/PrivacyHeader.h"
#include "android/gov/nist/javax/sip/header/ims/ServiceRoute.h"
#include "android/gov/nist/javax/sip/header/ims/ServiceRouteHeader.h"
#include "android/javax/sip/header/AllowHeader.h"
#include "android/javax/sip/header/ContentLanguageHeader.h"
#include "android/javax/sip/header/ErrorInfoHeader.h"
#include "android/javax/sip/header/InReplyToHeader.h"
#include "android/javax/sip/header/MimeVersionHeader.h"
#include "android/javax/sip/header/MinExpiresHeader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface AndroidGovNistJavaxSipHeaderNameMap ()

+ (void)initializeNameMap OBJC_METHOD_FAMILY_NONE;

@end

__attribute__((unused)) static void AndroidGovNistJavaxSipHeaderNameMap_initializeNameMap();

J2OBJC_INITIALIZED_DEFN(AndroidGovNistJavaxSipHeaderNameMap)

id<JavaUtilMap> AndroidGovNistJavaxSipHeaderNameMap_nameMap;

@implementation AndroidGovNistJavaxSipHeaderNameMap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderNameMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)putNameMapWithNSString:(NSString *)headerName
                  withNSString:(NSString *)className_ {
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(headerName, className_);
}

+ (IOSClass *)getClassFromNameWithNSString:(NSString *)headerName {
  return AndroidGovNistJavaxSipHeaderNameMap_getClassFromNameWithNSString_(headerName);
}

+ (void)addExtensionHeaderWithNSString:(NSString *)headerName
                          withNSString:(NSString *)className_ {
  AndroidGovNistJavaxSipHeaderNameMap_addExtensionHeaderWithNSString_withNSString_(headerName, className_);
}

+ (void)initializeNameMap {
  AndroidGovNistJavaxSipHeaderNameMap_initializeNameMap();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xc, 0, 1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(putNameMapWithNSString:withNSString:);
  methods[2].selector = @selector(getClassFromNameWithNSString:);
  methods[3].selector = @selector(addExtensionHeaderWithNSString:withNSString:);
  methods[4].selector = @selector(initializeNameMap);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "nameMap", "LJavaUtilMap;", .constantValue.asLong = 0, 0x8, -1, 5, 6, -1 },
  };
  static const void *ptrTable[] = { "putNameMap", "LNSString;LNSString;", "getClassFromName", "LNSString;", "addExtensionHeader", &AndroidGovNistJavaxSipHeaderNameMap_nameMap, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderNameMap = { "NameMap", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderNameMap;
}

+ (void)initialize {
  if (self == [AndroidGovNistJavaxSipHeaderNameMap class]) {
    {
      AndroidGovNistJavaxSipHeaderNameMap_initializeNameMap();
    }
    J2OBJC_SET_INITIALIZED(AndroidGovNistJavaxSipHeaderNameMap)
  }
}

@end

void AndroidGovNistJavaxSipHeaderNameMap_init(AndroidGovNistJavaxSipHeaderNameMap *self) {
  NSObject_init(self);
}

AndroidGovNistJavaxSipHeaderNameMap *new_AndroidGovNistJavaxSipHeaderNameMap_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderNameMap, init)
}

AndroidGovNistJavaxSipHeaderNameMap *create_AndroidGovNistJavaxSipHeaderNameMap_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderNameMap, init)
}

void AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(NSString *headerName, NSString *className_) {
  AndroidGovNistJavaxSipHeaderNameMap_initialize();
  [((id<JavaUtilMap>) nil_chk(AndroidGovNistJavaxSipHeaderNameMap_nameMap)) putWithId:[((NSString *) nil_chk(headerName)) lowercaseString] withId:className_];
}

IOSClass *AndroidGovNistJavaxSipHeaderNameMap_getClassFromNameWithNSString_(NSString *headerName) {
  AndroidGovNistJavaxSipHeaderNameMap_initialize();
  NSString *className_ = [((id<JavaUtilMap>) nil_chk(AndroidGovNistJavaxSipHeaderNameMap_nameMap)) getWithId:[((NSString *) nil_chk(headerName)) lowercaseString]];
  if (className_ == nil) return nil;
  else {
    @try {
      return IOSClass_forName_(className_);
    }
    @catch (JavaLangClassNotFoundException *ex) {
      return nil;
    }
  }
}

void AndroidGovNistJavaxSipHeaderNameMap_addExtensionHeaderWithNSString_withNSString_(NSString *headerName, NSString *className_) {
  AndroidGovNistJavaxSipHeaderNameMap_initialize();
  [((id<JavaUtilMap>) nil_chk(AndroidGovNistJavaxSipHeaderNameMap_nameMap)) putWithId:[((NSString *) nil_chk(headerName)) lowercaseString] withId:className_];
}

void AndroidGovNistJavaxSipHeaderNameMap_initializeNameMap() {
  AndroidGovNistJavaxSipHeaderNameMap_initialize();
  JreStrongAssignAndConsume(&AndroidGovNistJavaxSipHeaderNameMap_nameMap, new_JavaUtilHashMap_initWithInt_(63));
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidJavaxSipHeaderMinExpiresHeader_NAME, [AndroidGovNistJavaxSipHeaderMinExpires_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidJavaxSipHeaderErrorInfoHeader_NAME, [AndroidGovNistJavaxSipHeaderErrorInfo_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidJavaxSipHeaderMimeVersionHeader_NAME, [AndroidGovNistJavaxSipHeaderMimeVersion_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidJavaxSipHeaderInReplyToHeader_NAME, [AndroidGovNistJavaxSipHeaderInReplyTo_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidJavaxSipHeaderAllowHeader_NAME, [AndroidGovNistJavaxSipHeaderAllow_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidJavaxSipHeaderContentLanguageHeader_NAME, [AndroidGovNistJavaxSipHeaderContentLanguage_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_CALL_INFO, [AndroidGovNistJavaxSipHeaderCallInfo_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_CSEQ, [AndroidGovNistJavaxSipHeaderCSeq_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_ALERT_INFO, [AndroidGovNistJavaxSipHeaderAlertInfo_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_ACCEPT_ENCODING, [AndroidGovNistJavaxSipHeaderAcceptEncoding_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_ACCEPT, [AndroidGovNistJavaxSipHeaderAccept_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_ACCEPT_LANGUAGE, [AndroidGovNistJavaxSipHeaderAcceptLanguage_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_RECORD_ROUTE, [AndroidGovNistJavaxSipHeaderRecordRoute_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_TIMESTAMP, [AndroidGovNistJavaxSipHeaderTimeStamp_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_TO, [AndroidGovNistJavaxSipHeaderTo_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_VIA, [AndroidGovNistJavaxSipHeaderVia_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_FROM, [AndroidGovNistJavaxSipHeaderFrom_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_CALL_ID, [AndroidGovNistJavaxSipHeaderCallID_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_AUTHORIZATION, [AndroidGovNistJavaxSipHeaderAuthorization_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_PROXY_AUTHENTICATE, [AndroidGovNistJavaxSipHeaderProxyAuthenticate_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_SERVER, [AndroidGovNistJavaxSipHeaderServer_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_UNSUPPORTED, [AndroidGovNistJavaxSipHeaderUnsupported_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_RETRY_AFTER, [AndroidGovNistJavaxSipHeaderRetryAfter_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_CONTENT_TYPE, [AndroidGovNistJavaxSipHeaderContentType_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_CONTENT_ENCODING, [AndroidGovNistJavaxSipHeaderContentEncoding_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_CONTENT_LENGTH, [AndroidGovNistJavaxSipHeaderContentLength_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_ROUTE, [AndroidGovNistJavaxSipHeaderRoute_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_CONTACT, [AndroidGovNistJavaxSipHeaderContact_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_WWW_AUTHENTICATE, [AndroidGovNistJavaxSipHeaderWWWAuthenticate_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_MAX_FORWARDS, [AndroidGovNistJavaxSipHeaderMaxForwards_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_ORGANIZATION, [AndroidGovNistJavaxSipHeaderOrganization_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_PROXY_AUTHORIZATION, [AndroidGovNistJavaxSipHeaderProxyAuthorization_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_PROXY_REQUIRE, [AndroidGovNistJavaxSipHeaderProxyRequire_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_REQUIRE, [AndroidGovNistJavaxSipHeaderRequire_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_CONTENT_DISPOSITION, [AndroidGovNistJavaxSipHeaderContentDisposition_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_SUBJECT, [AndroidGovNistJavaxSipHeaderSubject_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_USER_AGENT, [AndroidGovNistJavaxSipHeaderUserAgent_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_WARNING, [AndroidGovNistJavaxSipHeaderWarning_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_PRIORITY, [AndroidGovNistJavaxSipHeaderPriority_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_DATE, [AndroidGovNistJavaxSipHeaderSIPDateHeader_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_EXPIRES, [AndroidGovNistJavaxSipHeaderExpires_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_SUPPORTED, [AndroidGovNistJavaxSipHeaderSupported_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_REPLY_TO, [AndroidGovNistJavaxSipHeaderReplyTo_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_SUBSCRIPTION_STATE, [AndroidGovNistJavaxSipHeaderSubscriptionState_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_EVENT, [AndroidGovNistJavaxSipHeaderEvent_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_ALLOW_EVENTS, [AndroidGovNistJavaxSipHeaderAllowEvents_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_REFERRED_BY, @"ReferredBy");
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_SESSION_EXPIRES, @"SessionExpires");
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_MIN_SE, @"MinSE");
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_REPLACES, @"Replaces");
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderSIPHeaderNames_JOIN, @"Join");
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_NAME, [AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsPAssertedIdentityHeader_NAME, [AndroidGovNistJavaxSipHeaderImsPAssertedIdentity_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsPAssociatedURIHeader_NAME, [AndroidGovNistJavaxSipHeaderImsPAssociatedURI_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsPCalledPartyIDHeader_NAME, [AndroidGovNistJavaxSipHeaderImsPCalledPartyID_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsPChargingFunctionAddressesHeader_NAME, [AndroidGovNistJavaxSipHeaderImsPChargingFunctionAddresses_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsPChargingVectorHeader_NAME, [AndroidGovNistJavaxSipHeaderImsPChargingVector_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsPMediaAuthorizationHeader_NAME, [AndroidGovNistJavaxSipHeaderImsPMediaAuthorization_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsPathHeader_NAME, [AndroidGovNistJavaxSipHeaderImsPath_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsPPreferredIdentityHeader_NAME, [AndroidGovNistJavaxSipHeaderImsPPreferredIdentity_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsPrivacyHeader_NAME, [AndroidGovNistJavaxSipHeaderImsPrivacy_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsServiceRouteHeader_NAME, [AndroidGovNistJavaxSipHeaderImsServiceRoute_class_() getName]);
  AndroidGovNistJavaxSipHeaderNameMap_putNameMapWithNSString_withNSString_(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkIDHeader_NAME, [AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_class_() getName]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderNameMap)
