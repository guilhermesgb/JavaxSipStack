//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/ims/PUserDatabase.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PUserDatabase.h"
#include "android/gov/nist/javax/sip/header/ims/PUserDatabaseHeader.h"
#include "android/gov/nist/javax/sip/header/ims/SIPHeaderNamesIms.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/text/ParseException.h"

@interface AndroidGovNistJavaxSipHeaderImsPUserDatabase () {
 @public
  NSString *databaseName_;
}

@end

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipHeaderImsPUserDatabase, databaseName_, NSString *)

@implementation AndroidGovNistJavaxSipHeaderImsPUserDatabase

- (instancetype)initWithNSString:(NSString *)databaseName {
  AndroidGovNistJavaxSipHeaderImsPUserDatabase_initWithNSString_(self, databaseName);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderImsPUserDatabase_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getDatabaseName {
  return self->databaseName_;
}

- (void)setDatabaseNameWithNSString:(NSString *)databaseName {
  if ((databaseName == nil) || ([((NSString *) nil_chk(databaseName)) isEqual:@" "])) @throw create_JavaLangNullPointerException_initWithNSString_(@"Database name is null");
  else if (![((NSString *) nil_chk(databaseName)) java_contains:@"aaa://"]) JreStrongAssign(&self->databaseName_, [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([create_JavaLangStringBuilder_init() appendWithNSString:@"aaa://"])) appendWithNSString:databaseName])) description]);
  else JreStrongAssign(&self->databaseName_, databaseName);
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)retval {
  [((JavaLangStringBuilder *) nil_chk(retval)) appendWithNSString:@"<"];
  if ([self getDatabaseName] != nil) [retval appendWithNSString:[self getDatabaseName]];
  if (![((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) isEmpty]) {
    [retval appendWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON];
    [((AndroidGovNistCoreNameValueList *) nil_chk(self->parameters_)) encodeWithJavaLangStringBuilder:retval];
  }
  [retval appendWithNSString:@">"];
  return retval;
}

- (jboolean)isEqual:(id)other {
  return ([AndroidGovNistJavaxSipHeaderImsPUserDatabaseHeader_class_() isInstance:other]) && [super isEqual:other];
}

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderImsPUserDatabase *retval = (AndroidGovNistJavaxSipHeaderImsPUserDatabase *) cast_chk([super java_clone], [AndroidGovNistJavaxSipHeaderImsPUserDatabase class]);
  return retval;
}

- (void)setValueWithNSString:(NSString *)value {
  @throw create_JavaTextParseException_initWithNSString_withInt_(value, 0);
}

- (void)dealloc {
  RELEASE_(databaseName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 0, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(getDatabaseName);
  methods[3].selector = @selector(setDatabaseNameWithNSString:);
  methods[4].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(java_clone);
  methods[7].selector = @selector(setValueWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "databaseName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "setDatabaseName", "encodeBody", "LJavaLangStringBuilder;", "equals", "LNSObject;", "clone", "setValue", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderImsPUserDatabase = { "PUserDatabase", "android.gov.nist.javax.sip.header.ims", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderImsPUserDatabase;
}

@end

void AndroidGovNistJavaxSipHeaderImsPUserDatabase_initWithNSString_(AndroidGovNistJavaxSipHeaderImsPUserDatabase *self, NSString *databaseName) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderImsPUserDatabaseHeader_NAME);
  JreStrongAssign(&self->databaseName_, databaseName);
}

AndroidGovNistJavaxSipHeaderImsPUserDatabase *new_AndroidGovNistJavaxSipHeaderImsPUserDatabase_initWithNSString_(NSString *databaseName) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderImsPUserDatabase, initWithNSString_, databaseName)
}

AndroidGovNistJavaxSipHeaderImsPUserDatabase *create_AndroidGovNistJavaxSipHeaderImsPUserDatabase_initWithNSString_(NSString *databaseName) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderImsPUserDatabase, initWithNSString_, databaseName)
}

void AndroidGovNistJavaxSipHeaderImsPUserDatabase_init(AndroidGovNistJavaxSipHeaderImsPUserDatabase *self) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderImsSIPHeaderNamesIms_P_USER_DATABASE);
}

AndroidGovNistJavaxSipHeaderImsPUserDatabase *new_AndroidGovNistJavaxSipHeaderImsPUserDatabase_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderImsPUserDatabase, init)
}

AndroidGovNistJavaxSipHeaderImsPUserDatabase *create_AndroidGovNistJavaxSipHeaderImsPUserDatabase_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderImsPUserDatabase, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderImsPUserDatabase)
