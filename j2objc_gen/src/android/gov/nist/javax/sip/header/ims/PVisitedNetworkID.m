//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/ims/PVisitedNetworkID.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PVisitedNetworkID.h"
#include "android/gov/nist/javax/sip/header/ims/PVisitedNetworkIDHeader.h"
#include "android/gov/nist/javax/sip/header/ims/SIPHeaderNamesIms.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/text/ParseException.h"

@interface AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID () {
 @public
  NSString *networkID_;
  jboolean isQuoted_;
}

@end

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID, networkID_, NSString *)

@implementation AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)networkID {
  AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_initWithNSString_(self, networkID);
  return self;
}

- (instancetype)initWithAndroidGovNistCoreToken:(AndroidGovNistCoreToken *)tok {
  AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_initWithAndroidGovNistCoreToken_(self, tok);
  return self;
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)retval {
  if ([self getVisitedNetworkID] != nil) {
    if (isQuoted_) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(retval)) appendWithNSString:AndroidGovNistCoreGenericObject_DOUBLE_QUOTE])) appendWithNSString:[self getVisitedNetworkID]])) appendWithNSString:AndroidGovNistCoreGenericObject_DOUBLE_QUOTE];
    else [((JavaLangStringBuilder *) nil_chk(retval)) appendWithNSString:[self getVisitedNetworkID]];
  }
  if (![((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) isEmpty]) {
    [((JavaLangStringBuilder *) nil_chk(retval)) appendWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON];
    [((AndroidGovNistCoreNameValueList *) nil_chk(self->parameters_)) encodeWithJavaLangStringBuilder:retval];
  }
  return retval;
}

- (void)setVisitedNetworkIDWithNSString:(NSString *)networkID {
  if (networkID == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@" the networkID parameter is null");
  JreStrongAssign(&self->networkID_, networkID);
  self->isQuoted_ = true;
}

- (void)setVisitedNetworkIDWithAndroidGovNistCoreToken:(AndroidGovNistCoreToken *)networkID {
  if (networkID == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@" the networkID parameter is null");
  JreStrongAssign(&self->networkID_, [networkID getTokenValue]);
  self->isQuoted_ = false;
}

- (NSString *)getVisitedNetworkID {
  return networkID_;
}

- (void)setValueWithNSString:(NSString *)value {
  @throw create_JavaTextParseException_initWithNSString_withInt_(value, 0);
}

- (jboolean)isEqual:(id)other {
  if ([AndroidGovNistJavaxSipHeaderImsPVisitedNetworkIDHeader_class_() isInstance:other]) {
    id<AndroidGovNistJavaxSipHeaderImsPVisitedNetworkIDHeader> o = (id<AndroidGovNistJavaxSipHeaderImsPVisitedNetworkIDHeader>) cast_check(other, AndroidGovNistJavaxSipHeaderImsPVisitedNetworkIDHeader_class_());
    return ([((NSString *) nil_chk([self getVisitedNetworkID])) isEqual:[((id<AndroidGovNistJavaxSipHeaderImsPVisitedNetworkIDHeader>) nil_chk(o)) getVisitedNetworkID]] && [self equalParametersWithAndroidJavaxSipHeaderParameters:o]);
  }
  return false;
}

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *retval = (AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *) cast_chk([super java_clone], [AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID class]);
  if (self->networkID_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *) nil_chk(retval))->networkID_, self->networkID_);
  ((AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *) nil_chk(retval))->isQuoted_ = self->isQuoted_;
  return retval;
}

- (void)dealloc {
  RELEASE_(networkID_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 0, 6, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithAndroidGovNistCoreToken:);
  methods[3].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[4].selector = @selector(setVisitedNetworkIDWithNSString:);
  methods[5].selector = @selector(setVisitedNetworkIDWithAndroidGovNistCoreToken:);
  methods[6].selector = @selector(getVisitedNetworkID);
  methods[7].selector = @selector(setValueWithNSString:);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "networkID_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isQuoted_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LAndroidGovNistCoreToken;", "encodeBody", "LJavaLangStringBuilder;", "setVisitedNetworkID", "setValue", "LJavaTextParseException;", "equals", "LNSObject;", "clone" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID = { "PVisitedNetworkID", "android.gov.nist.javax.sip.header.ims", ptrTable, methods, fields, 7, 0x1, 10, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID;
}

@end

void AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_init(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *self) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderImsSIPHeaderNamesIms_P_VISITED_NETWORK_ID);
}

AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *new_AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID, init)
}

AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *create_AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID, init)
}

void AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_initWithNSString_(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *self, NSString *networkID) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderImsSIPHeaderNamesIms_P_VISITED_NETWORK_ID);
  [self setVisitedNetworkIDWithNSString:networkID];
}

AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *new_AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_initWithNSString_(NSString *networkID) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID, initWithNSString_, networkID)
}

AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *create_AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_initWithNSString_(NSString *networkID) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID, initWithNSString_, networkID)
}

void AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_initWithAndroidGovNistCoreToken_(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *self, AndroidGovNistCoreToken *tok) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderImsSIPHeaderNamesIms_P_VISITED_NETWORK_ID);
  [self setVisitedNetworkIDWithNSString:[((AndroidGovNistCoreToken *) nil_chk(tok)) getTokenValue]];
}

AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *new_AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_initWithAndroidGovNistCoreToken_(AndroidGovNistCoreToken *tok) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID, initWithAndroidGovNistCoreToken_, tok)
}

AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID *create_AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID_initWithAndroidGovNistCoreToken_(AndroidGovNistCoreToken *tok) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID, initWithAndroidGovNistCoreToken_, tok)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderImsPVisitedNetworkID)
