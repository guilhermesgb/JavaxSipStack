//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/AlertInfo.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/javax/sip/address/GenericURI.h"
#include "android/gov/nist/javax/sip/header/AlertInfo.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/javax/sip/address/URI.h"
#include "android/javax/sip/header/AlertInfoHeader.h"
#include "java/lang/StringBuilder.h"
#include "java/text/ParseException.h"

inline jlong AndroidGovNistJavaxSipHeaderAlertInfo_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderAlertInfo_serialVersionUID 4159657362051508719LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderAlertInfo, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderAlertInfo

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderAlertInfo_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)encoding {
  if (uri_ != nil) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(encoding)) appendWithNSString:AndroidGovNistCoreGenericObject_LESS_THAN])) appendWithNSString:[((AndroidGovNistJavaxSipAddressGenericURI *) nil_chk(uri_)) encode]])) appendWithNSString:AndroidGovNistCoreGenericObject_GREATER_THAN];
  }
  else if (string_ != nil) {
    [((JavaLangStringBuilder *) nil_chk(encoding)) appendWithNSString:string_];
  }
  if (![((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) isEmpty]) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(encoding)) appendWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON])) appendWithNSString:[((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) encode]];
  }
  return encoding;
}

- (void)setAlertInfoWithAndroidJavaxSipAddressURI:(id<AndroidJavaxSipAddressURI>)uri {
  JreStrongAssign(&self->uri_, (AndroidGovNistJavaxSipAddressGenericURI *) cast_chk(uri, [AndroidGovNistJavaxSipAddressGenericURI class]));
}

- (void)setAlertInfoWithNSString:(NSString *)string {
  JreStrongAssign(&self->string_, string);
}

- (id<AndroidJavaxSipAddressURI>)getAlertInfo {
  id<AndroidJavaxSipAddressURI> alertInfoUri = nil;
  if (self->uri_ != nil) {
    alertInfoUri = self->uri_;
  }
  else {
    @try {
      alertInfoUri = create_AndroidGovNistJavaxSipAddressGenericURI_initWithNSString_(string_);
    }
    @catch (JavaTextParseException *e) {
      ;
    }
  }
  return alertInfoUri;
}

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderAlertInfo *retval = (AndroidGovNistJavaxSipHeaderAlertInfo *) cast_chk([super java_clone], [AndroidGovNistJavaxSipHeaderAlertInfo class]);
  if (self->uri_ != nil) {
    JreStrongAssign(&((AndroidGovNistJavaxSipHeaderAlertInfo *) nil_chk(retval))->uri_, (AndroidGovNistJavaxSipAddressGenericURI *) cast_chk([self->uri_ java_clone], [AndroidGovNistJavaxSipAddressGenericURI class]));
  }
  else if (self->string_ != nil) {
    JreStrongAssign(&((AndroidGovNistJavaxSipHeaderAlertInfo *) nil_chk(retval))->string_, self->string_);
  }
  return retval;
}

- (void)dealloc {
  RELEASE_(uri_);
  RELEASE_(string_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 4, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressURI;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[2].selector = @selector(setAlertInfoWithAndroidJavaxSipAddressURI:);
  methods[3].selector = @selector(setAlertInfoWithNSString:);
  methods[4].selector = @selector(getAlertInfo);
  methods[5].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderAlertInfo_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "uri_", "LAndroidGovNistJavaxSipAddressGenericURI;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "string_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "encodeBody", "LJavaLangStringBuilder;", "setAlertInfo", "LAndroidJavaxSipAddressURI;", "LNSString;", "clone" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderAlertInfo = { "AlertInfo", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x11, 6, 3, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderAlertInfo;
}

@end

void AndroidGovNistJavaxSipHeaderAlertInfo_init(AndroidGovNistJavaxSipHeaderAlertInfo *self) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidJavaxSipHeaderAlertInfoHeader_NAME);
}

AndroidGovNistJavaxSipHeaderAlertInfo *new_AndroidGovNistJavaxSipHeaderAlertInfo_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderAlertInfo, init)
}

AndroidGovNistJavaxSipHeaderAlertInfo *create_AndroidGovNistJavaxSipHeaderAlertInfo_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderAlertInfo, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderAlertInfo)
