//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/Indentation.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/Indentation.h"
#include "java/util/Arrays.h"

@interface AndroidGovNistJavaxSipHeaderIndentation () {
 @public
  jint indentation_;
}

@end

@implementation AndroidGovNistJavaxSipHeaderIndentation

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderIndentation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)initval {
  AndroidGovNistJavaxSipHeaderIndentation_initWithInt_(self, initval);
  return self;
}

- (void)setIndentationWithInt:(jint)initval {
  indentation_ = initval;
}

- (jint)getCount {
  return indentation_;
}

- (void)increment {
  indentation_++;
}

- (void)decrement {
  indentation_--;
}

- (NSString *)getIndentation {
  IOSCharArray *chars = [IOSCharArray arrayWithLength:indentation_];
  JavaUtilArrays_fillWithCharArray_withChar_(chars, ' ');
  return [NSString java_stringWithCharacters:chars];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(setIndentationWithInt:);
  methods[3].selector = @selector(getCount);
  methods[4].selector = @selector(increment);
  methods[5].selector = @selector(decrement);
  methods[6].selector = @selector(getIndentation);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "indentation_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "setIndentation" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderIndentation = { "Indentation", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x0, 7, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderIndentation;
}

@end

void AndroidGovNistJavaxSipHeaderIndentation_init(AndroidGovNistJavaxSipHeaderIndentation *self) {
  NSObject_init(self);
  self->indentation_ = 0;
}

AndroidGovNistJavaxSipHeaderIndentation *new_AndroidGovNistJavaxSipHeaderIndentation_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderIndentation, init)
}

AndroidGovNistJavaxSipHeaderIndentation *create_AndroidGovNistJavaxSipHeaderIndentation_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderIndentation, init)
}

void AndroidGovNistJavaxSipHeaderIndentation_initWithInt_(AndroidGovNistJavaxSipHeaderIndentation *self, jint initval) {
  NSObject_init(self);
  self->indentation_ = initval;
}

AndroidGovNistJavaxSipHeaderIndentation *new_AndroidGovNistJavaxSipHeaderIndentation_initWithInt_(jint initval) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderIndentation, initWithInt_, initval)
}

AndroidGovNistJavaxSipHeaderIndentation *create_AndroidGovNistJavaxSipHeaderIndentation_initWithInt_(jint initval) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderIndentation, initWithInt_, initval)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderIndentation)
