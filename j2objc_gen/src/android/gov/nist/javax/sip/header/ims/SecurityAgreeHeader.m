//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/ims/SecurityAgreeHeader.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/ims/SecurityAgreeHeader.h"

@interface AndroidGovNistJavaxSipHeaderImsSecurityAgreeHeader : NSObject

@end

@implementation AndroidGovNistJavaxSipHeaderImsSecurityAgreeHeader

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 6, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x401, 10, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x401, 12, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x401, 13, 14, 9, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(setSecurityMechanismWithNSString:);
  methods[1].selector = @selector(setEncryptionAlgorithmWithNSString:);
  methods[2].selector = @selector(setAlgorithmWithNSString:);
  methods[3].selector = @selector(setProtocolWithNSString:);
  methods[4].selector = @selector(setModeWithNSString:);
  methods[5].selector = @selector(setSPIClientWithInt:);
  methods[6].selector = @selector(setSPIServerWithInt:);
  methods[7].selector = @selector(setPortClientWithInt:);
  methods[8].selector = @selector(setPortServerWithInt:);
  methods[9].selector = @selector(setPreferenceWithFloat:);
  methods[10].selector = @selector(getSecurityMechanism);
  methods[11].selector = @selector(getEncryptionAlgorithm);
  methods[12].selector = @selector(getAlgorithm);
  methods[13].selector = @selector(getProtocol);
  methods[14].selector = @selector(getMode);
  methods[15].selector = @selector(getSPIClient);
  methods[16].selector = @selector(getSPIServer);
  methods[17].selector = @selector(getPortClient);
  methods[18].selector = @selector(getPortServer);
  methods[19].selector = @selector(getPreference);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setSecurityMechanism", "LNSString;", "LJavaTextParseException;", "setEncryptionAlgorithm", "setAlgorithm", "setProtocol", "setMode", "setSPIClient", "I", "LAndroidJavaxSipInvalidArgumentException;", "setSPIServer", "setPortClient", "setPortServer", "setPreference", "F" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderImsSecurityAgreeHeader = { "SecurityAgreeHeader", "android.gov.nist.javax.sip.header.ims", ptrTable, methods, NULL, 7, 0x609, 20, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderImsSecurityAgreeHeader;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderImsSecurityAgreeHeader)
