//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/SIPDateHeader.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/SIPDate.h"
#include "android/gov/nist/javax/sip/header/SIPDateHeader.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderNames.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"

inline jlong AndroidGovNistJavaxSipHeaderSIPDateHeader_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderSIPDateHeader_serialVersionUID 1734186339037274664LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderSIPDateHeader, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderSIPDateHeader

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderSIPDateHeader_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)retval {
  return [((AndroidGovNistJavaxSipHeaderSIPDate *) nil_chk(date_)) encodeWithJavaLangStringBuilder:retval];
}

- (void)setDateWithAndroidGovNistJavaxSipHeaderSIPDate:(AndroidGovNistJavaxSipHeaderSIPDate *)d {
  JreStrongAssign(&date_, d);
}

- (void)setDateWithJavaUtilCalendar:(JavaUtilCalendar *)dat {
  if (dat != nil) JreStrongAssignAndConsume(&date_, new_AndroidGovNistJavaxSipHeaderSIPDate_initWithLong_([((JavaUtilDate *) nil_chk([dat getTime])) getTime]));
}

- (JavaUtilCalendar *)getDate {
  if (date_ == nil) return nil;
  return [date_ getJavaCal];
}

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderSIPDateHeader *retval = (AndroidGovNistJavaxSipHeaderSIPDateHeader *) cast_chk([super java_clone], [AndroidGovNistJavaxSipHeaderSIPDateHeader class]);
  if (self->date_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSipHeaderSIPDateHeader *) nil_chk(retval))->date_, (AndroidGovNistJavaxSipHeaderSIPDate *) cast_chk([self->date_ java_clone], [AndroidGovNistJavaxSipHeaderSIPDate class]));
  return retval;
}

- (void)dealloc {
  RELEASE_(date_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCalendar;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[2].selector = @selector(setDateWithAndroidGovNistJavaxSipHeaderSIPDate:);
  methods[3].selector = @selector(setDateWithJavaUtilCalendar:);
  methods[4].selector = @selector(getDate);
  methods[5].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderSIPDateHeader_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "date_", "LAndroidGovNistJavaxSipHeaderSIPDate;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "encodeBody", "LJavaLangStringBuilder;", "setDate", "LAndroidGovNistJavaxSipHeaderSIPDate;", "LJavaUtilCalendar;", "clone" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderSIPDateHeader = { "SIPDateHeader", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderSIPDateHeader;
}

@end

void AndroidGovNistJavaxSipHeaderSIPDateHeader_init(AndroidGovNistJavaxSipHeaderSIPDateHeader *self) {
  AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderSIPHeaderNames_DATE);
}

AndroidGovNistJavaxSipHeaderSIPDateHeader *new_AndroidGovNistJavaxSipHeaderSIPDateHeader_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderSIPDateHeader, init)
}

AndroidGovNistJavaxSipHeaderSIPDateHeader *create_AndroidGovNistJavaxSipHeaderSIPDateHeader_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderSIPDateHeader, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderSIPDateHeader)
