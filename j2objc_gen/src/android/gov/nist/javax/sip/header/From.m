//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/From.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/HostPort.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/javax/sip/address/AddressImpl.h"
#include "android/gov/nist/javax/sip/header/AddressParametersHeader.h"
#include "android/gov/nist/javax/sip/header/From.h"
#include "android/gov/nist/javax/sip/header/ParameterNames.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/gov/nist/javax/sip/header/To.h"
#include "android/gov/nist/javax/sip/parser/Parser.h"
#include "android/javax/sip/address/Address.h"
#include "android/javax/sip/header/FromHeader.h"
#include "java/lang/StringBuilder.h"

inline jlong AndroidGovNistJavaxSipHeaderFrom_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderFrom_serialVersionUID -6312727234330643892LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderFrom, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderFrom

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderFrom_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithAndroidGovNistJavaxSipHeaderTo:(AndroidGovNistJavaxSipHeaderTo *)to {
  AndroidGovNistJavaxSipHeaderFrom_initWithAndroidGovNistJavaxSipHeaderTo_(self, to);
  return self;
}

- (NSString *)encodeBody {
  return [((JavaLangStringBuilder *) nil_chk([self encodeBodyWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  if ([((AndroidGovNistJavaxSipAddressAddressImpl *) nil_chk(address_)) getAddressType] == AndroidGovNistJavaxSipAddressAddressImpl_ADDRESS_SPEC) {
    [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:AndroidGovNistCoreGenericObject_LESS_THAN];
  }
  [((AndroidGovNistJavaxSipAddressAddressImpl *) nil_chk(address_)) encodeWithJavaLangStringBuilder:buffer];
  if ([((AndroidGovNistJavaxSipAddressAddressImpl *) nil_chk(address_)) getAddressType] == AndroidGovNistJavaxSipAddressAddressImpl_ADDRESS_SPEC) {
    [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:AndroidGovNistCoreGenericObject_GREATER_THAN];
  }
  if (![((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) isEmpty]) {
    [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON];
    [((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) encodeWithJavaLangStringBuilder:buffer];
  }
  return buffer;
}

- (AndroidGovNistCoreHostPort *)getHostPort {
  return [((AndroidGovNistJavaxSipAddressAddressImpl *) nil_chk(address_)) getHostPort];
}

- (NSString *)getDisplayName {
  return [((AndroidGovNistJavaxSipAddressAddressImpl *) nil_chk(address_)) getDisplayName];
}

- (NSString *)getTag {
  if (parameters_ == nil) return nil;
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_TAG];
}

- (jboolean)hasTag {
  return [self hasParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_TAG];
}

- (void)removeTag {
  [((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) delete__WithNSString:AndroidGovNistJavaxSipHeaderParameterNames_TAG];
}

- (void)setAddressWithAndroidJavaxSipAddressAddress:(id<AndroidJavaxSipAddressAddress>)address {
  JreStrongAssign(&self->address_, (AndroidGovNistJavaxSipAddressAddressImpl *) cast_chk(address, [AndroidGovNistJavaxSipAddressAddressImpl class]));
}

- (void)setTagWithNSString:(NSString *)t {
  AndroidGovNistJavaxSipParserParser_checkTokenWithNSString_(t);
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_TAG withNSString:t];
}

- (NSString *)getUserAtHostPort {
  return [((AndroidGovNistJavaxSipAddressAddressImpl *) nil_chk(address_)) getUserAtHostPort];
}

- (jboolean)isEqual:(id)other {
  return ([AndroidJavaxSipHeaderFromHeader_class_() isInstance:other]) && [super isEqual:other];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistCoreHostPort;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 7, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithAndroidGovNistJavaxSipHeaderTo:);
  methods[2].selector = @selector(encodeBody);
  methods[3].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[4].selector = @selector(getHostPort);
  methods[5].selector = @selector(getDisplayName);
  methods[6].selector = @selector(getTag);
  methods[7].selector = @selector(hasTag);
  methods[8].selector = @selector(removeTag);
  methods[9].selector = @selector(setAddressWithAndroidJavaxSipAddressAddress:);
  methods[10].selector = @selector(setTagWithNSString:);
  methods[11].selector = @selector(getUserAtHostPort);
  methods[12].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderFrom_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidGovNistJavaxSipHeaderTo;", "encodeBody", "LJavaLangStringBuilder;", "setAddress", "LAndroidJavaxSipAddressAddress;", "setTag", "LNSString;", "LJavaTextParseException;", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderFrom = { "From", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x11, 13, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderFrom;
}

@end

void AndroidGovNistJavaxSipHeaderFrom_init(AndroidGovNistJavaxSipHeaderFrom *self) {
  AndroidGovNistJavaxSipHeaderAddressParametersHeader_initWithNSString_(self, AndroidJavaxSipHeaderFromHeader_NAME);
}

AndroidGovNistJavaxSipHeaderFrom *new_AndroidGovNistJavaxSipHeaderFrom_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderFrom, init)
}

AndroidGovNistJavaxSipHeaderFrom *create_AndroidGovNistJavaxSipHeaderFrom_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderFrom, init)
}

void AndroidGovNistJavaxSipHeaderFrom_initWithAndroidGovNistJavaxSipHeaderTo_(AndroidGovNistJavaxSipHeaderFrom *self, AndroidGovNistJavaxSipHeaderTo *to) {
  AndroidGovNistJavaxSipHeaderAddressParametersHeader_initWithNSString_(self, AndroidJavaxSipHeaderFromHeader_NAME);
  JreStrongAssign(&self->address_, ((AndroidGovNistJavaxSipHeaderAddressParametersHeader *) nil_chk(to))->address_);
  JreStrongAssign(&self->parameters_, to->parameters_);
}

AndroidGovNistJavaxSipHeaderFrom *new_AndroidGovNistJavaxSipHeaderFrom_initWithAndroidGovNistJavaxSipHeaderTo_(AndroidGovNistJavaxSipHeaderTo *to) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderFrom, initWithAndroidGovNistJavaxSipHeaderTo_, to)
}

AndroidGovNistJavaxSipHeaderFrom *create_AndroidGovNistJavaxSipHeaderFrom_initWithAndroidGovNistJavaxSipHeaderTo_(AndroidGovNistJavaxSipHeaderTo *to) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderFrom, initWithAndroidGovNistJavaxSipHeaderTo_, to)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderFrom)
