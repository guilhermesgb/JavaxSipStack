//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/AcceptLanguage.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValue.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/javax/sip/header/AcceptLanguage.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/javax/sip/InvalidArgumentException.h"
#include "android/javax/sip/header/AcceptLanguageHeader.h"
#include "java/lang/Float.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Locale.h"

inline jlong AndroidGovNistJavaxSipHeaderAcceptLanguage_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderAcceptLanguage_serialVersionUID -4473982069737324919LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderAcceptLanguage, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderAcceptLanguage

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderAcceptLanguage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)encoding {
  if (languageRange_ != nil) {
    [((JavaLangStringBuilder *) nil_chk(encoding)) appendWithNSString:languageRange_];
  }
  if (![((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) isEmpty]) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(encoding)) appendWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON])) appendWithNSString:[((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) encode]];
  }
  return encoding;
}

- (NSString *)getLanguageRange {
  return languageRange_;
}

- (jfloat)getQValue {
  if (![self hasParameterWithNSString:@"q"]) return -1;
  return [((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk([((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) getValueWithNSString:@"q"], [JavaLangFloat class])))) floatValue];
}

- (jboolean)hasQValue {
  return [self hasParameterWithNSString:@"q"];
}

- (void)removeQValue {
  [self removeParameterWithNSString:@"q"];
}

- (void)setLanguageRangeWithNSString:(NSString *)languageRange {
  JreStrongAssign(&self->languageRange_, [((NSString *) nil_chk(languageRange)) java_trim]);
}

- (void)setQValueWithFloat:(jfloat)q {
  if (q < 0.0 || q > 1.0) @throw create_AndroidJavaxSipInvalidArgumentException_initWithNSString_(@"qvalue out of range!");
  if (q == -1) [self removeParameterWithNSString:@"q"];
  else [self setParameterWithAndroidGovNistCoreNameValue:create_AndroidGovNistCoreNameValue_initWithNSString_withId_(@"q", JavaLangFloat_valueOfWithFloat_(q))];
}

- (JavaUtilLocale *)getAcceptLanguage {
  if (self->languageRange_ == nil) return nil;
  else {
    jint dash = [languageRange_ java_indexOf:'-'];
    if (dash >= 0) {
      return create_JavaUtilLocale_initWithNSString_withNSString_([((NSString *) nil_chk(languageRange_)) java_substring:0 endIndex:dash], [((NSString *) nil_chk(languageRange_)) java_substring:dash + 1]);
    }
    else return create_JavaUtilLocale_initWithNSString_(self->languageRange_);
  }
}

- (void)setAcceptLanguageWithJavaUtilLocale:(JavaUtilLocale *)language {
  if ([@"" isEqual:[((JavaUtilLocale *) nil_chk(language)) getCountry]]) {
    JreStrongAssign(&self->languageRange_, [language getLanguage]);
  }
  else {
    JreStrongAssign(&self->languageRange_, JreStrcat("$C$", [language getLanguage], '-', [language getCountry]));
  }
}

- (void)dealloc {
  RELEASE_(languageRange_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "LJavaUtilLocale;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[2].selector = @selector(getLanguageRange);
  methods[3].selector = @selector(getQValue);
  methods[4].selector = @selector(hasQValue);
  methods[5].selector = @selector(removeQValue);
  methods[6].selector = @selector(setLanguageRangeWithNSString:);
  methods[7].selector = @selector(setQValueWithFloat:);
  methods[8].selector = @selector(getAcceptLanguage);
  methods[9].selector = @selector(setAcceptLanguageWithJavaUtilLocale:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderAcceptLanguage_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "languageRange_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "encodeBody", "LJavaLangStringBuilder;", "setLanguageRange", "LNSString;", "setQValue", "F", "LAndroidJavaxSipInvalidArgumentException;", "setAcceptLanguage", "LJavaUtilLocale;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderAcceptLanguage = { "AcceptLanguage", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x11, 10, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderAcceptLanguage;
}

@end

void AndroidGovNistJavaxSipHeaderAcceptLanguage_init(AndroidGovNistJavaxSipHeaderAcceptLanguage *self) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidJavaxSipHeaderAcceptLanguageHeader_NAME);
}

AndroidGovNistJavaxSipHeaderAcceptLanguage *new_AndroidGovNistJavaxSipHeaderAcceptLanguage_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderAcceptLanguage, init)
}

AndroidGovNistJavaxSipHeaderAcceptLanguage *create_AndroidGovNistJavaxSipHeaderAcceptLanguage_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderAcceptLanguage, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderAcceptLanguage)
