//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/ims/PAccessNetworkInfo.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PAccessNetworkInfo.h"
#include "android/gov/nist/javax/sip/header/ims/PAccessNetworkInfoHeader.h"
#include "android/gov/nist/javax/sip/header/ims/ParameterNamesIms.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/text/ParseException.h"

@interface AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo () {
 @public
  NSString *accessType_;
  id extendAccessInfo_;
}

@end

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo, accessType_, NSString *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo, extendAccessInfo_, id)

@implementation AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)accessTypeVal {
  AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo_initWithNSString_(self, accessTypeVal);
  return self;
}

- (void)setAccessTypeWithNSString:(NSString *)accessTypeVal {
  if (accessTypeVal == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception, P-Access-Network-Info, setAccessType(), the accessType parameter is null.");
  JreStrongAssign(&self->accessType_, accessTypeVal);
}

- (NSString *)getAccessType {
  return accessType_;
}

- (void)setCGI3GPPWithNSString:(NSString *)cgi {
  if (cgi == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception, P-Access-Network-Info, setCGI3GPP(), the cgi parameter is null.");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_CGI_3GPP withNSString:cgi];
}

- (NSString *)getCGI3GPP {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_CGI_3GPP];
}

- (void)setUtranCellID3GPPWithNSString:(NSString *)utranCellID {
  if (utranCellID == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception, P-Access-Network-Info, setUtranCellID3GPP(), the utranCellID parameter is null.");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_UTRAN_CELL_ID_3GPP withNSString:utranCellID];
}

- (NSString *)getUtranCellID3GPP {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_UTRAN_CELL_ID_3GPP];
}

- (void)setDSLLocationWithNSString:(NSString *)dslLocation {
  if (dslLocation == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception, P-Access-Network-Info, setDSLLocation(), the dslLocation parameter is null.");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_DSL_LOCATION withNSString:dslLocation];
}

- (NSString *)getDSLLocation {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_DSL_LOCATION];
}

- (void)setCI3GPP2WithNSString:(NSString *)ci3Gpp2 {
  if (ci3Gpp2 == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception, P-Access-Network-Info, setCI3GPP2(), the ci3Gpp2 parameter is null.");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_CI_3GPP2 withNSString:ci3Gpp2];
}

- (NSString *)getCI3GPP2 {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_CI_3GPP2];
}

- (void)setParameterWithNSString:(NSString *)name
                          withId:(id)value {
  if ([((NSString *) nil_chk(name)) java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_CGI_3GPP] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_UTRAN_CELL_ID_3GPP] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_DSL_LOCATION] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_CI_3GPP2]) {
    @try {
      [super setQuotedParameterWithNSString:name withNSString:[nil_chk(value) description]];
    }
    @catch (JavaTextParseException *e) {
    }
  }
  else {
    [super setParameterWithNSString:name withId:value];
  }
}

- (void)setExtensionAccessInfoWithId:(id)extendAccessInfo {
  if (extendAccessInfo == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception, P-Access-Network-Info, setExtendAccessInfo(), the extendAccessInfo parameter is null.");
  JreStrongAssign(&self->extendAccessInfo_, extendAccessInfo);
}

- (id)getExtensionAccessInfo {
  return self->extendAccessInfo_;
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)encoding {
  if ([self getAccessType] != nil) [((JavaLangStringBuilder *) nil_chk(encoding)) appendWithNSString:[self getAccessType]];
  if (![((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) isEmpty]) {
    encoding = [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(encoding)) appendWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON])) appendWithNSString:AndroidGovNistCoreGenericObject_SP];
    encoding = [((AndroidGovNistCoreNameValueList *) nil_chk(self->parameters_)) encodeWithJavaLangStringBuilder:encoding];
  }
  if ([self getExtensionAccessInfo] != nil) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(encoding)) appendWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON])) appendWithNSString:AndroidGovNistCoreGenericObject_SP])) appendWithNSString:[nil_chk([self getExtensionAccessInfo]) description]];
  }
  return encoding;
}

- (void)setValueWithNSString:(NSString *)value {
  @throw create_JavaTextParseException_initWithNSString_withInt_(value, 0);
}

- (jboolean)isEqual:(id)other {
  return ([AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_class_() isInstance:other]) && [super isEqual:other];
}

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo *retval = (AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo *) cast_chk([super java_clone], [AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo class]);
  return retval;
}

- (void)dealloc {
  RELEASE_(accessType_);
  RELEASE_(extendAccessInfo_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, 3, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 0, 3, -1, -1, -1 },
    { NULL, "Z", 0x1, 14, 10, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 15, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(setAccessTypeWithNSString:);
  methods[3].selector = @selector(getAccessType);
  methods[4].selector = @selector(setCGI3GPPWithNSString:);
  methods[5].selector = @selector(getCGI3GPP);
  methods[6].selector = @selector(setUtranCellID3GPPWithNSString:);
  methods[7].selector = @selector(getUtranCellID3GPP);
  methods[8].selector = @selector(setDSLLocationWithNSString:);
  methods[9].selector = @selector(getDSLLocation);
  methods[10].selector = @selector(setCI3GPP2WithNSString:);
  methods[11].selector = @selector(getCI3GPP2);
  methods[12].selector = @selector(setParameterWithNSString:withId:);
  methods[13].selector = @selector(setExtensionAccessInfoWithId:);
  methods[14].selector = @selector(getExtensionAccessInfo);
  methods[15].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[16].selector = @selector(setValueWithNSString:);
  methods[17].selector = @selector(isEqual:);
  methods[18].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "accessType_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extendAccessInfo_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "setAccessType", "setCGI3GPP", "LJavaTextParseException;", "setUtranCellID3GPP", "setDSLLocation", "setCI3GPP2", "setParameter", "LNSString;LNSObject;", "setExtensionAccessInfo", "LNSObject;", "encodeBody", "LJavaLangStringBuilder;", "setValue", "equals", "clone" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo = { "PAccessNetworkInfo", "android.gov.nist.javax.sip.header.ims", ptrTable, methods, fields, 7, 0x1, 19, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo;
}

@end

void AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo_init(AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo *self) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_NAME);
  [((AndroidGovNistCoreNameValueList *) nil_chk(self->parameters_)) setSeparatorWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON];
}

AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo *new_AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo, init)
}

AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo *create_AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo, init)
}

void AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo_initWithNSString_(AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo *self, NSString *accessTypeVal) {
  AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo_init(self);
  [self setAccessTypeWithNSString:accessTypeVal];
}

AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo *new_AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo_initWithNSString_(NSString *accessTypeVal) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo, initWithNSString_, accessTypeVal)
}

AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo *create_AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo_initWithNSString_(NSString *accessTypeVal) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo, initWithNSString_, accessTypeVal)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfo)
