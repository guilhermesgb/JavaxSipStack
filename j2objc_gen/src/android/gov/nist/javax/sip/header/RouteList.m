//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/RouteList.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/Route.h"
#include "android/gov/nist/javax/sip/header/RouteList.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderList.h"
#include "android/javax/sip/header/RouteHeader.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

inline jlong AndroidGovNistJavaxSipHeaderRouteList_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderRouteList_serialVersionUID 3407603519354809748LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderRouteList, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderRouteList

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderRouteList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderRouteList *retval = create_AndroidGovNistJavaxSipHeaderRouteList_init();
  [retval clonehlistWithJavaUtilList:self->hlist_];
  return retval;
}

- (NSString *)encode {
  if ([((id<JavaUtilList>) nil_chk(hlist_)) isEmpty]) return @"";
  else return [super encode];
}

- (jboolean)isEqual:(id)other {
  if (!([other isKindOfClass:[AndroidGovNistJavaxSipHeaderRouteList class]])) return false;
  AndroidGovNistJavaxSipHeaderRouteList *that = (AndroidGovNistJavaxSipHeaderRouteList *) cast_chk(other, [AndroidGovNistJavaxSipHeaderRouteList class]);
  if ([self size] != [((AndroidGovNistJavaxSipHeaderRouteList *) nil_chk(that)) size]) return false;
  id<JavaUtilListIterator> it = [self listIterator];
  id<JavaUtilListIterator> it1 = [that listIterator];
  while ([((id<JavaUtilListIterator>) nil_chk(it)) hasNext]) {
    AndroidGovNistJavaxSipHeaderRoute *route = [it next];
    AndroidGovNistJavaxSipHeaderRoute *route1 = [((id<JavaUtilListIterator>) nil_chk(it1)) next];
    if (![((AndroidGovNistJavaxSipHeaderRoute *) nil_chk(route)) isEqual:route1]) return false;
  }
  return true;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  methods[2].selector = @selector(encode);
  methods[3].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderRouteList_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "clone", "equals", "LNSObject;", "Landroid/gov/nist/javax/sip/header/SIPHeaderList<Landroid/gov/nist/javax/sip/header/Route;>;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderRouteList = { "RouteList", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, 3, -1 };
  return &_AndroidGovNistJavaxSipHeaderRouteList;
}

@end

void AndroidGovNistJavaxSipHeaderRouteList_init(AndroidGovNistJavaxSipHeaderRouteList *self) {
  AndroidGovNistJavaxSipHeaderSIPHeaderList_initWithIOSClass_withNSString_(self, AndroidGovNistJavaxSipHeaderRoute_class_(), AndroidJavaxSipHeaderRouteHeader_NAME);
}

AndroidGovNistJavaxSipHeaderRouteList *new_AndroidGovNistJavaxSipHeaderRouteList_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderRouteList, init)
}

AndroidGovNistJavaxSipHeaderRouteList *create_AndroidGovNistJavaxSipHeaderRouteList_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderRouteList, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderRouteList)
