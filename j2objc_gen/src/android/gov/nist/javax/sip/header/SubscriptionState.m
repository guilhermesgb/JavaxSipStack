//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/SubscriptionState.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderNames.h"
#include "android/gov/nist/javax/sip/header/SubscriptionState.h"
#include "android/javax/sip/InvalidArgumentException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"

inline jlong AndroidGovNistJavaxSipHeaderSubscriptionState_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderSubscriptionState_serialVersionUID -6673833053927258745LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderSubscriptionState, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderSubscriptionState

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderSubscriptionState_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setExpiresWithInt:(jint)expires {
  if (expires < 0) @throw create_AndroidJavaxSipInvalidArgumentException_initWithNSString_(@"JAIN-SIP Exception, SubscriptionState, setExpires(), the expires parameter is  < 0");
  self->expires_ = expires;
}

- (jint)getExpires {
  return expires_;
}

- (void)setRetryAfterWithInt:(jint)retryAfter {
  if (retryAfter <= 0) @throw create_AndroidJavaxSipInvalidArgumentException_initWithNSString_(@"JAIN-SIP Exception, SubscriptionState, setRetryAfter(), the retryAfter parameter is <=0");
  self->retryAfter_ = retryAfter;
}

- (jint)getRetryAfter {
  return retryAfter_;
}

- (NSString *)getReasonCode {
  return reasonCode_;
}

- (void)setReasonCodeWithNSString:(NSString *)reasonCode {
  if (reasonCode == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception, SubscriptionState, setReasonCode(), the reasonCode parameter is null");
  JreStrongAssign(&self->reasonCode_, reasonCode);
}

- (NSString *)getState {
  return state_;
}

- (void)setStateWithNSString:(NSString *)state {
  if (state == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception, SubscriptionState, setState(), the state parameter is null");
  JreStrongAssign(&self->state_, state);
}

- (NSString *)encodeBody {
  return [((JavaLangStringBuilder *) nil_chk([self encodeBodyWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  if (state_ != nil) [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:state_];
  if (reasonCode_ != nil) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:@";reason="])) appendWithNSString:reasonCode_];
  if (expires_ != -1) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:@";expires="])) appendWithInt:expires_];
  if (retryAfter_ != -1) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:@";retry-after="])) appendWithInt:retryAfter_];
  if (![((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) isEmpty]) {
    [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON];
    [((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) encodeWithJavaLangStringBuilder:buffer];
  }
  return buffer;
}

- (void)dealloc {
  RELEASE_(reasonCode_);
  RELEASE_(state_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 1, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 5, 6, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setExpiresWithInt:);
  methods[2].selector = @selector(getExpires);
  methods[3].selector = @selector(setRetryAfterWithInt:);
  methods[4].selector = @selector(getRetryAfter);
  methods[5].selector = @selector(getReasonCode);
  methods[6].selector = @selector(setReasonCodeWithNSString:);
  methods[7].selector = @selector(getState);
  methods[8].selector = @selector(setStateWithNSString:);
  methods[9].selector = @selector(encodeBody);
  methods[10].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderSubscriptionState_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "expires_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "retryAfter_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "reasonCode_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "state_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setExpires", "I", "LAndroidJavaxSipInvalidArgumentException;", "setRetryAfter", "setReasonCode", "LNSString;", "LJavaTextParseException;", "setState", "encodeBody", "LJavaLangStringBuilder;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderSubscriptionState = { "SubscriptionState", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x1, 11, 5, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderSubscriptionState;
}

@end

void AndroidGovNistJavaxSipHeaderSubscriptionState_init(AndroidGovNistJavaxSipHeaderSubscriptionState *self) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderSIPHeaderNames_SUBSCRIPTION_STATE);
  self->expires_ = -1;
  self->retryAfter_ = -1;
}

AndroidGovNistJavaxSipHeaderSubscriptionState *new_AndroidGovNistJavaxSipHeaderSubscriptionState_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderSubscriptionState, init)
}

AndroidGovNistJavaxSipHeaderSubscriptionState *create_AndroidGovNistJavaxSipHeaderSubscriptionState_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderSubscriptionState, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderSubscriptionState)
