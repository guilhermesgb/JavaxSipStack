//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/MimeVersion.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/javax/sip/header/MimeVersion.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderNames.h"
#include "android/javax/sip/InvalidArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"

inline jlong AndroidGovNistJavaxSipHeaderMimeVersion_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderMimeVersion_serialVersionUID -7951589626435082068LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderMimeVersion, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderMimeVersion

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderMimeVersion_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)getMinorVersion {
  return minorVersion_;
}

- (jint)getMajorVersion {
  return majorVersion_;
}

- (void)setMinorVersionWithInt:(jint)minorVersion {
  if (minorVersion < 0) @throw create_AndroidJavaxSipInvalidArgumentException_initWithNSString_(@"JAIN-SIP Exception, MimeVersion, setMinorVersion(), the minorVersion parameter is null");
  self->minorVersion_ = minorVersion;
}

- (void)setMajorVersionWithInt:(jint)majorVersion {
  if (majorVersion < 0) @throw create_AndroidJavaxSipInvalidArgumentException_initWithNSString_(@"JAIN-SIP Exception, MimeVersion, setMajorVersion(), the majorVersion parameter is null");
  self->majorVersion_ = majorVersion;
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:JavaLangInteger_toStringWithInt_(majorVersion_)])) appendWithNSString:AndroidGovNistCoreGenericObject_DOT])) appendWithNSString:JavaLangInteger_toStringWithInt_(minorVersion_)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 1, 2, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMinorVersion);
  methods[2].selector = @selector(getMajorVersion);
  methods[3].selector = @selector(setMinorVersionWithInt:);
  methods[4].selector = @selector(setMajorVersionWithInt:);
  methods[5].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderMimeVersion_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "minorVersion_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "majorVersion_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setMinorVersion", "I", "LAndroidJavaxSipInvalidArgumentException;", "setMajorVersion", "encodeBody", "LJavaLangStringBuilder;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderMimeVersion = { "MimeVersion", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x1, 6, 3, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderMimeVersion;
}

@end

void AndroidGovNistJavaxSipHeaderMimeVersion_init(AndroidGovNistJavaxSipHeaderMimeVersion *self) {
  AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderSIPHeaderNames_MIME_VERSION);
}

AndroidGovNistJavaxSipHeaderMimeVersion *new_AndroidGovNistJavaxSipHeaderMimeVersion_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderMimeVersion, init)
}

AndroidGovNistJavaxSipHeaderMimeVersion *create_AndroidGovNistJavaxSipHeaderMimeVersion_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderMimeVersion, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderMimeVersion)
