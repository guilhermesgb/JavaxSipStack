//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/AllowEvents.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/AllowEvents.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderNames.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"

inline jlong AndroidGovNistJavaxSipHeaderAllowEvents_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderAllowEvents_serialVersionUID 617962431813193114LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderAllowEvents, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderAllowEvents

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderAllowEvents_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)m {
  AndroidGovNistJavaxSipHeaderAllowEvents_initWithNSString_(self, m);
  return self;
}

- (void)setEventTypeWithNSString:(NSString *)eventType {
  if (eventType == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception,AllowEvents, setEventType(), the eventType parameter is null");
  JreStrongAssign(&self->eventType_, eventType);
}

- (NSString *)getEventType {
  return eventType_;
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  return [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:eventType_];
}

- (void)dealloc {
  RELEASE_(eventType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(setEventTypeWithNSString:);
  methods[3].selector = @selector(getEventType);
  methods[4].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderAllowEvents_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "eventType_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "setEventType", "LJavaTextParseException;", "encodeBody", "LJavaLangStringBuilder;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderAllowEvents = { "AllowEvents", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x11, 5, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderAllowEvents;
}

@end

void AndroidGovNistJavaxSipHeaderAllowEvents_init(AndroidGovNistJavaxSipHeaderAllowEvents *self) {
  AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderSIPHeaderNames_ALLOW_EVENTS);
}

AndroidGovNistJavaxSipHeaderAllowEvents *new_AndroidGovNistJavaxSipHeaderAllowEvents_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderAllowEvents, init)
}

AndroidGovNistJavaxSipHeaderAllowEvents *create_AndroidGovNistJavaxSipHeaderAllowEvents_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderAllowEvents, init)
}

void AndroidGovNistJavaxSipHeaderAllowEvents_initWithNSString_(AndroidGovNistJavaxSipHeaderAllowEvents *self, NSString *m) {
  AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderSIPHeaderNames_ALLOW_EVENTS);
  JreStrongAssign(&self->eventType_, m);
}

AndroidGovNistJavaxSipHeaderAllowEvents *new_AndroidGovNistJavaxSipHeaderAllowEvents_initWithNSString_(NSString *m) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderAllowEvents, initWithNSString_, m)
}

AndroidGovNistJavaxSipHeaderAllowEvents *create_AndroidGovNistJavaxSipHeaderAllowEvents_initWithNSString_(NSString *m) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderAllowEvents, initWithNSString_, m)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderAllowEvents)
