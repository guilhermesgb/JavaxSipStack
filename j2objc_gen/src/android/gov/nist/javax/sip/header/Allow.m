//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/Allow.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/Allow.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderNames.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"

inline jlong AndroidGovNistJavaxSipHeaderAllow_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderAllow_serialVersionUID -3105079479020693930LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderAllow, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderAllow

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderAllow_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)m {
  AndroidGovNistJavaxSipHeaderAllow_initWithNSString_(self, m);
  return self;
}

- (NSString *)getMethod {
  return method_;
}

- (void)setMethodWithNSString:(NSString *)method {
  if (method == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception, Allow, setMethod(), the method parameter is null.");
  JreStrongAssign(&self->method_, method);
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  return [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:method_];
}

- (void)dealloc {
  RELEASE_(method_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, 2, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(getMethod);
  methods[3].selector = @selector(setMethodWithNSString:);
  methods[4].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderAllow_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "method_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "setMethod", "LJavaTextParseException;", "encodeBody", "LJavaLangStringBuilder;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderAllow = { "Allow", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x11, 5, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderAllow;
}

@end

void AndroidGovNistJavaxSipHeaderAllow_init(AndroidGovNistJavaxSipHeaderAllow *self) {
  AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderSIPHeaderNames_ALLOW);
  JreStrongAssign(&self->method_, @"");
}

AndroidGovNistJavaxSipHeaderAllow *new_AndroidGovNistJavaxSipHeaderAllow_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderAllow, init)
}

AndroidGovNistJavaxSipHeaderAllow *create_AndroidGovNistJavaxSipHeaderAllow_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderAllow, init)
}

void AndroidGovNistJavaxSipHeaderAllow_initWithNSString_(AndroidGovNistJavaxSipHeaderAllow *self, NSString *m) {
  AndroidGovNistJavaxSipHeaderSIPHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderSIPHeaderNames_ALLOW);
  JreStrongAssign(&self->method_, @"");
  JreStrongAssign(&self->method_, m);
}

AndroidGovNistJavaxSipHeaderAllow *new_AndroidGovNistJavaxSipHeaderAllow_initWithNSString_(NSString *m) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderAllow, initWithNSString_, m)
}

AndroidGovNistJavaxSipHeaderAllow *create_AndroidGovNistJavaxSipHeaderAllow_initWithNSString_(NSString *m) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderAllow, initWithNSString_, m)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderAllow)
