//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/AcceptEncodingList.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/AcceptEncoding.h"
#include "android/gov/nist/javax/sip/header/AcceptEncodingList.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderList.h"
#include "android/javax/sip/header/AcceptEncodingHeader.h"
#include "java/util/List.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation AndroidGovNistJavaxSipHeaderAcceptEncodingList

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderAcceptEncodingList *retval = create_AndroidGovNistJavaxSipHeaderAcceptEncodingList_init();
  [retval clonehlistWithJavaUtilList:self->hlist_];
  return retval;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderAcceptEncodingList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(java_clone);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "Landroid/gov/nist/javax/sip/header/SIPHeaderList<Landroid/gov/nist/javax/sip/header/AcceptEncoding;>;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderAcceptEncodingList = { "AcceptEncodingList", "android.gov.nist.javax.sip.header", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, 1, -1 };
  return &_AndroidGovNistJavaxSipHeaderAcceptEncodingList;
}

@end

void AndroidGovNistJavaxSipHeaderAcceptEncodingList_init(AndroidGovNistJavaxSipHeaderAcceptEncodingList *self) {
  AndroidGovNistJavaxSipHeaderSIPHeaderList_initWithIOSClass_withNSString_(self, AndroidGovNistJavaxSipHeaderAcceptEncoding_class_(), AndroidJavaxSipHeaderAcceptEncodingHeader_NAME);
}

AndroidGovNistJavaxSipHeaderAcceptEncodingList *new_AndroidGovNistJavaxSipHeaderAcceptEncodingList_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderAcceptEncodingList, init)
}

AndroidGovNistJavaxSipHeaderAcceptEncodingList *create_AndroidGovNistJavaxSipHeaderAcceptEncodingList_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderAcceptEncodingList, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderAcceptEncodingList)
