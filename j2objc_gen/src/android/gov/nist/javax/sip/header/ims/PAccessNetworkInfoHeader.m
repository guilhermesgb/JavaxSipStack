//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/ims/PAccessNetworkInfoHeader.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/header/ims/PAccessNetworkInfoHeader.h"

@interface AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader : NSObject

@end

NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_NAME = @"P-Access-Network-Info";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_IEEE_802_11 = @"IEEE-802.11";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_IEEE_802_11A = @"IEEE-802.11a";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_IEEE_802_11B = @"IEEE-802.11b";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_IEEE_802_11G = @"IEEE-802.11g";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP_GERAN = @"3GPP-GERAN";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP_UTRAN_FDD = @"3GPP-UTRAN-FDD";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP_UTRAN_TDD = @"3GPP-UTRAN-TDD";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP_CDMA2000 = @"3GPP-CDMA2000";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_ADSL = @"ADSL";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_ADSL2 = @"ADSL2";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_ADSL2p = @"ADSL2+";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_RADSL = @"RADSL";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_SDSL = @"SDSL";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_HDSL = @"HDSL";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_HDSL2 = @"HDSL2";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GSHDSL = @"G.SHDSL";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_VDSL = @"VDSL";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_IDSL = @"IDSL";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP2_1X = @"3GPP2-1X";
NSString *AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP2_1XHRPD = @"3GPP2-1XHRPD";

@implementation AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 6, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 8, 2, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(setAccessTypeWithNSString:);
  methods[1].selector = @selector(getAccessType);
  methods[2].selector = @selector(setCGI3GPPWithNSString:);
  methods[3].selector = @selector(getCGI3GPP);
  methods[4].selector = @selector(setUtranCellID3GPPWithNSString:);
  methods[5].selector = @selector(getUtranCellID3GPP);
  methods[6].selector = @selector(setDSLLocationWithNSString:);
  methods[7].selector = @selector(getDSLLocation);
  methods[8].selector = @selector(setCI3GPP2WithNSString:);
  methods[9].selector = @selector(getCI3GPP2);
  methods[10].selector = @selector(setExtensionAccessInfoWithId:);
  methods[11].selector = @selector(getExtensionAccessInfo);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "IEEE_802_11", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "IEEE_802_11A", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "IEEE_802_11B", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "IEEE_802_11G", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "GGGPP_GERAN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "GGGPP_UTRAN_FDD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "GGGPP_UTRAN_TDD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "GGGPP_CDMA2000", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "ADSL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "ADSL2", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "ADSL2p", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "RADSL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
    { "SDSL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "HDSL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "HDSL2", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
    { "GSHDSL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
    { "VDSL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 26, -1, -1 },
    { "IDSL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 27, -1, -1 },
    { "GGGPP2_1X", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 28, -1, -1 },
    { "GGGPP2_1XHRPD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 29, -1, -1 },
  };
  static const void *ptrTable[] = { "setAccessType", "LNSString;", "LJavaTextParseException;", "setCGI3GPP", "setUtranCellID3GPP", "setDSLLocation", "setCI3GPP2", "setExtensionAccessInfo", "LNSObject;", &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_NAME, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_IEEE_802_11, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_IEEE_802_11A, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_IEEE_802_11B, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_IEEE_802_11G, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP_GERAN, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP_UTRAN_FDD, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP_UTRAN_TDD, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP_CDMA2000, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_ADSL, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_ADSL2, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_ADSL2p, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_RADSL, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_SDSL, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_HDSL, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_HDSL2, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GSHDSL, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_VDSL, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_IDSL, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP2_1X, &AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader_GGGPP2_1XHRPD };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader = { "PAccessNetworkInfoHeader", "android.gov.nist.javax.sip.header.ims", ptrTable, methods, fields, 7, 0x609, 12, 21, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderImsPAccessNetworkInfoHeader)
