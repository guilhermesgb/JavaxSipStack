//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/RecordRoute.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/javax/sip/address/AddressImpl.h"
#include "android/gov/nist/javax/sip/header/AddressParametersHeader.h"
#include "android/gov/nist/javax/sip/header/RecordRoute.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderNames.h"
#include "android/javax/sip/header/RecordRouteHeader.h"
#include "java/lang/StringBuilder.h"

inline jlong AndroidGovNistJavaxSipHeaderRecordRoute_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderRecordRoute_serialVersionUID 2388023364181727205LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderRecordRoute, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderRecordRoute

- (instancetype)initWithAndroidGovNistJavaxSipAddressAddressImpl:(AndroidGovNistJavaxSipAddressAddressImpl *)address {
  AndroidGovNistJavaxSipHeaderRecordRoute_initWithAndroidGovNistJavaxSipAddressAddressImpl_(self, address);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderRecordRoute_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)encodeBody {
  return [((JavaLangStringBuilder *) nil_chk([self encodeBodyWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  if ([((AndroidGovNistJavaxSipAddressAddressImpl *) nil_chk(address_)) getAddressType] == AndroidGovNistJavaxSipAddressAddressImpl_ADDRESS_SPEC) {
    [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:AndroidGovNistCoreGenericObject_LESS_THAN];
  }
  [((AndroidGovNistJavaxSipAddressAddressImpl *) nil_chk(address_)) encodeWithJavaLangStringBuilder:buffer];
  if ([((AndroidGovNistJavaxSipAddressAddressImpl *) nil_chk(address_)) getAddressType] == AndroidGovNistJavaxSipAddressAddressImpl_ADDRESS_SPEC) {
    [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:AndroidGovNistCoreGenericObject_GREATER_THAN];
  }
  if (![((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) isEmpty]) {
    [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:AndroidGovNistCoreGenericObject_SEMICOLON];
    [((AndroidGovNistCoreNameValueList *) nil_chk(self->parameters_)) encodeWithJavaLangStringBuilder:buffer];
  }
  return buffer;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidGovNistJavaxSipAddressAddressImpl:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(encodeBody);
  methods[3].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderRecordRoute_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidGovNistJavaxSipAddressAddressImpl;", "encodeBody", "LJavaLangStringBuilder;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderRecordRoute = { "RecordRoute", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderRecordRoute;
}

@end

void AndroidGovNistJavaxSipHeaderRecordRoute_initWithAndroidGovNistJavaxSipAddressAddressImpl_(AndroidGovNistJavaxSipHeaderRecordRoute *self, AndroidGovNistJavaxSipAddressAddressImpl *address) {
  AndroidGovNistJavaxSipHeaderAddressParametersHeader_initWithNSString_(self, AndroidJavaxSipHeaderRecordRouteHeader_NAME);
  JreStrongAssign(&self->address_, address);
}

AndroidGovNistJavaxSipHeaderRecordRoute *new_AndroidGovNistJavaxSipHeaderRecordRoute_initWithAndroidGovNistJavaxSipAddressAddressImpl_(AndroidGovNistJavaxSipAddressAddressImpl *address) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderRecordRoute, initWithAndroidGovNistJavaxSipAddressAddressImpl_, address)
}

AndroidGovNistJavaxSipHeaderRecordRoute *create_AndroidGovNistJavaxSipHeaderRecordRoute_initWithAndroidGovNistJavaxSipAddressAddressImpl_(AndroidGovNistJavaxSipAddressAddressImpl *address) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderRecordRoute, initWithAndroidGovNistJavaxSipAddressAddressImpl_, address)
}

void AndroidGovNistJavaxSipHeaderRecordRoute_init(AndroidGovNistJavaxSipHeaderRecordRoute *self) {
  AndroidGovNistJavaxSipHeaderAddressParametersHeader_initWithNSString_(self, AndroidGovNistJavaxSipHeaderSIPHeaderNames_RECORD_ROUTE);
}

AndroidGovNistJavaxSipHeaderRecordRoute *new_AndroidGovNistJavaxSipHeaderRecordRoute_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderRecordRoute, init)
}

AndroidGovNistJavaxSipHeaderRecordRoute *create_AndroidGovNistJavaxSipHeaderRecordRoute_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderRecordRoute, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderRecordRoute)
