//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/AuthenticationHeader.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValue.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/core/Separators.h"
#include "android/gov/nist/javax/sip/address/GenericURI.h"
#include "android/gov/nist/javax/sip/header/AuthenticationHeader.h"
#include "android/gov/nist/javax/sip/header/Authorization.h"
#include "android/gov/nist/javax/sip/header/Challenge.h"
#include "android/gov/nist/javax/sip/header/ParameterNames.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/gov/nist/javax/sip/header/ProxyAuthorization.h"
#include "android/gov/nist/javax/sip/header/ims/ParameterNamesIms.h"
#include "android/javax/sip/address/URI.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/text/ParseException.h"

NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_DOMAIN = @"domain";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_REALM = @"realm";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_OPAQUE = @"opaque";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_ALGORITHM = @"algorithm";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_QOP = @"qop";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_STALE = @"stale";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_SIGNATURE = @"signature";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_RESPONSE = @"response";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_SIGNED_BY = @"signed-by";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_NC = @"nc";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_URI = @"uri";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_USERNAME = @"username";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_CNONCE = @"cnonce";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_NONCE = @"nonce";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_IK = @"ik";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_CK = @"ck";
NSString *AndroidGovNistJavaxSipHeaderAuthenticationHeader_INTEGRITY_PROTECTED = @"integrity-protected";

@implementation AndroidGovNistJavaxSipHeaderAuthenticationHeader

- (instancetype)initWithNSString:(NSString *)name {
  AndroidGovNistJavaxSipHeaderAuthenticationHeader_initWithNSString_(self, name);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderAuthenticationHeader_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setParameterWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  AndroidGovNistCoreNameValue *nv = [((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) getNameValueWithNSString:[((NSString *) nil_chk(name)) lowercaseString]];
  if (nv == nil) {
    nv = create_AndroidGovNistCoreNameValue_initWithNSString_withId_(name, value);
    if ([name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderParameterNames_QOP] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderParameterNames_REALM] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderParameterNames_CNONCE] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderParameterNames_NONCE] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderParameterNames_USERNAME] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderParameterNames_DOMAIN] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderParameterNames_OPAQUE] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderParameterNames_NEXT_NONCE] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderParameterNames_URI] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderParameterNames_RESPONSE] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_IK] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_CK] || [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_INTEGRITY_PROTECTED]) {
      if ((([self isKindOfClass:[AndroidGovNistJavaxSipHeaderAuthorization class]]) || ([self isKindOfClass:[AndroidGovNistJavaxSipHeaderProxyAuthorization class]])) && [name java_equalsIgnoreCase:AndroidGovNistJavaxSipHeaderParameterNames_QOP]) {
      }
      else {
        [nv setQuotedValue];
      }
      if (value == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null value");
      if ([value hasPrefix:AndroidGovNistCoreSeparators_DOUBLE_QUOTE]) @throw create_JavaTextParseException_initWithNSString_withInt_(JreStrcat("$$", value, @" : Unexpected DOUBLE_QUOTE"), 0);
    }
    [super setParameterWithAndroidGovNistCoreNameValue:nv];
  }
  else [nv setValueAsObjectWithId:value];
}

- (void)setChallengeWithAndroidGovNistJavaxSipHeaderChallenge:(AndroidGovNistJavaxSipHeaderChallenge *)challenge {
  JreStrongAssign(&self->scheme_, ((AndroidGovNistJavaxSipHeaderChallenge *) nil_chk(challenge))->scheme_);
  JreStrongAssign(&parameters_, challenge->authParams_);
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  [((AndroidGovNistCoreNameValueList *) nil_chk(self->parameters_)) setSeparatorWithNSString:AndroidGovNistCoreSeparators_COMMA];
  buffer = [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:self->scheme_])) appendWithNSString:AndroidGovNistCoreGenericObject_SP];
  return [((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) encodeWithJavaLangStringBuilder:buffer];
}

- (void)setSchemeWithNSString:(NSString *)scheme {
  JreStrongAssign(&self->scheme_, scheme);
}

- (NSString *)getScheme {
  return scheme_;
}

- (void)setRealmWithNSString:(NSString *)realm {
  if (realm == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception,  AuthenticationHeader, setRealm(), The realm parameter is null");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_REALM withNSString:realm];
}

- (NSString *)getRealm {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_REALM];
}

- (void)setNonceWithNSString:(NSString *)nonce {
  if (nonce == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception,  AuthenticationHeader, setNonce(), The nonce parameter is null");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderAuthenticationHeader_NONCE withNSString:nonce];
}

- (NSString *)getNonce {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_NONCE];
}

- (void)setURIWithAndroidJavaxSipAddressURI:(id<AndroidJavaxSipAddressURI>)uri {
  if (uri != nil) {
    AndroidGovNistCoreNameValue *nv = create_AndroidGovNistCoreNameValue_initWithNSString_withId_(AndroidGovNistJavaxSipHeaderParameterNames_URI, uri);
    [nv setQuotedValue];
    [((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) setWithAndroidGovNistCoreNameValue:nv];
  }
  else {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Null URI");
  }
}

- (id<AndroidJavaxSipAddressURI>)getURI {
  return [self getParameterAsURIWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_URI];
}

- (void)setAlgorithmWithNSString:(NSString *)algorithm {
  if (algorithm == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null arg");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_ALGORITHM withNSString:algorithm];
}

- (NSString *)getAlgorithm {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_ALGORITHM];
}

- (void)setQopWithNSString:(NSString *)qop {
  if (qop == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null arg");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_QOP withNSString:qop];
}

- (NSString *)getQop {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_QOP];
}

- (void)setOpaqueWithNSString:(NSString *)opaque {
  if (opaque == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null arg");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_OPAQUE withNSString:opaque];
}

- (NSString *)getOpaque {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_OPAQUE];
}

- (void)setDomainWithNSString:(NSString *)domain {
  if (domain == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null arg");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_DOMAIN withNSString:domain];
}

- (NSString *)getDomain {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_DOMAIN];
}

- (void)setStaleWithBoolean:(jboolean)stale {
  [self setParameterWithAndroidGovNistCoreNameValue:create_AndroidGovNistCoreNameValue_initWithNSString_withId_(AndroidGovNistJavaxSipHeaderParameterNames_STALE, JavaLangBoolean_valueOfWithBoolean_(stale))];
}

- (jboolean)isStale {
  return [self getParameterAsBooleanWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_STALE];
}

- (void)setCNonceWithNSString:(NSString *)cnonce {
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_CNONCE withNSString:cnonce];
}

- (NSString *)getCNonce {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_CNONCE];
}

- (jint)getNonceCount {
  return [self getParameterAsHexIntWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_NC];
}

- (void)setNonceCountWithInt:(jint)param {
  if (param < 0) @throw create_JavaTextParseException_initWithNSString_withInt_(@"bad value", 0);
  NSString *nc = JavaLangInteger_toHexStringWithInt_(param);
  NSString *base = @"00000000";
  nc = JreStrcat("$$", [base java_substring:0 endIndex:8 - ((jint) [((NSString *) nil_chk(nc)) length])], nc);
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_NC withNSString:nc];
}

- (NSString *)getResponse {
  return (NSString *) cast_chk([self getParameterValueWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_RESPONSE], [NSString class]);
}

- (void)setResponseWithNSString:(NSString *)response {
  if (response == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"Null parameter");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderAuthenticationHeader_RESPONSE withNSString:response];
}

- (NSString *)getUsername {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_USERNAME];
}

- (void)setUsernameWithNSString:(NSString *)username {
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_USERNAME withNSString:username];
}

- (void)setIKWithNSString:(NSString *)ik {
  if (ik == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception,  AuthenticationHeader, setIk(), The auth-param IK parameter is null");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderAuthenticationHeader_IK withNSString:ik];
}

- (NSString *)getIK {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_IK];
}

- (void)setCKWithNSString:(NSString *)ck {
  if (ck == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception,  AuthenticationHeader, setCk(), The auth-param CK parameter is null");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderAuthenticationHeader_CK withNSString:ck];
}

- (NSString *)getCK {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_CK];
}

- (void)setIntegrityProtectedWithNSString:(NSString *)integrityProtected {
  if (integrityProtected == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"JAIN-SIP Exception,  AuthenticationHeader, setIntegrityProtected(), The integrity-protected parameter is null");
  [self setParameterWithNSString:AndroidGovNistJavaxSipHeaderAuthenticationHeader_INTEGRITY_PROTECTED withNSString:integrityProtected];
}

- (NSString *)getIntegrityProtected {
  return [self getParameterWithNSString:AndroidGovNistJavaxSipHeaderImsParameterNamesIms_INTEGRITY_PROTECTED];
}

- (void)dealloc {
  RELEASE_(scheme_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressURI;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 0, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(setParameterWithNSString:withNSString:);
  methods[3].selector = @selector(setChallengeWithAndroidGovNistJavaxSipHeaderChallenge:);
  methods[4].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[5].selector = @selector(setSchemeWithNSString:);
  methods[6].selector = @selector(getScheme);
  methods[7].selector = @selector(setRealmWithNSString:);
  methods[8].selector = @selector(getRealm);
  methods[9].selector = @selector(setNonceWithNSString:);
  methods[10].selector = @selector(getNonce);
  methods[11].selector = @selector(setURIWithAndroidJavaxSipAddressURI:);
  methods[12].selector = @selector(getURI);
  methods[13].selector = @selector(setAlgorithmWithNSString:);
  methods[14].selector = @selector(getAlgorithm);
  methods[15].selector = @selector(setQopWithNSString:);
  methods[16].selector = @selector(getQop);
  methods[17].selector = @selector(setOpaqueWithNSString:);
  methods[18].selector = @selector(getOpaque);
  methods[19].selector = @selector(setDomainWithNSString:);
  methods[20].selector = @selector(getDomain);
  methods[21].selector = @selector(setStaleWithBoolean:);
  methods[22].selector = @selector(isStale);
  methods[23].selector = @selector(setCNonceWithNSString:);
  methods[24].selector = @selector(getCNonce);
  methods[25].selector = @selector(getNonceCount);
  methods[26].selector = @selector(setNonceCountWithInt:);
  methods[27].selector = @selector(getResponse);
  methods[28].selector = @selector(setResponseWithNSString:);
  methods[29].selector = @selector(getUsername);
  methods[30].selector = @selector(setUsernameWithNSString:);
  methods[31].selector = @selector(setIKWithNSString:);
  methods[32].selector = @selector(getIK);
  methods[33].selector = @selector(setCKWithNSString:);
  methods[34].selector = @selector(getCK);
  methods[35].selector = @selector(setIntegrityProtectedWithNSString:);
  methods[36].selector = @selector(getIntegrityProtected);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DOMAIN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 27, -1, -1 },
    { "REALM", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 28, -1, -1 },
    { "OPAQUE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 29, -1, -1 },
    { "ALGORITHM", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 30, -1, -1 },
    { "QOP", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 31, -1, -1 },
    { "STALE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 32, -1, -1 },
    { "SIGNATURE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 33, -1, -1 },
    { "RESPONSE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 34, -1, -1 },
    { "SIGNED_BY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 35, -1, -1 },
    { "NC", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 36, -1, -1 },
    { "URI", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 37, -1, -1 },
    { "USERNAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 38, -1, -1 },
    { "CNONCE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 39, -1, -1 },
    { "NONCE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 40, -1, -1 },
    { "IK", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "CK", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 42, -1, -1 },
    { "INTEGRITY_PROTECTED", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 43, -1, -1 },
    { "scheme_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "setParameter", "LNSString;LNSString;", "LJavaTextParseException;", "setChallenge", "LAndroidGovNistJavaxSipHeaderChallenge;", "encodeBody", "LJavaLangStringBuilder;", "setScheme", "setRealm", "setNonce", "setURI", "LAndroidJavaxSipAddressURI;", "setAlgorithm", "setQop", "setOpaque", "setDomain", "setStale", "Z", "setCNonce", "setNonceCount", "I", "setResponse", "setUsername", "setIK", "setCK", "setIntegrityProtected", &AndroidGovNistJavaxSipHeaderAuthenticationHeader_DOMAIN, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_REALM, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_OPAQUE, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_ALGORITHM, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_QOP, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_STALE, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_SIGNATURE, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_RESPONSE, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_SIGNED_BY, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_NC, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_URI, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_USERNAME, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_CNONCE, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_NONCE, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_IK, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_CK, &AndroidGovNistJavaxSipHeaderAuthenticationHeader_INTEGRITY_PROTECTED };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderAuthenticationHeader = { "AuthenticationHeader", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x401, 37, 18, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderAuthenticationHeader;
}

@end

void AndroidGovNistJavaxSipHeaderAuthenticationHeader_initWithNSString_(AndroidGovNistJavaxSipHeaderAuthenticationHeader *self, NSString *name) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, name);
  [((AndroidGovNistCoreNameValueList *) nil_chk(self->parameters_)) setSeparatorWithNSString:AndroidGovNistCoreSeparators_COMMA];
  JreStrongAssign(&self->scheme_, AndroidGovNistJavaxSipHeaderParameterNames_DIGEST);
}

void AndroidGovNistJavaxSipHeaderAuthenticationHeader_init(AndroidGovNistJavaxSipHeaderAuthenticationHeader *self) {
  AndroidGovNistJavaxSipHeaderParametersHeader_init(self);
  [((AndroidGovNistCoreNameValueList *) nil_chk(self->parameters_)) setSeparatorWithNSString:AndroidGovNistCoreSeparators_COMMA];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderAuthenticationHeader)
