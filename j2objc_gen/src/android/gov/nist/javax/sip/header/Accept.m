//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/header/Accept.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/NameValueList.h"
#include "android/gov/nist/javax/sip/header/Accept.h"
#include "android/gov/nist/javax/sip/header/MediaRange.h"
#include "android/gov/nist/javax/sip/header/ParameterNames.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/javax/sip/header/AcceptHeader.h"
#include "java/lang/StringBuilder.h"

inline jlong AndroidGovNistJavaxSipHeaderAccept_get_serialVersionUID();
#define AndroidGovNistJavaxSipHeaderAccept_serialVersionUID -7866187924308658151LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistJavaxSipHeaderAccept, serialVersionUID, jlong)

@implementation AndroidGovNistJavaxSipHeaderAccept

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSipHeaderAccept_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)allowsAllContentTypes {
  if (mediaRange_ == nil) return false;
  else return [((NSString *) nil_chk(mediaRange_->type_)) compareToWithId:AndroidGovNistCoreGenericObject_STAR] == 0;
}

- (jboolean)allowsAllContentSubTypes {
  if (mediaRange_ == nil) {
    return false;
  }
  else return [((NSString *) nil_chk([mediaRange_ getSubtype])) compareToWithId:AndroidGovNistCoreGenericObject_STAR] == 0;
}

- (NSString *)encodeBody {
  return [((JavaLangStringBuilder *) nil_chk([self encodeBodyWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)encodeBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  if (mediaRange_ != nil) [mediaRange_ encodeWithJavaLangStringBuilder:buffer];
  if (parameters_ != nil && ![parameters_ isEmpty]) {
    [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithChar:';'];
    [((AndroidGovNistCoreNameValueList *) nil_chk(parameters_)) encodeWithJavaLangStringBuilder:buffer];
  }
  return buffer;
}

- (AndroidGovNistJavaxSipHeaderMediaRange *)getMediaRange {
  return mediaRange_;
}

- (NSString *)getContentType {
  if (mediaRange_ == nil) return nil;
  else return [mediaRange_ getType];
}

- (NSString *)getContentSubType {
  if (mediaRange_ == nil) return nil;
  else return [mediaRange_ getSubtype];
}

- (jfloat)getQValue {
  return [self getParameterAsFloatWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_Q];
}

- (jboolean)hasQValue {
  return [super hasParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_Q];
}

- (void)removeQValue {
  [super removeParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_Q];
}

- (void)setContentSubTypeWithNSString:(NSString *)subtype {
  if (mediaRange_ == nil) JreStrongAssignAndConsume(&mediaRange_, new_AndroidGovNistJavaxSipHeaderMediaRange_init());
  [mediaRange_ setSubtypeWithNSString:subtype];
}

- (void)setContentTypeWithNSString:(NSString *)type {
  if (mediaRange_ == nil) JreStrongAssignAndConsume(&mediaRange_, new_AndroidGovNistJavaxSipHeaderMediaRange_init());
  [mediaRange_ setTypeWithNSString:type];
}

- (void)setQValueWithFloat:(jfloat)qValue {
  if (qValue == -1) [super removeParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_Q];
  [super setParameterWithNSString:AndroidGovNistJavaxSipHeaderParameterNames_Q withFloat:qValue];
}

- (void)setMediaRangeWithAndroidGovNistJavaxSipHeaderMediaRange:(AndroidGovNistJavaxSipHeaderMediaRange *)m {
  JreStrongAssign(&mediaRange_, m);
}

- (id)java_clone {
  AndroidGovNistJavaxSipHeaderAccept *retval = (AndroidGovNistJavaxSipHeaderAccept *) cast_chk([super java_clone], [AndroidGovNistJavaxSipHeaderAccept class]);
  if (self->mediaRange_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSipHeaderAccept *) nil_chk(retval))->mediaRange_, (AndroidGovNistJavaxSipHeaderMediaRange *) cast_chk([self->mediaRange_ java_clone], [AndroidGovNistJavaxSipHeaderMediaRange class]));
  return retval;
}

- (void)dealloc {
  RELEASE_(mediaRange_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipHeaderMediaRange;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 7, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(allowsAllContentTypes);
  methods[2].selector = @selector(allowsAllContentSubTypes);
  methods[3].selector = @selector(encodeBody);
  methods[4].selector = @selector(encodeBodyWithJavaLangStringBuilder:);
  methods[5].selector = @selector(getMediaRange);
  methods[6].selector = @selector(getContentType);
  methods[7].selector = @selector(getContentSubType);
  methods[8].selector = @selector(getQValue);
  methods[9].selector = @selector(hasQValue);
  methods[10].selector = @selector(removeQValue);
  methods[11].selector = @selector(setContentSubTypeWithNSString:);
  methods[12].selector = @selector(setContentTypeWithNSString:);
  methods[13].selector = @selector(setQValueWithFloat:);
  methods[14].selector = @selector(setMediaRangeWithAndroidGovNistJavaxSipHeaderMediaRange:);
  methods[15].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistJavaxSipHeaderAccept_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "mediaRange_", "LAndroidGovNistJavaxSipHeaderMediaRange;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "encodeBody", "LJavaLangStringBuilder;", "setContentSubType", "LNSString;", "setContentType", "setQValue", "F", "LAndroidJavaxSipInvalidArgumentException;", "setMediaRange", "LAndroidGovNistJavaxSipHeaderMediaRange;", "clone" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipHeaderAccept = { "Accept", "android.gov.nist.javax.sip.header", ptrTable, methods, fields, 7, 0x11, 16, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipHeaderAccept;
}

@end

void AndroidGovNistJavaxSipHeaderAccept_init(AndroidGovNistJavaxSipHeaderAccept *self) {
  AndroidGovNistJavaxSipHeaderParametersHeader_initWithNSString_(self, AndroidJavaxSipHeaderAcceptHeader_NAME);
}

AndroidGovNistJavaxSipHeaderAccept *new_AndroidGovNistJavaxSipHeaderAccept_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipHeaderAccept, init)
}

AndroidGovNistJavaxSipHeaderAccept *create_AndroidGovNistJavaxSipHeaderAccept_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipHeaderAccept, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipHeaderAccept)
