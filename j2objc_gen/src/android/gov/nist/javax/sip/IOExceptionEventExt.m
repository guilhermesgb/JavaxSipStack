//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/IOExceptionEventExt.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/IOExceptionEventExt.h"
#include "android/javax/sip/IOExceptionEvent.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

@interface AndroidGovNistJavaxSipIOExceptionEventExt () {
 @public
  NSString *myHost_;
  jint myPort_;
  AndroidGovNistJavaxSipIOExceptionEventExt_Reason *reason_;
}

@end

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipIOExceptionEventExt, myHost_, NSString *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipIOExceptionEventExt, reason_, AndroidGovNistJavaxSipIOExceptionEventExt_Reason *)

__attribute__((unused)) static void AndroidGovNistJavaxSipIOExceptionEventExt_Reason_initWithNSString_withInt_(AndroidGovNistJavaxSipIOExceptionEventExt_Reason *self, NSString *__name, jint __ordinal);

@implementation AndroidGovNistJavaxSipIOExceptionEventExt

- (instancetype)initWithId:(id)source
withAndroidGovNistJavaxSipIOExceptionEventExt_Reason:(AndroidGovNistJavaxSipIOExceptionEventExt_Reason *)reason
              withNSString:(NSString *)myHost
                   withInt:(jint)myPort
              withNSString:(NSString *)peerHost
                   withInt:(jint)peerPort
              withNSString:(NSString *)transport {
  AndroidGovNistJavaxSipIOExceptionEventExt_initWithId_withAndroidGovNistJavaxSipIOExceptionEventExt_Reason_withNSString_withInt_withNSString_withInt_withNSString_(self, source, reason, myHost, myPort, peerHost, peerPort, transport);
  return self;
}

- (NSString *)getLocalHost {
  return myHost_;
}

- (jint)getLocalPort {
  return myPort_;
}

- (NSString *)getPeerHost {
  return [self getHost];
}

- (jint)getPeerPort {
  return [self getPort];
}

- (AndroidGovNistJavaxSipIOExceptionEventExt_Reason *)getReason {
  return reason_;
}

- (NSString *)description {
  return JreStrcat("$$$I$$$I$$$", @"KeepAliveTimeoutEvent{myHost='", myHost_, @"', myPort=", myPort_, @", peerHost='", [self getHost], @"', peerPort=", [self getPort], @", transport='", [self getTransport], @"'}");
}

- (void)dealloc {
  RELEASE_(myHost_);
  RELEASE_(reason_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipIOExceptionEventExt_Reason;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withAndroidGovNistJavaxSipIOExceptionEventExt_Reason:withNSString:withInt:withNSString:withInt:withNSString:);
  methods[1].selector = @selector(getLocalHost);
  methods[2].selector = @selector(getLocalPort);
  methods[3].selector = @selector(getPeerHost);
  methods[4].selector = @selector(getPeerPort);
  methods[5].selector = @selector(getReason);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "myHost_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "myPort_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "reason_", "LAndroidGovNistJavaxSipIOExceptionEventExt_Reason;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LAndroidGovNistJavaxSipIOExceptionEventExt_Reason;LNSString;ILNSString;ILNSString;", "toString", "LAndroidGovNistJavaxSipIOExceptionEventExt_Reason;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipIOExceptionEventExt = { "IOExceptionEventExt", "android.gov.nist.javax.sip", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, 2, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipIOExceptionEventExt;
}

@end

void AndroidGovNistJavaxSipIOExceptionEventExt_initWithId_withAndroidGovNistJavaxSipIOExceptionEventExt_Reason_withNSString_withInt_withNSString_withInt_withNSString_(AndroidGovNistJavaxSipIOExceptionEventExt *self, id source, AndroidGovNistJavaxSipIOExceptionEventExt_Reason *reason, NSString *myHost, jint myPort, NSString *peerHost, jint peerPort, NSString *transport) {
  AndroidJavaxSipIOExceptionEvent_initWithId_withNSString_withInt_withNSString_(self, source, peerHost, peerPort, transport);
  JreStrongAssign(&self->reason_, nil);
  JreStrongAssign(&self->myHost_, myHost);
  self->myPort_ = myPort;
  JreStrongAssign(&self->reason_, reason);
}

AndroidGovNistJavaxSipIOExceptionEventExt *new_AndroidGovNistJavaxSipIOExceptionEventExt_initWithId_withAndroidGovNistJavaxSipIOExceptionEventExt_Reason_withNSString_withInt_withNSString_withInt_withNSString_(id source, AndroidGovNistJavaxSipIOExceptionEventExt_Reason *reason, NSString *myHost, jint myPort, NSString *peerHost, jint peerPort, NSString *transport) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipIOExceptionEventExt, initWithId_withAndroidGovNistJavaxSipIOExceptionEventExt_Reason_withNSString_withInt_withNSString_withInt_withNSString_, source, reason, myHost, myPort, peerHost, peerPort, transport)
}

AndroidGovNistJavaxSipIOExceptionEventExt *create_AndroidGovNistJavaxSipIOExceptionEventExt_initWithId_withAndroidGovNistJavaxSipIOExceptionEventExt_Reason_withNSString_withInt_withNSString_withInt_withNSString_(id source, AndroidGovNistJavaxSipIOExceptionEventExt_Reason *reason, NSString *myHost, jint myPort, NSString *peerHost, jint peerPort, NSString *transport) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipIOExceptionEventExt, initWithId_withAndroidGovNistJavaxSipIOExceptionEventExt_Reason_withNSString_withInt_withNSString_withInt_withNSString_, source, reason, myHost, myPort, peerHost, peerPort, transport)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipIOExceptionEventExt)

J2OBJC_INITIALIZED_DEFN(AndroidGovNistJavaxSipIOExceptionEventExt_Reason)

AndroidGovNistJavaxSipIOExceptionEventExt_Reason *AndroidGovNistJavaxSipIOExceptionEventExt_Reason_values_[1];

@implementation AndroidGovNistJavaxSipIOExceptionEventExt_Reason

+ (IOSObjectArray *)values {
  return AndroidGovNistJavaxSipIOExceptionEventExt_Reason_values();
}

+ (AndroidGovNistJavaxSipIOExceptionEventExt_Reason *)valueOfWithNSString:(NSString *)name {
  return AndroidGovNistJavaxSipIOExceptionEventExt_Reason_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LAndroidGovNistJavaxSipIOExceptionEventExt_Reason;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipIOExceptionEventExt_Reason;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "KeepAliveTimeout", "LAndroidGovNistJavaxSipIOExceptionEventExt_Reason;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(AndroidGovNistJavaxSipIOExceptionEventExt_Reason, KeepAliveTimeout), "LAndroidGovNistJavaxSipIOExceptionEventExt;", "Ljava/lang/Enum<Landroid/gov/nist/javax/sip/IOExceptionEventExt$Reason;>;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipIOExceptionEventExt_Reason = { "Reason", "android.gov.nist.javax.sip", ptrTable, methods, fields, 7, 0x4019, 2, 1, 3, -1, -1, 4, -1 };
  return &_AndroidGovNistJavaxSipIOExceptionEventExt_Reason;
}

+ (void)initialize {
  if (self == [AndroidGovNistJavaxSipIOExceptionEventExt_Reason class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 1 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"KeepAliveTimeout",
    };
    for (jint i = 0; i < 1; i++) {
      (AndroidGovNistJavaxSipIOExceptionEventExt_Reason_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      AndroidGovNistJavaxSipIOExceptionEventExt_Reason_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(AndroidGovNistJavaxSipIOExceptionEventExt_Reason)
  }
}

@end

void AndroidGovNistJavaxSipIOExceptionEventExt_Reason_initWithNSString_withInt_(AndroidGovNistJavaxSipIOExceptionEventExt_Reason *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *AndroidGovNistJavaxSipIOExceptionEventExt_Reason_values() {
  AndroidGovNistJavaxSipIOExceptionEventExt_Reason_initialize();
  return [IOSObjectArray arrayWithObjects:AndroidGovNistJavaxSipIOExceptionEventExt_Reason_values_ count:1 type:AndroidGovNistJavaxSipIOExceptionEventExt_Reason_class_()];
}

AndroidGovNistJavaxSipIOExceptionEventExt_Reason *AndroidGovNistJavaxSipIOExceptionEventExt_Reason_valueOfWithNSString_(NSString *name) {
  AndroidGovNistJavaxSipIOExceptionEventExt_Reason_initialize();
  for (int i = 0; i < 1; i++) {
    AndroidGovNistJavaxSipIOExceptionEventExt_Reason *e = AndroidGovNistJavaxSipIOExceptionEventExt_Reason_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

AndroidGovNistJavaxSipIOExceptionEventExt_Reason *AndroidGovNistJavaxSipIOExceptionEventExt_Reason_fromOrdinal(NSUInteger ordinal) {
  AndroidGovNistJavaxSipIOExceptionEventExt_Reason_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return AndroidGovNistJavaxSipIOExceptionEventExt_Reason_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipIOExceptionEventExt_Reason)
