//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/IOExceptionEventExt.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipIOExceptionEventExt")
#ifdef RESTRICT_AndroidGovNistJavaxSipIOExceptionEventExt
#define INCLUDE_ALL_AndroidGovNistJavaxSipIOExceptionEventExt 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipIOExceptionEventExt 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipIOExceptionEventExt

#if !defined (AndroidGovNistJavaxSipIOExceptionEventExt_) && (INCLUDE_ALL_AndroidGovNistJavaxSipIOExceptionEventExt || defined(INCLUDE_AndroidGovNistJavaxSipIOExceptionEventExt))
#define AndroidGovNistJavaxSipIOExceptionEventExt_

#define RESTRICT_AndroidJavaxSipIOExceptionEvent 1
#define INCLUDE_AndroidJavaxSipIOExceptionEvent 1
#include "android/javax/sip/IOExceptionEvent.h"

@class AndroidGovNistJavaxSipIOExceptionEventExt_Reason;

@interface AndroidGovNistJavaxSipIOExceptionEventExt : AndroidJavaxSipIOExceptionEvent

#pragma mark Public

- (instancetype)initWithId:(id)source
withAndroidGovNistJavaxSipIOExceptionEventExt_Reason:(AndroidGovNistJavaxSipIOExceptionEventExt_Reason *)reason
              withNSString:(NSString *)myHost
                   withInt:(jint)myPort
              withNSString:(NSString *)peerHost
                   withInt:(jint)peerPort
              withNSString:(NSString *)transport;

- (NSString *)getLocalHost;

- (jint)getLocalPort;

- (NSString *)getPeerHost;

- (jint)getPeerPort;

- (AndroidGovNistJavaxSipIOExceptionEventExt_Reason *)getReason;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipIOExceptionEventExt)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipIOExceptionEventExt_initWithId_withAndroidGovNistJavaxSipIOExceptionEventExt_Reason_withNSString_withInt_withNSString_withInt_withNSString_(AndroidGovNistJavaxSipIOExceptionEventExt *self, id source, AndroidGovNistJavaxSipIOExceptionEventExt_Reason *reason, NSString *myHost, jint myPort, NSString *peerHost, jint peerPort, NSString *transport);

FOUNDATION_EXPORT AndroidGovNistJavaxSipIOExceptionEventExt *new_AndroidGovNistJavaxSipIOExceptionEventExt_initWithId_withAndroidGovNistJavaxSipIOExceptionEventExt_Reason_withNSString_withInt_withNSString_withInt_withNSString_(id source, AndroidGovNistJavaxSipIOExceptionEventExt_Reason *reason, NSString *myHost, jint myPort, NSString *peerHost, jint peerPort, NSString *transport) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipIOExceptionEventExt *create_AndroidGovNistJavaxSipIOExceptionEventExt_initWithId_withAndroidGovNistJavaxSipIOExceptionEventExt_Reason_withNSString_withInt_withNSString_withInt_withNSString_(id source, AndroidGovNistJavaxSipIOExceptionEventExt_Reason *reason, NSString *myHost, jint myPort, NSString *peerHost, jint peerPort, NSString *transport);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipIOExceptionEventExt)

#endif

#if !defined (AndroidGovNistJavaxSipIOExceptionEventExt_Reason_) && (INCLUDE_ALL_AndroidGovNistJavaxSipIOExceptionEventExt || defined(INCLUDE_AndroidGovNistJavaxSipIOExceptionEventExt_Reason))
#define AndroidGovNistJavaxSipIOExceptionEventExt_Reason_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, AndroidGovNistJavaxSipIOExceptionEventExt_Reason_Enum) {
  AndroidGovNistJavaxSipIOExceptionEventExt_Reason_Enum_KeepAliveTimeout = 0,
};

@interface AndroidGovNistJavaxSipIOExceptionEventExt_Reason : JavaLangEnum < NSCopying >

#pragma mark Public

+ (AndroidGovNistJavaxSipIOExceptionEventExt_Reason *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipIOExceptionEventExt_Reason)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT AndroidGovNistJavaxSipIOExceptionEventExt_Reason *AndroidGovNistJavaxSipIOExceptionEventExt_Reason_values_[];

inline AndroidGovNistJavaxSipIOExceptionEventExt_Reason *AndroidGovNistJavaxSipIOExceptionEventExt_Reason_get_KeepAliveTimeout();
J2OBJC_ENUM_CONSTANT(AndroidGovNistJavaxSipIOExceptionEventExt_Reason, KeepAliveTimeout)

FOUNDATION_EXPORT IOSObjectArray *AndroidGovNistJavaxSipIOExceptionEventExt_Reason_values();

FOUNDATION_EXPORT AndroidGovNistJavaxSipIOExceptionEventExt_Reason *AndroidGovNistJavaxSipIOExceptionEventExt_Reason_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT AndroidGovNistJavaxSipIOExceptionEventExt_Reason *AndroidGovNistJavaxSipIOExceptionEventExt_Reason_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipIOExceptionEventExt_Reason)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipIOExceptionEventExt")
