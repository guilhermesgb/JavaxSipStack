//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/AddressParametersParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/javax/sip/address/AddressImpl.h"
#include "android/gov/nist/javax/sip/header/AddressParametersHeader.h"
#include "android/gov/nist/javax/sip/parser/AddressParametersParser.h"
#include "android/gov/nist/javax/sip/parser/AddressParser.h"
#include "android/gov/nist/javax/sip/parser/Lexer.h"
#include "android/gov/nist/javax/sip/parser/ParametersParser.h"
#include "java/text/ParseException.h"

@implementation AndroidGovNistJavaxSipParserAddressParametersParser

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
  return self;
}

- (instancetype)initWithNSString:(NSString *)buffer {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithNSString_(self, buffer);
  return self;
}

- (void)parseWithAndroidGovNistJavaxSipHeaderAddressParametersHeader:(AndroidGovNistJavaxSipHeaderAddressParametersHeader *)addressParametersHeader {
  [self dbg_enterWithNSString:@"AddressParametersParser.parse"];
  @try {
    AndroidGovNistJavaxSipParserAddressParser *addressParser = create_AndroidGovNistJavaxSipParserAddressParser_initWithAndroidGovNistJavaxSipParserLexer_([self getLexer]);
    AndroidGovNistJavaxSipAddressAddressImpl *addr = [addressParser addressWithBoolean:false];
    [((AndroidGovNistJavaxSipHeaderAddressParametersHeader *) nil_chk(addressParametersHeader)) setAddressWithAndroidJavaxSipAddressAddress:addr];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) SPorHT];
    jchar la = [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) lookAheadWithInt:0];
    if ([((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) hasMoreChars] && la != 0x0000 && la != 0x000a && [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) startsId]) {
      [super parseNameValueListWithAndroidGovNistJavaxSipHeaderParametersHeader:addressParametersHeader];
    }
    else [super parseWithAndroidGovNistJavaxSipHeaderParametersHeader:addressParametersHeader];
  }
  @catch (JavaTextParseException *ex) {
    @throw ex;
  }
  @finally {
    [self dbg_leaveWithNSString:@"AddressParametersParser.parse"];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidGovNistJavaxSipParserLexer:);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(parseWithAndroidGovNistJavaxSipHeaderAddressParametersHeader:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidGovNistJavaxSipParserLexer;", "LNSString;", "parse", "LAndroidGovNistJavaxSipHeaderAddressParametersHeader;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipParserAddressParametersParser = { "AddressParametersParser", "android.gov.nist.javax.sip.parser", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipParserAddressParametersParser;
}

@end

void AndroidGovNistJavaxSipParserAddressParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserAddressParametersParser *self, AndroidGovNistJavaxSipParserLexer *lexer) {
  AndroidGovNistJavaxSipParserParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
}

AndroidGovNistJavaxSipParserAddressParametersParser *new_AndroidGovNistJavaxSipParserAddressParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserAddressParametersParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

AndroidGovNistJavaxSipParserAddressParametersParser *create_AndroidGovNistJavaxSipParserAddressParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserAddressParametersParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

void AndroidGovNistJavaxSipParserAddressParametersParser_initWithNSString_(AndroidGovNistJavaxSipParserAddressParametersParser *self, NSString *buffer) {
  AndroidGovNistJavaxSipParserParametersParser_initWithNSString_(self, buffer);
}

AndroidGovNistJavaxSipParserAddressParametersParser *new_AndroidGovNistJavaxSipParserAddressParametersParser_initWithNSString_(NSString *buffer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserAddressParametersParser, initWithNSString_, buffer)
}

AndroidGovNistJavaxSipParserAddressParametersParser *create_AndroidGovNistJavaxSipParserAddressParametersParser_initWithNSString_(NSString *buffer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserAddressParametersParser, initWithNSString_, buffer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipParserAddressParametersParser)
