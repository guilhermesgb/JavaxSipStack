//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/ProxyAuthorizationParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipParserProxyAuthorizationParser")
#ifdef RESTRICT_AndroidGovNistJavaxSipParserProxyAuthorizationParser
#define INCLUDE_ALL_AndroidGovNistJavaxSipParserProxyAuthorizationParser 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipParserProxyAuthorizationParser 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipParserProxyAuthorizationParser

#if !defined (AndroidGovNistJavaxSipParserProxyAuthorizationParser_) && (INCLUDE_ALL_AndroidGovNistJavaxSipParserProxyAuthorizationParser || defined(INCLUDE_AndroidGovNistJavaxSipParserProxyAuthorizationParser))
#define AndroidGovNistJavaxSipParserProxyAuthorizationParser_

#define RESTRICT_AndroidGovNistJavaxSipParserChallengeParser 1
#define INCLUDE_AndroidGovNistJavaxSipParserChallengeParser 1
#include "android/gov/nist/javax/sip/parser/ChallengeParser.h"

@class AndroidGovNistJavaxSipHeaderSIPHeader;
@class AndroidGovNistJavaxSipParserLexer;

@interface AndroidGovNistJavaxSipParserProxyAuthorizationParser : AndroidGovNistJavaxSipParserChallengeParser

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)proxyAuthorization;

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse;

#pragma mark Protected

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipParserProxyAuthorizationParser)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserProxyAuthorizationParser_initWithNSString_(AndroidGovNistJavaxSipParserProxyAuthorizationParser *self, NSString *proxyAuthorization);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserProxyAuthorizationParser *new_AndroidGovNistJavaxSipParserProxyAuthorizationParser_initWithNSString_(NSString *proxyAuthorization) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserProxyAuthorizationParser *create_AndroidGovNistJavaxSipParserProxyAuthorizationParser_initWithNSString_(NSString *proxyAuthorization);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserProxyAuthorizationParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserProxyAuthorizationParser *self, AndroidGovNistJavaxSipParserLexer *lexer);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserProxyAuthorizationParser *new_AndroidGovNistJavaxSipParserProxyAuthorizationParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserProxyAuthorizationParser *create_AndroidGovNistJavaxSipParserProxyAuthorizationParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipParserProxyAuthorizationParser)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipParserProxyAuthorizationParser")
