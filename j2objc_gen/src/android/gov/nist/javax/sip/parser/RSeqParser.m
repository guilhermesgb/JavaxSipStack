//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/RSeqParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/ParserCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sip/header/RSeq.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderNames.h"
#include "android/gov/nist/javax/sip/parser/HeaderParser.h"
#include "android/gov/nist/javax/sip/parser/Lexer.h"
#include "android/gov/nist/javax/sip/parser/RSeqParser.h"
#include "android/gov/nist/javax/sip/parser/TokenTypes.h"
#include "android/javax/sip/InvalidArgumentException.h"
#include "java/lang/Long.h"
#include "java/text/ParseException.h"

@implementation AndroidGovNistJavaxSipParserRSeqParser

- (instancetype)initWithNSString:(NSString *)rseq {
  AndroidGovNistJavaxSipParserRSeqParser_initWithNSString_(self, rseq);
  return self;
}

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer {
  AndroidGovNistJavaxSipParserRSeqParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
  return self;
}

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse {
  if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_enterWithNSString:@"RSeqParser.parse"];
  AndroidGovNistJavaxSipHeaderRSeq *rseq = create_AndroidGovNistJavaxSipHeaderRSeq_init();
  @try {
    [self headerNameWithInt:AndroidGovNistJavaxSipParserTokenTypes_RSEQ];
    [rseq setHeaderNameWithNSString:AndroidGovNistJavaxSipHeaderSIPHeaderNames_RSEQ];
    NSString *number = [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) number];
    @try {
      [rseq setSeqNumberWithLong:JavaLangLong_parseLongWithNSString_(number)];
    }
    @catch (AndroidJavaxSipInvalidArgumentException *ex) {
      @throw [self createParseExceptionWithNSString:[((AndroidJavaxSipInvalidArgumentException *) nil_chk(ex)) getMessage]];
    }
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:0x000a];
    return rseq;
  }
  @finally {
    if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_leaveWithNSString:@"RSeqParser.parse"];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipHeaderSIPHeader;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithAndroidGovNistJavaxSipParserLexer:);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LAndroidGovNistJavaxSipParserLexer;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipParserRSeqParser = { "RSeqParser", "android.gov.nist.javax.sip.parser", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipParserRSeqParser;
}

@end

void AndroidGovNistJavaxSipParserRSeqParser_initWithNSString_(AndroidGovNistJavaxSipParserRSeqParser *self, NSString *rseq) {
  AndroidGovNistJavaxSipParserHeaderParser_initWithNSString_(self, rseq);
}

AndroidGovNistJavaxSipParserRSeqParser *new_AndroidGovNistJavaxSipParserRSeqParser_initWithNSString_(NSString *rseq) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserRSeqParser, initWithNSString_, rseq)
}

AndroidGovNistJavaxSipParserRSeqParser *create_AndroidGovNistJavaxSipParserRSeqParser_initWithNSString_(NSString *rseq) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserRSeqParser, initWithNSString_, rseq)
}

void AndroidGovNistJavaxSipParserRSeqParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserRSeqParser *self, AndroidGovNistJavaxSipParserLexer *lexer) {
  AndroidGovNistJavaxSipParserHeaderParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
}

AndroidGovNistJavaxSipParserRSeqParser *new_AndroidGovNistJavaxSipParserRSeqParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserRSeqParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

AndroidGovNistJavaxSipParserRSeqParser *create_AndroidGovNistJavaxSipParserRSeqParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserRSeqParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipParserRSeqParser)
