//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/ims/PAssociatedURIParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/ParserCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PAssociatedURI.h"
#include "android/gov/nist/javax/sip/header/ims/PAssociatedURIList.h"
#include "android/gov/nist/javax/sip/header/ims/SIPHeaderNamesIms.h"
#include "android/gov/nist/javax/sip/parser/AddressParametersParser.h"
#include "android/gov/nist/javax/sip/parser/Lexer.h"
#include "android/gov/nist/javax/sip/parser/TokenTypes.h"
#include "android/gov/nist/javax/sip/parser/ims/PAssociatedURIParser.h"

@implementation AndroidGovNistJavaxSipParserImsPAssociatedURIParser

- (instancetype)initWithNSString:(NSString *)associatedURI {
  AndroidGovNistJavaxSipParserImsPAssociatedURIParser_initWithNSString_(self, associatedURI);
  return self;
}

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer {
  AndroidGovNistJavaxSipParserImsPAssociatedURIParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
  return self;
}

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse {
  if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_enterWithNSString:@"PAssociatedURIParser.parse"];
  AndroidGovNistJavaxSipHeaderImsPAssociatedURIList *associatedURIList = create_AndroidGovNistJavaxSipHeaderImsPAssociatedURIList_init();
  @try {
    [self headerNameWithInt:AndroidGovNistJavaxSipParserTokenTypes_P_ASSOCIATED_URI];
    AndroidGovNistJavaxSipHeaderImsPAssociatedURI *associatedURI = create_AndroidGovNistJavaxSipHeaderImsPAssociatedURI_init();
    [associatedURI setHeaderNameWithNSString:AndroidGovNistJavaxSipHeaderImsSIPHeaderNamesIms_P_ASSOCIATED_URI];
    [super parseWithAndroidGovNistJavaxSipHeaderAddressParametersHeader:associatedURI];
    [associatedURIList addWithId:associatedURI];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    while ([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) lookAheadWithInt:0] == ',') {
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:','];
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
      associatedURI = create_AndroidGovNistJavaxSipHeaderImsPAssociatedURI_init();
      [super parseWithAndroidGovNistJavaxSipHeaderAddressParametersHeader:associatedURI];
      [associatedURIList addWithId:associatedURI];
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    }
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:0x000a];
    return associatedURIList;
  }
  @finally {
    if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_leaveWithNSString:@"PAssociatedURIParser.parse"];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipHeaderSIPHeader;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithAndroidGovNistJavaxSipParserLexer:);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LAndroidGovNistJavaxSipParserLexer;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipParserImsPAssociatedURIParser = { "PAssociatedURIParser", "android.gov.nist.javax.sip.parser.ims", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipParserImsPAssociatedURIParser;
}

@end

void AndroidGovNistJavaxSipParserImsPAssociatedURIParser_initWithNSString_(AndroidGovNistJavaxSipParserImsPAssociatedURIParser *self, NSString *associatedURI) {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithNSString_(self, associatedURI);
}

AndroidGovNistJavaxSipParserImsPAssociatedURIParser *new_AndroidGovNistJavaxSipParserImsPAssociatedURIParser_initWithNSString_(NSString *associatedURI) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserImsPAssociatedURIParser, initWithNSString_, associatedURI)
}

AndroidGovNistJavaxSipParserImsPAssociatedURIParser *create_AndroidGovNistJavaxSipParserImsPAssociatedURIParser_initWithNSString_(NSString *associatedURI) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserImsPAssociatedURIParser, initWithNSString_, associatedURI)
}

void AndroidGovNistJavaxSipParserImsPAssociatedURIParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserImsPAssociatedURIParser *self, AndroidGovNistJavaxSipParserLexer *lexer) {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
}

AndroidGovNistJavaxSipParserImsPAssociatedURIParser *new_AndroidGovNistJavaxSipParserImsPAssociatedURIParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserImsPAssociatedURIParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

AndroidGovNistJavaxSipParserImsPAssociatedURIParser *create_AndroidGovNistJavaxSipParserImsPAssociatedURIParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserImsPAssociatedURIParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipParserImsPAssociatedURIParser)
