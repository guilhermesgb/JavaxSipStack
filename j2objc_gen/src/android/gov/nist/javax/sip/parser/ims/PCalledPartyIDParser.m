//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/ims/PCalledPartyIDParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/ParserCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PCalledPartyID.h"
#include "android/gov/nist/javax/sip/parser/AddressParametersParser.h"
#include "android/gov/nist/javax/sip/parser/Lexer.h"
#include "android/gov/nist/javax/sip/parser/TokenTypes.h"
#include "android/gov/nist/javax/sip/parser/ims/PCalledPartyIDParser.h"

@implementation AndroidGovNistJavaxSipParserImsPCalledPartyIDParser

- (instancetype)initWithNSString:(NSString *)calledPartyID {
  AndroidGovNistJavaxSipParserImsPCalledPartyIDParser_initWithNSString_(self, calledPartyID);
  return self;
}

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer {
  AndroidGovNistJavaxSipParserImsPCalledPartyIDParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
  return self;
}

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse {
  if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_enterWithNSString:@"PCalledPartyIDParser.parse"];
  @try {
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:AndroidGovNistJavaxSipParserTokenTypes_P_CALLED_PARTY_ID];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:':'];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistJavaxSipHeaderImsPCalledPartyID *calledPartyID = create_AndroidGovNistJavaxSipHeaderImsPCalledPartyID_init();
    [super parseWithAndroidGovNistJavaxSipHeaderAddressParametersHeader:calledPartyID];
    return calledPartyID;
  }
  @finally {
    if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_leaveWithNSString:@"PCalledPartyIDParser.parse"];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipHeaderSIPHeader;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithAndroidGovNistJavaxSipParserLexer:);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LAndroidGovNistJavaxSipParserLexer;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipParserImsPCalledPartyIDParser = { "PCalledPartyIDParser", "android.gov.nist.javax.sip.parser.ims", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipParserImsPCalledPartyIDParser;
}

@end

void AndroidGovNistJavaxSipParserImsPCalledPartyIDParser_initWithNSString_(AndroidGovNistJavaxSipParserImsPCalledPartyIDParser *self, NSString *calledPartyID) {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithNSString_(self, calledPartyID);
}

AndroidGovNistJavaxSipParserImsPCalledPartyIDParser *new_AndroidGovNistJavaxSipParserImsPCalledPartyIDParser_initWithNSString_(NSString *calledPartyID) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserImsPCalledPartyIDParser, initWithNSString_, calledPartyID)
}

AndroidGovNistJavaxSipParserImsPCalledPartyIDParser *create_AndroidGovNistJavaxSipParserImsPCalledPartyIDParser_initWithNSString_(NSString *calledPartyID) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserImsPCalledPartyIDParser, initWithNSString_, calledPartyID)
}

void AndroidGovNistJavaxSipParserImsPCalledPartyIDParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserImsPCalledPartyIDParser *self, AndroidGovNistJavaxSipParserLexer *lexer) {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
}

AndroidGovNistJavaxSipParserImsPCalledPartyIDParser *new_AndroidGovNistJavaxSipParserImsPCalledPartyIDParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserImsPCalledPartyIDParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

AndroidGovNistJavaxSipParserImsPCalledPartyIDParser *create_AndroidGovNistJavaxSipParserImsPCalledPartyIDParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserImsPCalledPartyIDParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipParserImsPCalledPartyIDParser)
