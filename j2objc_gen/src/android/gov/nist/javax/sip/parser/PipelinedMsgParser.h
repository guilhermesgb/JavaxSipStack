//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/PipelinedMsgParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipParserPipelinedMsgParser")
#ifdef RESTRICT_AndroidGovNistJavaxSipParserPipelinedMsgParser
#define INCLUDE_ALL_AndroidGovNistJavaxSipParserPipelinedMsgParser 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipParserPipelinedMsgParser 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipParserPipelinedMsgParser

#if !defined (AndroidGovNistJavaxSipParserPipelinedMsgParser_) && (INCLUDE_ALL_AndroidGovNistJavaxSipParserPipelinedMsgParser || defined(INCLUDE_AndroidGovNistJavaxSipParserPipelinedMsgParser))
#define AndroidGovNistJavaxSipParserPipelinedMsgParser_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class AndroidGovNistJavaxSipParserPipeline;
@class AndroidGovNistJavaxSipStackSIPTransactionStack;
@protocol AndroidGovNistJavaxSipParserSIPMessageListener;

@interface AndroidGovNistJavaxSipParserPipelinedMsgParser : NSObject < JavaLangRunnable > {
 @public
  id<AndroidGovNistJavaxSipParserSIPMessageListener> sipMessageListener_;
  jboolean isRunning_;
}

#pragma mark Public

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack
                              withAndroidGovNistJavaxSipParserPipeline:(AndroidGovNistJavaxSipParserPipeline *)inArg;

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack
                    withAndroidGovNistJavaxSipParserSIPMessageListener:(id<AndroidGovNistJavaxSipParserSIPMessageListener>)sipMessageListener
                              withAndroidGovNistJavaxSipParserPipeline:(AndroidGovNistJavaxSipParserPipeline *)inArg
                                                           withBoolean:(jboolean)debug
                                                               withInt:(jint)maxMessageSize;

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStack
                    withAndroidGovNistJavaxSipParserSIPMessageListener:(id<AndroidGovNistJavaxSipParserSIPMessageListener>)mhandler
                              withAndroidGovNistJavaxSipParserPipeline:(AndroidGovNistJavaxSipParserPipeline *)inArg
                                                               withInt:(jint)maxMsgSize;

- (void)close;

- (void)processInput;

- (void)run;

- (void)setMessageListenerWithAndroidGovNistJavaxSipParserSIPMessageListener:(id<AndroidGovNistJavaxSipParserSIPMessageListener>)mlistener;

#pragma mark Protected

- (instancetype)init;

- (id)java_clone;

@end

J2OBJC_STATIC_INIT(AndroidGovNistJavaxSipParserPipelinedMsgParser)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipParserPipelinedMsgParser, sipMessageListener_, id<AndroidGovNistJavaxSipParserSIPMessageListener>)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserPipelinedMsgParser_init(AndroidGovNistJavaxSipParserPipelinedMsgParser *self);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser *new_AndroidGovNistJavaxSipParserPipelinedMsgParser_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser *create_AndroidGovNistJavaxSipParserPipelinedMsgParser_init();

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserPipelinedMsgParser_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipParserSIPMessageListener_withAndroidGovNistJavaxSipParserPipeline_withBoolean_withInt_(AndroidGovNistJavaxSipParserPipelinedMsgParser *self, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, id<AndroidGovNistJavaxSipParserSIPMessageListener> sipMessageListener, AndroidGovNistJavaxSipParserPipeline *inArg, jboolean debug, jint maxMessageSize);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser *new_AndroidGovNistJavaxSipParserPipelinedMsgParser_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipParserSIPMessageListener_withAndroidGovNistJavaxSipParserPipeline_withBoolean_withInt_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, id<AndroidGovNistJavaxSipParserSIPMessageListener> sipMessageListener, AndroidGovNistJavaxSipParserPipeline *inArg, jboolean debug, jint maxMessageSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser *create_AndroidGovNistJavaxSipParserPipelinedMsgParser_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipParserSIPMessageListener_withAndroidGovNistJavaxSipParserPipeline_withBoolean_withInt_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, id<AndroidGovNistJavaxSipParserSIPMessageListener> sipMessageListener, AndroidGovNistJavaxSipParserPipeline *inArg, jboolean debug, jint maxMessageSize);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserPipelinedMsgParser_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipParserSIPMessageListener_withAndroidGovNistJavaxSipParserPipeline_withInt_(AndroidGovNistJavaxSipParserPipelinedMsgParser *self, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, id<AndroidGovNistJavaxSipParserSIPMessageListener> mhandler, AndroidGovNistJavaxSipParserPipeline *inArg, jint maxMsgSize);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser *new_AndroidGovNistJavaxSipParserPipelinedMsgParser_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipParserSIPMessageListener_withAndroidGovNistJavaxSipParserPipeline_withInt_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, id<AndroidGovNistJavaxSipParserSIPMessageListener> mhandler, AndroidGovNistJavaxSipParserPipeline *inArg, jint maxMsgSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser *create_AndroidGovNistJavaxSipParserPipelinedMsgParser_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipParserSIPMessageListener_withAndroidGovNistJavaxSipParserPipeline_withInt_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, id<AndroidGovNistJavaxSipParserSIPMessageListener> mhandler, AndroidGovNistJavaxSipParserPipeline *inArg, jint maxMsgSize);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserPipelinedMsgParser_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipParserPipeline_(AndroidGovNistJavaxSipParserPipelinedMsgParser *self, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipParserPipeline *inArg);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser *new_AndroidGovNistJavaxSipParserPipelinedMsgParser_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipParserPipeline_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipParserPipeline *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser *create_AndroidGovNistJavaxSipParserPipelinedMsgParser_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_withAndroidGovNistJavaxSipParserPipeline_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack, AndroidGovNistJavaxSipParserPipeline *inArg);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipParserPipelinedMsgParser)

#endif

#if !defined (AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch_) && (INCLUDE_ALL_AndroidGovNistJavaxSipParserPipelinedMsgParser || defined(INCLUDE_AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch))
#define AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

#define RESTRICT_AndroidGovNistJavaxSipStackQueuedMessageDispatchBase 1
#define INCLUDE_AndroidGovNistJavaxSipStackQueuedMessageDispatchBase 1
#include "android/gov/nist/javax/sip/stack/QueuedMessageDispatchBase.h"

@class AndroidGovNistJavaxSipParserPipelinedMsgParser;
@class AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure;

@interface AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch : NSObject < JavaLangRunnable, AndroidGovNistJavaxSipStackQueuedMessageDispatchBase > {
 @public
  AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure *callIDOrderingStructure_;
  NSString *callId_;
  jlong time_;
}

#pragma mark Public

- (instancetype)initWithAndroidGovNistJavaxSipParserPipelinedMsgParser:(AndroidGovNistJavaxSipParserPipelinedMsgParser *)outer$
withAndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure:(AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure *)callIDOrderingStructure
                                                          withNSString:(NSString *)callId;

- (jlong)getReceptionTime;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch)

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch, callIDOrderingStructure_, AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch, callId_, NSString *)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch_initWithAndroidGovNistJavaxSipParserPipelinedMsgParser_withAndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure_withNSString_(AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch *self, AndroidGovNistJavaxSipParserPipelinedMsgParser *outer$, AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure *callIDOrderingStructure, NSString *callId);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch *new_AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch_initWithAndroidGovNistJavaxSipParserPipelinedMsgParser_withAndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure_withNSString_(AndroidGovNistJavaxSipParserPipelinedMsgParser *outer$, AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure *callIDOrderingStructure, NSString *callId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch *create_AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch_initWithAndroidGovNistJavaxSipParserPipelinedMsgParser_withAndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure_withNSString_(AndroidGovNistJavaxSipParserPipelinedMsgParser *outer$, AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure *callIDOrderingStructure, NSString *callId);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipParserPipelinedMsgParser_Dispatch)

#endif

#if !defined (AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure_) && (INCLUDE_ALL_AndroidGovNistJavaxSipParserPipelinedMsgParser || defined(INCLUDE_AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure))
#define AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure_

@class AndroidGovNistJavaxSipParserPipelinedMsgParser;
@class JavaUtilConcurrentSemaphore;
@protocol JavaUtilQueue;

@interface AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure : NSObject

#pragma mark Public

- (instancetype)initWithAndroidGovNistJavaxSipParserPipelinedMsgParser:(AndroidGovNistJavaxSipParserPipelinedMsgParser *)outer$;

- (id<JavaUtilQueue>)getMessagesForCallID;

- (JavaUtilConcurrentSemaphore *)getSemaphore;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure_initWithAndroidGovNistJavaxSipParserPipelinedMsgParser_(AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure *self, AndroidGovNistJavaxSipParserPipelinedMsgParser *outer$);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure *new_AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure_initWithAndroidGovNistJavaxSipParserPipelinedMsgParser_(AndroidGovNistJavaxSipParserPipelinedMsgParser *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure *create_AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure_initWithAndroidGovNistJavaxSipParserPipelinedMsgParser_(AndroidGovNistJavaxSipParserPipelinedMsgParser *outer$);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipParserPipelinedMsgParser_CallIDOrderingStructure)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipParserPipelinedMsgParser")
