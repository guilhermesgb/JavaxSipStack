//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/ims/PMediaAuthorizationParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser")
#ifdef RESTRICT_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser
#define INCLUDE_ALL_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser

#if !defined (AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser_) && (INCLUDE_ALL_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser || defined(INCLUDE_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser))
#define AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser_

#define RESTRICT_AndroidGovNistJavaxSipParserHeaderParser 1
#define INCLUDE_AndroidGovNistJavaxSipParserHeaderParser 1
#include "android/gov/nist/javax/sip/parser/HeaderParser.h"

#define RESTRICT_AndroidGovNistJavaxSipParserTokenTypes 1
#define INCLUDE_AndroidGovNistJavaxSipParserTokenTypes 1
#include "android/gov/nist/javax/sip/parser/TokenTypes.h"

@class AndroidGovNistJavaxSipHeaderSIPHeader;
@class AndroidGovNistJavaxSipParserLexer;

@interface AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser : AndroidGovNistJavaxSipParserHeaderParser < AndroidGovNistJavaxSipParserTokenTypes >

#pragma mark Public

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer;

- (instancetype)initWithNSString:(NSString *)mediaAuthorization;

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser_initWithNSString_(AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser *self, NSString *mediaAuthorization);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser *new_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser_initWithNSString_(NSString *mediaAuthorization) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser *create_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser_initWithNSString_(NSString *mediaAuthorization);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser *self, AndroidGovNistJavaxSipParserLexer *lexer);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser *new_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser *create_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipParserImsPMediaAuthorizationParser")
