//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/ToParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/To.h"
#include "android/gov/nist/javax/sip/parser/AddressParametersParser.h"
#include "android/gov/nist/javax/sip/parser/Lexer.h"
#include "android/gov/nist/javax/sip/parser/ToParser.h"
#include "android/gov/nist/javax/sip/parser/TokenTypes.h"

@implementation AndroidGovNistJavaxSipParserToParser

- (instancetype)initWithNSString:(NSString *)to {
  AndroidGovNistJavaxSipParserToParser_initWithNSString_(self, to);
  return self;
}

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer {
  AndroidGovNistJavaxSipParserToParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
  return self;
}

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse {
  [self headerNameWithInt:AndroidGovNistJavaxSipParserTokenTypes_TO];
  AndroidGovNistJavaxSipHeaderTo *to = create_AndroidGovNistJavaxSipHeaderTo_init();
  [super parseWithAndroidGovNistJavaxSipHeaderAddressParametersHeader:to];
  [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:0x000a];
  return to;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipHeaderSIPHeader;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithAndroidGovNistJavaxSipParserLexer:);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LAndroidGovNistJavaxSipParserLexer;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipParserToParser = { "ToParser", "android.gov.nist.javax.sip.parser", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipParserToParser;
}

@end

void AndroidGovNistJavaxSipParserToParser_initWithNSString_(AndroidGovNistJavaxSipParserToParser *self, NSString *to) {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithNSString_(self, to);
}

AndroidGovNistJavaxSipParserToParser *new_AndroidGovNistJavaxSipParserToParser_initWithNSString_(NSString *to) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserToParser, initWithNSString_, to)
}

AndroidGovNistJavaxSipParserToParser *create_AndroidGovNistJavaxSipParserToParser_initWithNSString_(NSString *to) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserToParser, initWithNSString_, to)
}

void AndroidGovNistJavaxSipParserToParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserToParser *self, AndroidGovNistJavaxSipParserLexer *lexer) {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
}

AndroidGovNistJavaxSipParserToParser *new_AndroidGovNistJavaxSipParserToParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserToParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

AndroidGovNistJavaxSipParserToParser *create_AndroidGovNistJavaxSipParserToParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserToParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipParserToParser)
