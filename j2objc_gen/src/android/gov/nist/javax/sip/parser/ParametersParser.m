//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/ParametersParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/NameValue.h"
#include "android/gov/nist/javax/sip/header/ParametersHeader.h"
#include "android/gov/nist/javax/sip/parser/HeaderParser.h"
#include "android/gov/nist/javax/sip/parser/Lexer.h"
#include "android/gov/nist/javax/sip/parser/ParametersParser.h"

@implementation AndroidGovNistJavaxSipParserParametersParser

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer {
  AndroidGovNistJavaxSipParserParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
  return self;
}

- (instancetype)initWithNSString:(NSString *)buffer {
  AndroidGovNistJavaxSipParserParametersParser_initWithNSString_(self, buffer);
  return self;
}

- (void)parseWithAndroidGovNistJavaxSipHeaderParametersHeader:(AndroidGovNistJavaxSipHeaderParametersHeader *)parametersHeader {
  [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
  while ([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) lookAheadWithInt:0] == ';') {
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) consumeWithInt:1];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistCoreNameValue *nv = [self nameValue];
    [((AndroidGovNistJavaxSipHeaderParametersHeader *) nil_chk(parametersHeader)) setParameterWithAndroidGovNistCoreNameValue:nv];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
  }
}

- (void)parseNameValueListWithAndroidGovNistJavaxSipHeaderParametersHeader:(AndroidGovNistJavaxSipHeaderParametersHeader *)parametersHeader {
  [((AndroidGovNistJavaxSipHeaderParametersHeader *) nil_chk(parametersHeader)) removeParameters];
  while (true) {
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistCoreNameValue *nv = [self nameValue];
    [parametersHeader setParameterWithNSString:[((AndroidGovNistCoreNameValue *) nil_chk(nv)) getName] withNSString:(NSString *) cast_chk([nv getValueAsObject], [NSString class])];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    if ([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) lookAheadWithInt:0] != ';') break;
    else [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) consumeWithInt:1];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidGovNistJavaxSipParserLexer:);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(parseWithAndroidGovNistJavaxSipHeaderParametersHeader:);
  methods[3].selector = @selector(parseNameValueListWithAndroidGovNistJavaxSipHeaderParametersHeader:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidGovNistJavaxSipParserLexer;", "LNSString;", "parse", "LAndroidGovNistJavaxSipHeaderParametersHeader;", "LJavaTextParseException;", "parseNameValueList" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipParserParametersParser = { "ParametersParser", "android.gov.nist.javax.sip.parser", ptrTable, methods, NULL, 7, 0x401, 4, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipParserParametersParser;
}

@end

void AndroidGovNistJavaxSipParserParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserParametersParser *self, AndroidGovNistJavaxSipParserLexer *lexer) {
  AndroidGovNistJavaxSipParserHeaderParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
}

void AndroidGovNistJavaxSipParserParametersParser_initWithNSString_(AndroidGovNistJavaxSipParserParametersParser *self, NSString *buffer) {
  AndroidGovNistJavaxSipParserHeaderParser_initWithNSString_(self, buffer);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipParserParametersParser)
