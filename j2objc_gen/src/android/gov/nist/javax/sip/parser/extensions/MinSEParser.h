//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/extensions/MinSEParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipParserExtensionsMinSEParser")
#ifdef RESTRICT_AndroidGovNistJavaxSipParserExtensionsMinSEParser
#define INCLUDE_ALL_AndroidGovNistJavaxSipParserExtensionsMinSEParser 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipParserExtensionsMinSEParser 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipParserExtensionsMinSEParser

#if !defined (AndroidGovNistJavaxSipParserExtensionsMinSEParser_) && (INCLUDE_ALL_AndroidGovNistJavaxSipParserExtensionsMinSEParser || defined(INCLUDE_AndroidGovNistJavaxSipParserExtensionsMinSEParser))
#define AndroidGovNistJavaxSipParserExtensionsMinSEParser_

#define RESTRICT_AndroidGovNistJavaxSipParserParametersParser 1
#define INCLUDE_AndroidGovNistJavaxSipParserParametersParser 1
#include "android/gov/nist/javax/sip/parser/ParametersParser.h"

@class AndroidGovNistJavaxSipHeaderSIPHeader;
@class AndroidGovNistJavaxSipParserLexer;
@class IOSObjectArray;

@interface AndroidGovNistJavaxSipParserExtensionsMinSEParser : AndroidGovNistJavaxSipParserParametersParser

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)text;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse;

#pragma mark Protected

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipParserExtensionsMinSEParser)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserExtensionsMinSEParser_initWithNSString_(AndroidGovNistJavaxSipParserExtensionsMinSEParser *self, NSString *text);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserExtensionsMinSEParser *new_AndroidGovNistJavaxSipParserExtensionsMinSEParser_initWithNSString_(NSString *text) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserExtensionsMinSEParser *create_AndroidGovNistJavaxSipParserExtensionsMinSEParser_initWithNSString_(NSString *text);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserExtensionsMinSEParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserExtensionsMinSEParser *self, AndroidGovNistJavaxSipParserLexer *lexer);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserExtensionsMinSEParser *new_AndroidGovNistJavaxSipParserExtensionsMinSEParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserExtensionsMinSEParser *create_AndroidGovNistJavaxSipParserExtensionsMinSEParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserExtensionsMinSEParser_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipParserExtensionsMinSEParser)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipParserExtensionsMinSEParser")
