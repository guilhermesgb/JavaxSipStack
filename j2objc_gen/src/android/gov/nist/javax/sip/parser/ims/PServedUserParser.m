//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/ims/PServedUserParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/ParserCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/ims/PServedUser.h"
#include "android/gov/nist/javax/sip/parser/AddressParametersParser.h"
#include "android/gov/nist/javax/sip/parser/Lexer.h"
#include "android/gov/nist/javax/sip/parser/TokenTypes.h"
#include "android/gov/nist/javax/sip/parser/ims/PServedUserParser.h"

@implementation AndroidGovNistJavaxSipParserImsPServedUserParser

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer {
  AndroidGovNistJavaxSipParserImsPServedUserParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
  return self;
}

- (instancetype)initWithNSString:(NSString *)servedUser {
  AndroidGovNistJavaxSipParserImsPServedUserParser_initWithNSString_(self, servedUser);
  return self;
}

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse {
  if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_enterWithNSString:@"PServedUser.parse"];
  @try {
    AndroidGovNistJavaxSipHeaderImsPServedUser *servedUser = create_AndroidGovNistJavaxSipHeaderImsPServedUser_init();
    [self headerNameWithInt:AndroidGovNistJavaxSipParserTokenTypes_P_SERVED_USER];
    [super parseWithAndroidGovNistJavaxSipHeaderAddressParametersHeader:servedUser];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:0x000a];
    return servedUser;
  }
  @finally {
    if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_leaveWithNSString:@"PServedUser.parse"];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipHeaderSIPHeader;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidGovNistJavaxSipParserLexer:);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LAndroidGovNistJavaxSipParserLexer;", "LNSString;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipParserImsPServedUserParser = { "PServedUserParser", "android.gov.nist.javax.sip.parser.ims", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipParserImsPServedUserParser;
}

@end

void AndroidGovNistJavaxSipParserImsPServedUserParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserImsPServedUserParser *self, AndroidGovNistJavaxSipParserLexer *lexer) {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
}

AndroidGovNistJavaxSipParserImsPServedUserParser *new_AndroidGovNistJavaxSipParserImsPServedUserParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserImsPServedUserParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

AndroidGovNistJavaxSipParserImsPServedUserParser *create_AndroidGovNistJavaxSipParserImsPServedUserParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserImsPServedUserParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

void AndroidGovNistJavaxSipParserImsPServedUserParser_initWithNSString_(AndroidGovNistJavaxSipParserImsPServedUserParser *self, NSString *servedUser) {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithNSString_(self, servedUser);
}

AndroidGovNistJavaxSipParserImsPServedUserParser *new_AndroidGovNistJavaxSipParserImsPServedUserParser_initWithNSString_(NSString *servedUser) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserImsPServedUserParser, initWithNSString_, servedUser)
}

AndroidGovNistJavaxSipParserImsPServedUserParser *create_AndroidGovNistJavaxSipParserImsPServedUserParser_initWithNSString_(NSString *servedUser) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserImsPServedUserParser, initWithNSString_, servedUser)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipParserImsPServedUserParser)
