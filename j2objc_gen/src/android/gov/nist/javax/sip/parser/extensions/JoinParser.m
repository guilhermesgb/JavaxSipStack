//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/extensions/JoinParser.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/ParserCore.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/extensions/Join.h"
#include "android/gov/nist/javax/sip/parser/Lexer.h"
#include "android/gov/nist/javax/sip/parser/ParametersParser.h"
#include "android/gov/nist/javax/sip/parser/TokenTypes.h"
#include "android/gov/nist/javax/sip/parser/extensions/JoinParser.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"

@implementation AndroidGovNistJavaxSipParserExtensionsJoinParser

- (instancetype)initWithNSString:(NSString *)callID {
  AndroidGovNistJavaxSipParserExtensionsJoinParser_initWithNSString_(self, callID);
  return self;
}

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer {
  AndroidGovNistJavaxSipParserExtensionsJoinParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
  return self;
}

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse {
  if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_enterWithNSString:@"parse"];
  @try {
    [self headerNameWithInt:AndroidGovNistJavaxSipParserTokenTypes_JOIN_TO];
    AndroidGovNistJavaxSipHeaderExtensionsJoin *join = create_AndroidGovNistJavaxSipHeaderExtensionsJoin_init();
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    NSString *callId = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) byteStringNoSemicolon];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [super parseWithAndroidGovNistJavaxSipHeaderParametersHeader:join];
    [join setCallIdWithNSString:callId];
    return join;
  }
  @finally {
    if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_leaveWithNSString:@"parse"];
  }
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  AndroidGovNistJavaxSipParserExtensionsJoinParser_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipHeaderSIPHeader;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithAndroidGovNistJavaxSipParserLexer:);
  methods[2].selector = @selector(parse);
  methods[3].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LAndroidGovNistJavaxSipParserLexer;", "LJavaTextParseException;", "main", "[LNSString;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipParserExtensionsJoinParser = { "JoinParser", "android.gov.nist.javax.sip.parser.extensions", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipParserExtensionsJoinParser;
}

@end

void AndroidGovNistJavaxSipParserExtensionsJoinParser_initWithNSString_(AndroidGovNistJavaxSipParserExtensionsJoinParser *self, NSString *callID) {
  AndroidGovNistJavaxSipParserParametersParser_initWithNSString_(self, callID);
}

AndroidGovNistJavaxSipParserExtensionsJoinParser *new_AndroidGovNistJavaxSipParserExtensionsJoinParser_initWithNSString_(NSString *callID) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserExtensionsJoinParser, initWithNSString_, callID)
}

AndroidGovNistJavaxSipParserExtensionsJoinParser *create_AndroidGovNistJavaxSipParserExtensionsJoinParser_initWithNSString_(NSString *callID) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserExtensionsJoinParser, initWithNSString_, callID)
}

void AndroidGovNistJavaxSipParserExtensionsJoinParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserExtensionsJoinParser *self, AndroidGovNistJavaxSipParserLexer *lexer) {
  AndroidGovNistJavaxSipParserParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
}

AndroidGovNistJavaxSipParserExtensionsJoinParser *new_AndroidGovNistJavaxSipParserExtensionsJoinParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserExtensionsJoinParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

AndroidGovNistJavaxSipParserExtensionsJoinParser *create_AndroidGovNistJavaxSipParserExtensionsJoinParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserExtensionsJoinParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

void AndroidGovNistJavaxSipParserExtensionsJoinParser_mainWithNSStringArray_(IOSObjectArray *args) {
  AndroidGovNistJavaxSipParserExtensionsJoinParser_initialize();
  IOSObjectArray *to = [IOSObjectArray arrayWithObjects:(id[]){ @"Join: 12345th5z8z\n", @"Join: 12345th5z8z;to-tag=tozght6-45;from-tag=fromzght789-337-2\n" } count:2 type:NSString_class_()];
  for (jint i = 0; i < to->size_; i++) {
    AndroidGovNistJavaxSipParserExtensionsJoinParser *tp = create_AndroidGovNistJavaxSipParserExtensionsJoinParser_initWithNSString_(IOSObjectArray_Get(to, i));
    AndroidGovNistJavaxSipHeaderExtensionsJoin *t = (AndroidGovNistJavaxSipHeaderExtensionsJoin *) cast_chk([tp parse], [AndroidGovNistJavaxSipHeaderExtensionsJoin class]);
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"Parsing => ", IOSObjectArray_Get(to, i))];
    [JreLoadStatic(JavaLangSystem, out) printWithNSString:JreStrcat("$$$", @"encoded = ", [((AndroidGovNistJavaxSipHeaderExtensionsJoin *) nil_chk(t)) encode], @"==> ")];
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$$$$$", @"callId ", [t getCallId], @" from-tag=", [t getFromTag], @" to-tag=", [t getToTag])];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipParserExtensionsJoinParser)
