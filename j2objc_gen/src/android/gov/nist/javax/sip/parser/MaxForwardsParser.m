//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/MaxForwardsParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/ParserCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sip/header/MaxForwards.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/parser/HeaderParser.h"
#include "android/gov/nist/javax/sip/parser/Lexer.h"
#include "android/gov/nist/javax/sip/parser/MaxForwardsParser.h"
#include "android/gov/nist/javax/sip/parser/TokenTypes.h"
#include "android/javax/sip/InvalidArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/NumberFormatException.h"
#include "java/text/ParseException.h"

@implementation AndroidGovNistJavaxSipParserMaxForwardsParser

- (instancetype)initWithNSString:(NSString *)contentLength {
  AndroidGovNistJavaxSipParserMaxForwardsParser_initWithNSString_(self, contentLength);
  return self;
}

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer {
  AndroidGovNistJavaxSipParserMaxForwardsParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
  return self;
}

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse {
  if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_enterWithNSString:@"MaxForwardsParser.enter"];
  @try {
    AndroidGovNistJavaxSipHeaderMaxForwards *contentLength = create_AndroidGovNistJavaxSipHeaderMaxForwards_init();
    [self headerNameWithInt:AndroidGovNistJavaxSipParserTokenTypes_MAX_FORWARDS];
    NSString *number = [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) number];
    [contentLength setMaxForwardsWithInt:JavaLangInteger_parseIntWithNSString_(number)];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:0x000a];
    return contentLength;
  }
  @catch (AndroidJavaxSipInvalidArgumentException *ex) {
    @throw [self createParseExceptionWithNSString:[((AndroidJavaxSipInvalidArgumentException *) nil_chk(ex)) getMessage]];
  }
  @catch (JavaLangNumberFormatException *ex) {
    @throw [self createParseExceptionWithNSString:[((JavaLangNumberFormatException *) nil_chk(ex)) getMessage]];
  }
  @finally {
    if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_leaveWithNSString:@"MaxForwardsParser.leave"];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipHeaderSIPHeader;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithAndroidGovNistJavaxSipParserLexer:);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LAndroidGovNistJavaxSipParserLexer;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipParserMaxForwardsParser = { "MaxForwardsParser", "android.gov.nist.javax.sip.parser", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipParserMaxForwardsParser;
}

@end

void AndroidGovNistJavaxSipParserMaxForwardsParser_initWithNSString_(AndroidGovNistJavaxSipParserMaxForwardsParser *self, NSString *contentLength) {
  AndroidGovNistJavaxSipParserHeaderParser_initWithNSString_(self, contentLength);
}

AndroidGovNistJavaxSipParserMaxForwardsParser *new_AndroidGovNistJavaxSipParserMaxForwardsParser_initWithNSString_(NSString *contentLength) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserMaxForwardsParser, initWithNSString_, contentLength)
}

AndroidGovNistJavaxSipParserMaxForwardsParser *create_AndroidGovNistJavaxSipParserMaxForwardsParser_initWithNSString_(NSString *contentLength) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserMaxForwardsParser, initWithNSString_, contentLength)
}

void AndroidGovNistJavaxSipParserMaxForwardsParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserMaxForwardsParser *self, AndroidGovNistJavaxSipParserLexer *lexer) {
  AndroidGovNistJavaxSipParserHeaderParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
}

AndroidGovNistJavaxSipParserMaxForwardsParser *new_AndroidGovNistJavaxSipParserMaxForwardsParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserMaxForwardsParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

AndroidGovNistJavaxSipParserMaxForwardsParser *create_AndroidGovNistJavaxSipParserMaxForwardsParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserMaxForwardsParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipParserMaxForwardsParser)
