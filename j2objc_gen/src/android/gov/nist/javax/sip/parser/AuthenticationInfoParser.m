//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/AuthenticationInfoParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/NameValue.h"
#include "android/gov/nist/core/ParserCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sip/header/AuthenticationInfo.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/SIPHeaderNames.h"
#include "android/gov/nist/javax/sip/parser/AuthenticationInfoParser.h"
#include "android/gov/nist/javax/sip/parser/Lexer.h"
#include "android/gov/nist/javax/sip/parser/ParametersParser.h"
#include "android/gov/nist/javax/sip/parser/TokenTypes.h"

@implementation AndroidGovNistJavaxSipParserAuthenticationInfoParser

- (instancetype)initWithNSString:(NSString *)authenticationInfo {
  AndroidGovNistJavaxSipParserAuthenticationInfoParser_initWithNSString_(self, authenticationInfo);
  return self;
}

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer {
  AndroidGovNistJavaxSipParserAuthenticationInfoParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
  return self;
}

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse {
  if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_enterWithNSString:@"AuthenticationInfoParser.parse"];
  @try {
    [self headerNameWithInt:AndroidGovNistJavaxSipParserTokenTypes_AUTHENTICATION_INFO];
    AndroidGovNistJavaxSipHeaderAuthenticationInfo *authenticationInfo = create_AndroidGovNistJavaxSipHeaderAuthenticationInfo_init();
    [authenticationInfo setHeaderNameWithNSString:AndroidGovNistJavaxSipHeaderSIPHeaderNames_AUTHENTICATION_INFO];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistCoreNameValue *nv = [super nameValue];
    if ([@"" isEqual:[((AndroidGovNistCoreNameValue *) nil_chk(nv)) getValue]] && ![nv isValueQuoted]) {
      [authenticationInfo setSchemeWithNSString:[nv getKey]];
      nv = [super nameValue];
    }
    [authenticationInfo setParameterWithAndroidGovNistCoreNameValue:nv];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    while ([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) lookAheadWithInt:0] == ',') {
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:','];
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
      nv = [super nameValue];
      [authenticationInfo setParameterWithAndroidGovNistCoreNameValue:nv];
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    }
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:0x000a];
    return authenticationInfo;
  }
  @finally {
    if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_leaveWithNSString:@"AuthenticationInfoParser.parse"];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipHeaderSIPHeader;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithAndroidGovNistJavaxSipParserLexer:);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LAndroidGovNistJavaxSipParserLexer;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipParserAuthenticationInfoParser = { "AuthenticationInfoParser", "android.gov.nist.javax.sip.parser", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipParserAuthenticationInfoParser;
}

@end

void AndroidGovNistJavaxSipParserAuthenticationInfoParser_initWithNSString_(AndroidGovNistJavaxSipParserAuthenticationInfoParser *self, NSString *authenticationInfo) {
  AndroidGovNistJavaxSipParserParametersParser_initWithNSString_(self, authenticationInfo);
}

AndroidGovNistJavaxSipParserAuthenticationInfoParser *new_AndroidGovNistJavaxSipParserAuthenticationInfoParser_initWithNSString_(NSString *authenticationInfo) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserAuthenticationInfoParser, initWithNSString_, authenticationInfo)
}

AndroidGovNistJavaxSipParserAuthenticationInfoParser *create_AndroidGovNistJavaxSipParserAuthenticationInfoParser_initWithNSString_(NSString *authenticationInfo) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserAuthenticationInfoParser, initWithNSString_, authenticationInfo)
}

void AndroidGovNistJavaxSipParserAuthenticationInfoParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserAuthenticationInfoParser *self, AndroidGovNistJavaxSipParserLexer *lexer) {
  AndroidGovNistJavaxSipParserParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
}

AndroidGovNistJavaxSipParserAuthenticationInfoParser *new_AndroidGovNistJavaxSipParserAuthenticationInfoParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserAuthenticationInfoParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

AndroidGovNistJavaxSipParserAuthenticationInfoParser *create_AndroidGovNistJavaxSipParserAuthenticationInfoParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserAuthenticationInfoParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipParserAuthenticationInfoParser)
