//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/ims/PChargingVectorParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistJavaxSipParserImsPChargingVectorParser")
#ifdef RESTRICT_AndroidGovNistJavaxSipParserImsPChargingVectorParser
#define INCLUDE_ALL_AndroidGovNistJavaxSipParserImsPChargingVectorParser 0
#else
#define INCLUDE_ALL_AndroidGovNistJavaxSipParserImsPChargingVectorParser 1
#endif
#undef RESTRICT_AndroidGovNistJavaxSipParserImsPChargingVectorParser

#if !defined (AndroidGovNistJavaxSipParserImsPChargingVectorParser_) && (INCLUDE_ALL_AndroidGovNistJavaxSipParserImsPChargingVectorParser || defined(INCLUDE_AndroidGovNistJavaxSipParserImsPChargingVectorParser))
#define AndroidGovNistJavaxSipParserImsPChargingVectorParser_

#define RESTRICT_AndroidGovNistJavaxSipParserParametersParser 1
#define INCLUDE_AndroidGovNistJavaxSipParserParametersParser 1
#include "android/gov/nist/javax/sip/parser/ParametersParser.h"

#define RESTRICT_AndroidGovNistJavaxSipParserTokenTypes 1
#define INCLUDE_AndroidGovNistJavaxSipParserTokenTypes 1
#include "android/gov/nist/javax/sip/parser/TokenTypes.h"

@class AndroidGovNistJavaxSipHeaderImsPChargingVector;
@class AndroidGovNistJavaxSipHeaderSIPHeader;
@class AndroidGovNistJavaxSipParserLexer;

@interface AndroidGovNistJavaxSipParserImsPChargingVectorParser : AndroidGovNistJavaxSipParserParametersParser < AndroidGovNistJavaxSipParserTokenTypes >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)chargingVector;

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse;

#pragma mark Protected

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer;

- (void)parseParameterWithAndroidGovNistJavaxSipHeaderImsPChargingVector:(AndroidGovNistJavaxSipHeaderImsPChargingVector *)chargingVector;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistJavaxSipParserImsPChargingVectorParser)

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserImsPChargingVectorParser_initWithNSString_(AndroidGovNistJavaxSipParserImsPChargingVectorParser *self, NSString *chargingVector);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserImsPChargingVectorParser *new_AndroidGovNistJavaxSipParserImsPChargingVectorParser_initWithNSString_(NSString *chargingVector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserImsPChargingVectorParser *create_AndroidGovNistJavaxSipParserImsPChargingVectorParser_initWithNSString_(NSString *chargingVector);

FOUNDATION_EXPORT void AndroidGovNistJavaxSipParserImsPChargingVectorParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserImsPChargingVectorParser *self, AndroidGovNistJavaxSipParserLexer *lexer);

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserImsPChargingVectorParser *new_AndroidGovNistJavaxSipParserImsPChargingVectorParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistJavaxSipParserImsPChargingVectorParser *create_AndroidGovNistJavaxSipParserImsPChargingVectorParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistJavaxSipParserImsPChargingVectorParser)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistJavaxSipParserImsPChargingVectorParser")
