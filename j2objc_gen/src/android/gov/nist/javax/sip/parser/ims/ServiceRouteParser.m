//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/parser/ims/ServiceRouteParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/ParserCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sip/header/SIPHeader.h"
#include "android/gov/nist/javax/sip/header/ims/ServiceRoute.h"
#include "android/gov/nist/javax/sip/header/ims/ServiceRouteList.h"
#include "android/gov/nist/javax/sip/parser/AddressParametersParser.h"
#include "android/gov/nist/javax/sip/parser/Lexer.h"
#include "android/gov/nist/javax/sip/parser/TokenTypes.h"
#include "android/gov/nist/javax/sip/parser/ims/ServiceRouteParser.h"
#include "java/text/ParseException.h"

@implementation AndroidGovNistJavaxSipParserImsServiceRouteParser

- (instancetype)initWithNSString:(NSString *)serviceRoute {
  AndroidGovNistJavaxSipParserImsServiceRouteParser_initWithNSString_(self, serviceRoute);
  return self;
}

- (instancetype)initWithAndroidGovNistJavaxSipParserLexer:(AndroidGovNistJavaxSipParserLexer *)lexer {
  AndroidGovNistJavaxSipParserImsServiceRouteParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
  return self;
}

- (AndroidGovNistJavaxSipHeaderSIPHeader *)parse {
  AndroidGovNistJavaxSipHeaderImsServiceRouteList *serviceRouteList = create_AndroidGovNistJavaxSipHeaderImsServiceRouteList_init();
  if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_enterWithNSString:@"ServiceRouteParser.parse"];
  @try {
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:AndroidGovNistJavaxSipParserTokenTypes_SERVICE_ROUTE];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:':'];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    while (true) {
      AndroidGovNistJavaxSipHeaderImsServiceRoute *serviceRoute = create_AndroidGovNistJavaxSipHeaderImsServiceRoute_init();
      [super parseWithAndroidGovNistJavaxSipHeaderAddressParametersHeader:serviceRoute];
      [serviceRouteList addWithId:serviceRoute];
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
      if ([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) lookAheadWithInt:0] == ',') {
        [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:','];
        [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
      }
      else if ([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) lookAheadWithInt:0] == 0x000a) break;
      else @throw [self createParseExceptionWithNSString:@"unexpected char"];
    }
    return serviceRouteList;
  }
  @finally {
    if (JreLoadStatic(AndroidGovNistCoreParserCore, debug)) [self dbg_leaveWithNSString:@"ServiceRouteParser.parse"];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipHeaderSIPHeader;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithAndroidGovNistJavaxSipParserLexer:);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LAndroidGovNistJavaxSipParserLexer;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipParserImsServiceRouteParser = { "ServiceRouteParser", "android.gov.nist.javax.sip.parser.ims", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipParserImsServiceRouteParser;
}

@end

void AndroidGovNistJavaxSipParserImsServiceRouteParser_initWithNSString_(AndroidGovNistJavaxSipParserImsServiceRouteParser *self, NSString *serviceRoute) {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithNSString_(self, serviceRoute);
}

AndroidGovNistJavaxSipParserImsServiceRouteParser *new_AndroidGovNistJavaxSipParserImsServiceRouteParser_initWithNSString_(NSString *serviceRoute) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserImsServiceRouteParser, initWithNSString_, serviceRoute)
}

AndroidGovNistJavaxSipParserImsServiceRouteParser *create_AndroidGovNistJavaxSipParserImsServiceRouteParser_initWithNSString_(NSString *serviceRoute) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserImsServiceRouteParser, initWithNSString_, serviceRoute)
}

void AndroidGovNistJavaxSipParserImsServiceRouteParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserImsServiceRouteParser *self, AndroidGovNistJavaxSipParserLexer *lexer) {
  AndroidGovNistJavaxSipParserAddressParametersParser_initWithAndroidGovNistJavaxSipParserLexer_(self, lexer);
}

AndroidGovNistJavaxSipParserImsServiceRouteParser *new_AndroidGovNistJavaxSipParserImsServiceRouteParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipParserImsServiceRouteParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

AndroidGovNistJavaxSipParserImsServiceRouteParser *create_AndroidGovNistJavaxSipParserImsServiceRouteParser_initWithAndroidGovNistJavaxSipParserLexer_(AndroidGovNistJavaxSipParserLexer *lexer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipParserImsServiceRouteParser, initWithAndroidGovNistJavaxSipParserLexer_, lexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipParserImsServiceRouteParser)
