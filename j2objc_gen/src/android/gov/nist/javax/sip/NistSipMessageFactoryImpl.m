//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sip/NistSipMessageFactoryImpl.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sip/DialogFilter.h"
#include "android/gov/nist/javax/sip/ListeningPointImpl.h"
#include "android/gov/nist/javax/sip/NistSipMessageFactoryImpl.h"
#include "android/gov/nist/javax/sip/message/SIPRequest.h"
#include "android/gov/nist/javax/sip/message/SIPResponse.h"
#include "android/gov/nist/javax/sip/stack/MessageChannel.h"
#include "android/gov/nist/javax/sip/stack/MessageProcessor.h"
#include "android/gov/nist/javax/sip/stack/SIPTransaction.h"
#include "android/gov/nist/javax/sip/stack/SIPTransactionStack.h"
#include "android/gov/nist/javax/sip/stack/ServerRequestInterface.h"
#include "android/gov/nist/javax/sip/stack/ServerResponseInterface.h"
#include "android/javax/sip/TransactionState.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/slf4j/Logger.h"
#include "org/slf4j/LoggerFactory.h"

@interface AndroidGovNistJavaxSipNistSipMessageFactoryImpl () {
 @public
  AndroidGovNistJavaxSipStackSIPTransactionStack *sipStack_;
}

@end

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSipNistSipMessageFactoryImpl, sipStack_, AndroidGovNistJavaxSipStackSIPTransactionStack *)

inline id<OrgSlf4jLogger> AndroidGovNistJavaxSipNistSipMessageFactoryImpl_get_logger();
inline id<OrgSlf4jLogger> AndroidGovNistJavaxSipNistSipMessageFactoryImpl_set_logger(id<OrgSlf4jLogger> value);
static id<OrgSlf4jLogger> AndroidGovNistJavaxSipNistSipMessageFactoryImpl_logger;
J2OBJC_STATIC_FIELD_OBJ(AndroidGovNistJavaxSipNistSipMessageFactoryImpl, logger, id<OrgSlf4jLogger>)

J2OBJC_INITIALIZED_DEFN(AndroidGovNistJavaxSipNistSipMessageFactoryImpl)

@implementation AndroidGovNistJavaxSipNistSipMessageFactoryImpl

- (id<AndroidGovNistJavaxSipStackServerRequestInterface>)newSIPServerRequestWithAndroidGovNistJavaxSipMessageSIPRequest:(AndroidGovNistJavaxSipMessageSIPRequest *)sipRequest
                                                                          withAndroidGovNistJavaxSipStackSIPTransaction:(id<AndroidGovNistJavaxSipStackSIPTransaction>)sipTransaction {
  if (sipTransaction == nil || sipRequest == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Null Arg!");
  }
  AndroidGovNistJavaxSipStackSIPTransactionStack *theStack = [sipTransaction getSIPStack];
  AndroidGovNistJavaxSipDialogFilter *retval = create_AndroidGovNistJavaxSipDialogFilter_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(theStack);
  JreStrongAssign(&retval->transactionChannel_, sipTransaction);
  JreStrongAssign(&retval->listeningPoint_, [((AndroidGovNistJavaxSipStackMessageProcessor *) nil_chk([sipTransaction getMessageProcessor])) getListeningPoint]);
  if (retval->listeningPoint_ == nil) return nil;
  [((id<OrgSlf4jLogger>) nil_chk(AndroidGovNistJavaxSipNistSipMessageFactoryImpl_logger)) debugWithNSString:JreStrcat("$$C@$@", @"Returning request interface for ", [sipRequest getFirstLine], ' ', retval, @" sipTransaction = ", sipTransaction)];
  return retval;
}

- (id<AndroidGovNistJavaxSipStackServerResponseInterface>)newSIPServerResponseWithAndroidGovNistJavaxSipMessageSIPResponse:(AndroidGovNistJavaxSipMessageSIPResponse *)sipResponse
                                                                             withAndroidGovNistJavaxSipStackMessageChannel:(AndroidGovNistJavaxSipStackMessageChannel *)msgChannel {
  id<AndroidGovNistJavaxSipStackSIPTransaction> tr = [((AndroidGovNistJavaxSipStackSIPTransactionStack *) nil_chk(sipStack_)) findTransactionWithAndroidGovNistJavaxSipMessageSIPMessage:sipResponse withBoolean:false];
  [((id<OrgSlf4jLogger>) nil_chk(AndroidGovNistJavaxSipNistSipMessageFactoryImpl_logger)) debugWithNSString:JreStrcat("$@$@", @"Found Transaction ", tr, @" for ", sipResponse)];
  if (tr != nil) {
    if ([tr getInternalState] < 0) {
      [((id<OrgSlf4jLogger>) nil_chk(AndroidGovNistJavaxSipNistSipMessageFactoryImpl_logger)) debugWithNSString:@"Dropping response - null transaction state"];
      return nil;
    }
    else if (AndroidJavaxSipTransactionState__COMPLETED == [tr getInternalState] && [((AndroidGovNistJavaxSipMessageSIPResponse *) nil_chk(sipResponse)) getStatusCode] / 100 == 1) {
      [((id<OrgSlf4jLogger>) nil_chk(AndroidGovNistJavaxSipNistSipMessageFactoryImpl_logger)) debugWithNSString:JreStrcat("$I", @"Dropping response - late arriving ", [((AndroidGovNistJavaxSipMessageSIPResponse *) nil_chk(sipResponse)) getStatusCode])];
      return nil;
    }
  }
  AndroidGovNistJavaxSipDialogFilter *retval = create_AndroidGovNistJavaxSipDialogFilter_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(sipStack_);
  JreStrongAssign(&retval->transactionChannel_, tr);
  JreStrongAssign(&retval->listeningPoint_, [((AndroidGovNistJavaxSipStackMessageProcessor *) nil_chk([((AndroidGovNistJavaxSipStackMessageChannel *) nil_chk(msgChannel)) getMessageProcessor])) getListeningPoint]);
  return retval;
}

- (instancetype)initWithAndroidGovNistJavaxSipStackSIPTransactionStack:(AndroidGovNistJavaxSipStackSIPTransactionStack *)sipStackImpl {
  AndroidGovNistJavaxSipNistSipMessageFactoryImpl_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(self, sipStackImpl);
  return self;
}

- (void)dealloc {
  RELEASE_(sipStack_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LAndroidGovNistJavaxSipStackServerRequestInterface;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSipStackServerResponseInterface;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newSIPServerRequestWithAndroidGovNistJavaxSipMessageSIPRequest:withAndroidGovNistJavaxSipStackSIPTransaction:);
  methods[1].selector = @selector(newSIPServerResponseWithAndroidGovNistJavaxSipMessageSIPResponse:withAndroidGovNistJavaxSipStackMessageChannel:);
  methods[2].selector = @selector(initWithAndroidGovNistJavaxSipStackSIPTransactionStack:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "LOrgSlf4jLogger;", .constantValue.asLong = 0, 0xa, -1, 5, -1, -1 },
    { "sipStack_", "LAndroidGovNistJavaxSipStackSIPTransactionStack;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "newSIPServerRequest", "LAndroidGovNistJavaxSipMessageSIPRequest;LAndroidGovNistJavaxSipStackSIPTransaction;", "newSIPServerResponse", "LAndroidGovNistJavaxSipMessageSIPResponse;LAndroidGovNistJavaxSipStackMessageChannel;", "LAndroidGovNistJavaxSipStackSIPTransactionStack;", &AndroidGovNistJavaxSipNistSipMessageFactoryImpl_logger };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSipNistSipMessageFactoryImpl = { "NistSipMessageFactoryImpl", "android.gov.nist.javax.sip", ptrTable, methods, fields, 7, 0x0, 3, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSipNistSipMessageFactoryImpl;
}

+ (void)initialize {
  if (self == [AndroidGovNistJavaxSipNistSipMessageFactoryImpl class]) {
    JreStrongAssign(&AndroidGovNistJavaxSipNistSipMessageFactoryImpl_logger, OrgSlf4jLoggerFactory_getLoggerWithIOSClass_(AndroidGovNistJavaxSipNistSipMessageFactoryImpl_class_()));
    J2OBJC_SET_INITIALIZED(AndroidGovNistJavaxSipNistSipMessageFactoryImpl)
  }
}

@end

void AndroidGovNistJavaxSipNistSipMessageFactoryImpl_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(AndroidGovNistJavaxSipNistSipMessageFactoryImpl *self, AndroidGovNistJavaxSipStackSIPTransactionStack *sipStackImpl) {
  NSObject_init(self);
  JreStrongAssign(&self->sipStack_, sipStackImpl);
}

AndroidGovNistJavaxSipNistSipMessageFactoryImpl *new_AndroidGovNistJavaxSipNistSipMessageFactoryImpl_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStackImpl) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSipNistSipMessageFactoryImpl, initWithAndroidGovNistJavaxSipStackSIPTransactionStack_, sipStackImpl)
}

AndroidGovNistJavaxSipNistSipMessageFactoryImpl *create_AndroidGovNistJavaxSipNistSipMessageFactoryImpl_initWithAndroidGovNistJavaxSipStackSIPTransactionStack_(AndroidGovNistJavaxSipStackSIPTransactionStack *sipStackImpl) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSipNistSipMessageFactoryImpl, initWithAndroidGovNistJavaxSipStackSIPTransactionStack_, sipStackImpl)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSipNistSipMessageFactoryImpl)
