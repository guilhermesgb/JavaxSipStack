//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/parser/KeyFieldParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/NameValue.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sdp/fields/KeyField.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/parser/KeyFieldParser.h"
#include "android/gov/nist/javax/sdp/parser/Lexer.h"
#include "android/gov/nist/javax/sdp/parser/SDPParser.h"
#include "java/lang/Exception.h"
#include "java/text/ParseException.h"

@implementation AndroidGovNistJavaxSdpParserKeyFieldParser

- (instancetype)initWithNSString:(NSString *)keyField {
  AndroidGovNistJavaxSdpParserKeyFieldParser_initWithNSString_(self, keyField);
  return self;
}

- (AndroidGovNistJavaxSdpFieldsKeyField *)keyField {
  @try {
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'k'];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'='];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistJavaxSdpFieldsKeyField *keyField = create_AndroidGovNistJavaxSdpFieldsKeyField_init();
    AndroidGovNistCoreNameValue *nameValue = create_AndroidGovNistCoreNameValue_init();
    jint ptr = [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) markInputPosition];
    @try {
      NSString *name = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextTokenWithChar:':'];
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) consumeWithInt:1];
      NSString *value = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getRest];
      nameValue = create_AndroidGovNistCoreNameValue_initWithNSString_withId_([((NSString *) nil_chk(name)) java_trim], [((NSString *) nil_chk(value)) java_trim]);
    }
    @catch (JavaTextParseException *ex) {
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) rewindInputPositionWithInt:ptr];
      NSString *rest = [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) getRest];
      if (rest == nil) @throw create_JavaTextParseException_initWithNSString_withInt_([((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) getBuffer], [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) getPtr]);
      nameValue = create_AndroidGovNistCoreNameValue_initWithNSString_withId_([rest java_trim], nil);
    }
    [keyField setTypeWithNSString:[nameValue getName]];
    [keyField setKeyDataWithNSString:(NSString *) cast_chk([nameValue getValueAsObject], [NSString class])];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    return keyField;
  }
  @catch (JavaLangException *e) {
    @throw create_JavaTextParseException_initWithNSString_withInt_([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getBuffer], [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getPtr]);
  }
}

- (AndroidGovNistJavaxSdpFieldsSDPField *)parse {
  return [self keyField];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsKeyField;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsSDPField;", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(keyField);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpParserKeyFieldParser = { "KeyFieldParser", "android.gov.nist.javax.sdp.parser", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpParserKeyFieldParser;
}

@end

void AndroidGovNistJavaxSdpParserKeyFieldParser_initWithNSString_(AndroidGovNistJavaxSdpParserKeyFieldParser *self, NSString *keyField) {
  AndroidGovNistJavaxSdpParserSDPParser_init(self);
  JreStrongAssignAndConsume(&self->lexer_, new_AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(@"charLexer", keyField));
}

AndroidGovNistJavaxSdpParserKeyFieldParser *new_AndroidGovNistJavaxSdpParserKeyFieldParser_initWithNSString_(NSString *keyField) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpParserKeyFieldParser, initWithNSString_, keyField)
}

AndroidGovNistJavaxSdpParserKeyFieldParser *create_AndroidGovNistJavaxSdpParserKeyFieldParser_initWithNSString_(NSString *keyField) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpParserKeyFieldParser, initWithNSString_, keyField)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpParserKeyFieldParser)
