//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/parser/ConnectionFieldParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/Host.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sdp/fields/ConnectionAddress.h"
#include "android/gov/nist/javax/sdp/fields/ConnectionField.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/parser/ConnectionFieldParser.h"
#include "android/gov/nist/javax/sdp/parser/Lexer.h"
#include "android/gov/nist/javax/sdp/parser/SDPParser.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/text/ParseException.h"

@implementation AndroidGovNistJavaxSdpParserConnectionFieldParser

- (instancetype)initWithNSString:(NSString *)connectionField {
  AndroidGovNistJavaxSdpParserConnectionFieldParser_initWithNSString_(self, connectionField);
  return self;
}

- (AndroidGovNistJavaxSdpFieldsConnectionAddress *)connectionAddressWithNSString:(NSString *)address {
  AndroidGovNistJavaxSdpFieldsConnectionAddress *connectionAddress = create_AndroidGovNistJavaxSdpFieldsConnectionAddress_init();
  jint begin = [((NSString *) nil_chk(address)) java_indexOfString:@"/"];
  if (begin != -1) {
    [connectionAddress setAddressWithAndroidGovNistCoreHost:create_AndroidGovNistCoreHost_initWithNSString_([address java_substring:0 endIndex:begin])];
    jint middle = [address java_indexOfString:@"/" fromIndex:begin + 1];
    if (middle != -1) {
      NSString *ttl = [address java_substring:begin + 1 endIndex:middle];
      [connectionAddress setTtlWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(ttl)) java_trim])];
      NSString *addressNumber = [address java_substring:middle + 1];
      [connectionAddress setPortWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(addressNumber)) java_trim])];
    }
    else {
      NSString *ttl = [address java_substring:begin + 1];
      [connectionAddress setTtlWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(ttl)) java_trim])];
    }
  }
  else [connectionAddress setAddressWithAndroidGovNistCoreHost:create_AndroidGovNistCoreHost_initWithNSString_(address)];
  return connectionAddress;
}

- (AndroidGovNistJavaxSdpFieldsConnectionField *)connectionField {
  @try {
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'c'];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'='];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistJavaxSdpFieldsConnectionField *connectionField = create_AndroidGovNistJavaxSdpFieldsConnectionField_init();
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistCoreToken *token = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    [connectionField setNettypeWithNSString:[((AndroidGovNistCoreToken *) nil_chk(token)) getTokenValue]];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    token = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    [connectionField setAddressTypeWithNSString:[((AndroidGovNistCoreToken *) nil_chk(token)) getTokenValue]];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    NSString *rest = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getRest];
    AndroidGovNistJavaxSdpFieldsConnectionAddress *connectionAddress = [self connectionAddressWithNSString:[((NSString *) nil_chk(rest)) java_trim]];
    [connectionField setAddressWithAndroidGovNistJavaxSdpFieldsConnectionAddress:connectionAddress];
    return connectionField;
  }
  @catch (JavaLangException *e) {
    @throw create_JavaTextParseException_initWithNSString_withInt_([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getBuffer], [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getPtr]);
  }
}

- (AndroidGovNistJavaxSdpFieldsSDPField *)parse {
  return [self connectionField];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsConnectionAddress;", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsConnectionField;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsSDPField;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(connectionAddressWithNSString:);
  methods[2].selector = @selector(connectionField);
  methods[3].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "connectionAddress", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpParserConnectionFieldParser = { "ConnectionFieldParser", "android.gov.nist.javax.sdp.parser", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpParserConnectionFieldParser;
}

@end

void AndroidGovNistJavaxSdpParserConnectionFieldParser_initWithNSString_(AndroidGovNistJavaxSdpParserConnectionFieldParser *self, NSString *connectionField) {
  AndroidGovNistJavaxSdpParserSDPParser_init(self);
  JreStrongAssignAndConsume(&self->lexer_, new_AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(@"charLexer", connectionField));
}

AndroidGovNistJavaxSdpParserConnectionFieldParser *new_AndroidGovNistJavaxSdpParserConnectionFieldParser_initWithNSString_(NSString *connectionField) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpParserConnectionFieldParser, initWithNSString_, connectionField)
}

AndroidGovNistJavaxSdpParserConnectionFieldParser *create_AndroidGovNistJavaxSdpParserConnectionFieldParser_initWithNSString_(NSString *connectionField) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpParserConnectionFieldParser, initWithNSString_, connectionField)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpParserConnectionFieldParser)
