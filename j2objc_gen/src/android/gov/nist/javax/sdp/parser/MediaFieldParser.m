//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/parser/MediaFieldParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/Debug.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sdp/fields/MediaField.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/parser/Lexer.h"
#include "android/gov/nist/javax/sdp/parser/MediaFieldParser.h"
#include "android/gov/nist/javax/sdp/parser/SDPParser.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/text/ParseException.h"
#include "java/util/Vector.h"

@implementation AndroidGovNistJavaxSdpParserMediaFieldParser

- (instancetype)initWithNSString:(NSString *)mediaField {
  AndroidGovNistJavaxSdpParserMediaFieldParser_initWithNSString_(self, mediaField);
  return self;
}

- (AndroidGovNistJavaxSdpFieldsMediaField *)mediaField {
  if (JreLoadStatic(AndroidGovNistCoreDebug, parserDebug)) [self dbg_enterWithNSString:@"mediaField"];
  @try {
    AndroidGovNistJavaxSdpFieldsMediaField *mediaField = create_AndroidGovNistJavaxSdpFieldsMediaField_init();
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:'m'];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:'='];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
    AndroidGovNistCoreToken *media = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    [mediaField setMediaWithNSString:[((AndroidGovNistCoreToken *) nil_chk(media)) getTokenValue]];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
    AndroidGovNistCoreToken *port = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    [mediaField setPortWithInt:JavaLangInteger_parseIntWithNSString_([((AndroidGovNistCoreToken *) nil_chk(port)) getTokenValue])];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    if ([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) hasMoreChars] && [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) lookAheadWithInt:1] == 0x000a) return mediaField;
    if ([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) lookAheadWithInt:0] == '/') {
      [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) consumeWithInt:1];
      [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
      AndroidGovNistCoreToken *portsNumber = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
      [mediaField setNportsWithInt:JavaLangInteger_parseIntWithNSString_([((AndroidGovNistCoreToken *) nil_chk(portsNumber)) getTokenValue])];
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    }
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
    AndroidGovNistCoreToken *token = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    NSString *transport = [((AndroidGovNistCoreToken *) nil_chk(token)) getTokenValue];
    while ([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) lookAheadWithInt:0] == '/') {
      [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) consumeWithInt:1];
      [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
      AndroidGovNistCoreToken *transportTemp = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
      transport = JreStrcat("$C$", transport, '/', [((AndroidGovNistCoreToken *) nil_chk(transportTemp)) getTokenValue]);
    }
    [mediaField setProtoWithNSString:transport];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    JavaUtilVector *formatList = create_JavaUtilVector_init();
    while ([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) hasMoreChars]) {
      jchar la = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) lookAheadWithInt:0];
      if (la == 0x000a || la == 0x000d) break;
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
      [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
      AndroidGovNistCoreToken *tok = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
      NSString *format = [((NSString *) nil_chk([((AndroidGovNistCoreToken *) nil_chk(tok)) getTokenValue])) java_trim];
      if (![((NSString *) nil_chk(format)) isEqual:@""]) [formatList addWithId:format];
    }
    [mediaField setFormatsWithJavaUtilVector:formatList];
    return mediaField;
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    @throw create_JavaTextParseException_initWithNSString_withInt_([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getBuffer], [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getPtr]);
  }
  @finally {
    [self dbg_leaveWithNSString:@"mediaField"];
  }
}

- (AndroidGovNistJavaxSdpFieldsSDPField *)parse {
  return [self mediaField];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsMediaField;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsSDPField;", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(mediaField);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpParserMediaFieldParser = { "MediaFieldParser", "android.gov.nist.javax.sdp.parser", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpParserMediaFieldParser;
}

@end

void AndroidGovNistJavaxSdpParserMediaFieldParser_initWithNSString_(AndroidGovNistJavaxSdpParserMediaFieldParser *self, NSString *mediaField) {
  AndroidGovNistJavaxSdpParserSDPParser_init(self);
  JreStrongAssignAndConsume(&self->lexer_, new_AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(@"charLexer", mediaField));
}

AndroidGovNistJavaxSdpParserMediaFieldParser *new_AndroidGovNistJavaxSdpParserMediaFieldParser_initWithNSString_(NSString *mediaField) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpParserMediaFieldParser, initWithNSString_, mediaField)
}

AndroidGovNistJavaxSdpParserMediaFieldParser *create_AndroidGovNistJavaxSdpParserMediaFieldParser_initWithNSString_(NSString *mediaField) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpParserMediaFieldParser, initWithNSString_, mediaField)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpParserMediaFieldParser)
