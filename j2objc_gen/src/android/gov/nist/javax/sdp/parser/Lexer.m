//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/parser/Lexer.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/Separators.h"
#include "android/gov/nist/javax/sdp/parser/Lexer.h"

@implementation AndroidGovNistJavaxSdpParserLexer

- (instancetype)initWithNSString:(NSString *)lexerName
                    withNSString:(NSString *)buffer {
  AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(self, lexerName, buffer);
  return self;
}

- (void)selectLexerWithNSString:(NSString *)lexerName {
}

+ (NSString *)getFieldNameWithNSString:(NSString *)line {
  return AndroidGovNistJavaxSdpParserLexer_getFieldNameWithNSString_(line);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(selectLexerWithNSString:);
  methods[2].selector = @selector(getFieldNameWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;LNSString;", "selectLexer", "LNSString;", "getFieldName" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpParserLexer = { "Lexer", "android.gov.nist.javax.sdp.parser", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpParserLexer;
}

@end

void AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(AndroidGovNistJavaxSdpParserLexer *self, NSString *lexerName, NSString *buffer) {
  AndroidGovNistCoreLexerCore_initWithNSString_withNSString_(self, lexerName, buffer);
}

AndroidGovNistJavaxSdpParserLexer *new_AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(NSString *lexerName, NSString *buffer) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpParserLexer, initWithNSString_withNSString_, lexerName, buffer)
}

AndroidGovNistJavaxSdpParserLexer *create_AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(NSString *lexerName, NSString *buffer) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpParserLexer, initWithNSString_withNSString_, lexerName, buffer)
}

NSString *AndroidGovNistJavaxSdpParserLexer_getFieldNameWithNSString_(NSString *line) {
  AndroidGovNistJavaxSdpParserLexer_initialize();
  jint i = [((NSString *) nil_chk(line)) java_indexOfString:AndroidGovNistCoreSeparators_EQUALS];
  if (i == -1) return nil;
  else return [line java_substring:0 endIndex:i];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpParserLexer)
