//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/parser/TimeFieldParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/fields/TimeField.h"
#include "android/gov/nist/javax/sdp/fields/TypedTime.h"
#include "android/gov/nist/javax/sdp/parser/Lexer.h"
#include "android/gov/nist/javax/sdp/parser/SDPParser.h"
#include "android/gov/nist/javax/sdp/parser/TimeFieldParser.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NumberFormatException.h"
#include "java/text/ParseException.h"

@interface AndroidGovNistJavaxSdpParserTimeFieldParser ()

- (jlong)getTime;

@end

__attribute__((unused)) static jlong AndroidGovNistJavaxSdpParserTimeFieldParser_getTime(AndroidGovNistJavaxSdpParserTimeFieldParser *self);

@implementation AndroidGovNistJavaxSdpParserTimeFieldParser

- (instancetype)initWithNSString:(NSString *)timeField {
  AndroidGovNistJavaxSdpParserTimeFieldParser_initWithNSString_(self, timeField);
  return self;
}

- (AndroidGovNistJavaxSdpFieldsTypedTime *)getTypedTimeWithNSString:(NSString *)tokenValue {
  AndroidGovNistJavaxSdpFieldsTypedTime *typedTime = create_AndroidGovNistJavaxSdpFieldsTypedTime_init();
  if ([((NSString *) nil_chk(tokenValue)) hasSuffix:@"d"]) {
    [typedTime setUnitWithNSString:@"d"];
    NSString *t = [tokenValue java_replace:'d' withChar:' '];
    [typedTime setTimeWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(t)) java_trim])];
  }
  else if ([tokenValue hasSuffix:@"h"]) {
    [typedTime setUnitWithNSString:@"h"];
    NSString *t = [tokenValue java_replace:'h' withChar:' '];
    [typedTime setTimeWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(t)) java_trim])];
  }
  else if ([tokenValue hasSuffix:@"m"]) {
    [typedTime setUnitWithNSString:@"m"];
    NSString *t = [tokenValue java_replace:'m' withChar:' '];
    [typedTime setTimeWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(t)) java_trim])];
  }
  else {
    [typedTime setUnitWithNSString:@"s"];
    if ([tokenValue hasSuffix:@"s"]) {
      NSString *t = [tokenValue java_replace:'s' withChar:' '];
      [typedTime setTimeWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(t)) java_trim])];
    }
    else [typedTime setTimeWithInt:JavaLangInteger_parseIntWithNSString_([tokenValue java_trim])];
  }
  return typedTime;
}

- (jlong)getTime {
  return AndroidGovNistJavaxSdpParserTimeFieldParser_getTime(self);
}

- (AndroidGovNistJavaxSdpFieldsTimeField *)timeField {
  @try {
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'t'];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'='];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistJavaxSdpFieldsTimeField *timeField = create_AndroidGovNistJavaxSdpFieldsTimeField_init();
    jlong st = AndroidGovNistJavaxSdpParserTimeFieldParser_getTime(self);
    [timeField setStartTimeWithLong:st];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    st = AndroidGovNistJavaxSdpParserTimeFieldParser_getTime(self);
    [timeField setStopTimeWithLong:st];
    return timeField;
  }
  @catch (JavaLangException *e) {
    @throw [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) createParseException];
  }
}

- (AndroidGovNistJavaxSdpFieldsSDPField *)parse {
  return [self timeField];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsTypedTime;", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x2, -1, -1, 2, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsTimeField;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsSDPField;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getTypedTimeWithNSString:);
  methods[2].selector = @selector(getTime);
  methods[3].selector = @selector(timeField);
  methods[4].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "getTypedTime", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpParserTimeFieldParser = { "TimeFieldParser", "android.gov.nist.javax.sdp.parser", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpParserTimeFieldParser;
}

@end

void AndroidGovNistJavaxSdpParserTimeFieldParser_initWithNSString_(AndroidGovNistJavaxSdpParserTimeFieldParser *self, NSString *timeField) {
  AndroidGovNistJavaxSdpParserSDPParser_init(self);
  JreStrongAssignAndConsume(&self->lexer_, new_AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(@"charLexer", timeField));
}

AndroidGovNistJavaxSdpParserTimeFieldParser *new_AndroidGovNistJavaxSdpParserTimeFieldParser_initWithNSString_(NSString *timeField) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpParserTimeFieldParser, initWithNSString_, timeField)
}

AndroidGovNistJavaxSdpParserTimeFieldParser *create_AndroidGovNistJavaxSdpParserTimeFieldParser_initWithNSString_(NSString *timeField) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpParserTimeFieldParser, initWithNSString_, timeField)
}

jlong AndroidGovNistJavaxSdpParserTimeFieldParser_getTime(AndroidGovNistJavaxSdpParserTimeFieldParser *self) {
  @try {
    NSString *startTime = [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) number];
    if (((jint) [((NSString *) nil_chk(startTime)) length]) > 18) startTime = [startTime java_substring:((jint) [startTime length]) - 18];
    return JavaLangLong_parseLongWithNSString_(startTime);
  }
  @catch (JavaLangNumberFormatException *ex) {
    @throw [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) createParseException];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpParserTimeFieldParser)
