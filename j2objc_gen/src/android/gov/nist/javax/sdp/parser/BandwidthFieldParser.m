//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/parser/BandwidthFieldParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/NameValue.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sdp/fields/BandwidthField.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/parser/BandwidthFieldParser.h"
#include "android/gov/nist/javax/sdp/parser/Lexer.h"
#include "android/gov/nist/javax/sdp/parser/SDPParser.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/text/ParseException.h"

@implementation AndroidGovNistJavaxSdpParserBandwidthFieldParser

- (instancetype)initWithNSString:(NSString *)bandwidthField {
  AndroidGovNistJavaxSdpParserBandwidthFieldParser_initWithNSString_(self, bandwidthField);
  return self;
}

- (AndroidGovNistJavaxSdpFieldsBandwidthField *)bandwidthField {
  @try {
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'b'];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'='];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistJavaxSdpFieldsBandwidthField *bandwidthField = create_AndroidGovNistJavaxSdpFieldsBandwidthField_init();
    AndroidGovNistCoreNameValue *nameValue = [self nameValueWithChar:':'];
    NSString *name = [((AndroidGovNistCoreNameValue *) nil_chk(nameValue)) getName];
    NSString *value = (NSString *) cast_chk([nameValue getValueAsObject], [NSString class]);
    [bandwidthField setBandwidthWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(value)) java_trim])];
    [bandwidthField setBwtypeWithNSString:name];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    return bandwidthField;
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    @throw create_JavaTextParseException_initWithNSString_withInt_([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getBuffer], [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getPtr]);
  }
}

- (AndroidGovNistJavaxSdpFieldsSDPField *)parse {
  return [self bandwidthField];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsBandwidthField;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsSDPField;", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(bandwidthField);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpParserBandwidthFieldParser = { "BandwidthFieldParser", "android.gov.nist.javax.sdp.parser", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpParserBandwidthFieldParser;
}

@end

void AndroidGovNistJavaxSdpParserBandwidthFieldParser_initWithNSString_(AndroidGovNistJavaxSdpParserBandwidthFieldParser *self, NSString *bandwidthField) {
  AndroidGovNistJavaxSdpParserSDPParser_init(self);
  JreStrongAssignAndConsume(&self->lexer_, new_AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(@"charLexer", bandwidthField));
}

AndroidGovNistJavaxSdpParserBandwidthFieldParser *new_AndroidGovNistJavaxSdpParserBandwidthFieldParser_initWithNSString_(NSString *bandwidthField) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpParserBandwidthFieldParser, initWithNSString_, bandwidthField)
}

AndroidGovNistJavaxSdpParserBandwidthFieldParser *create_AndroidGovNistJavaxSdpParserBandwidthFieldParser_initWithNSString_(NSString *bandwidthField) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpParserBandwidthFieldParser, initWithNSString_, bandwidthField)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpParserBandwidthFieldParser)
