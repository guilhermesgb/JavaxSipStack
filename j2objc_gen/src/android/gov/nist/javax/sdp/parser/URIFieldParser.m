//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/parser/URIFieldParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/fields/URIField.h"
#include "android/gov/nist/javax/sdp/parser/Lexer.h"
#include "android/gov/nist/javax/sdp/parser/SDPParser.h"
#include "android/gov/nist/javax/sdp/parser/URIFieldParser.h"
#include "java/lang/Exception.h"
#include "java/text/ParseException.h"

@implementation AndroidGovNistJavaxSdpParserURIFieldParser

- (instancetype)initWithNSString:(NSString *)uriField {
  AndroidGovNistJavaxSdpParserURIFieldParser_initWithNSString_(self, uriField);
  return self;
}

- (AndroidGovNistJavaxSdpFieldsURIField *)uriField {
  @try {
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'u'];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'='];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistJavaxSdpFieldsURIField *uriField = create_AndroidGovNistJavaxSdpFieldsURIField_init();
    NSString *rest = [((NSString *) nil_chk([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getRest])) java_trim];
    [uriField setURIWithNSString:rest];
    return uriField;
  }
  @catch (JavaLangException *e) {
    @throw [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) createParseException];
  }
}

- (AndroidGovNistJavaxSdpFieldsSDPField *)parse {
  return [self uriField];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsURIField;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsSDPField;", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(uriField);
  methods[2].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpParserURIFieldParser = { "URIFieldParser", "android.gov.nist.javax.sdp.parser", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpParserURIFieldParser;
}

@end

void AndroidGovNistJavaxSdpParserURIFieldParser_initWithNSString_(AndroidGovNistJavaxSdpParserURIFieldParser *self, NSString *uriField) {
  AndroidGovNistJavaxSdpParserSDPParser_init(self);
  JreStrongAssignAndConsume(&self->lexer_, new_AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(@"charLexer", uriField));
}

AndroidGovNistJavaxSdpParserURIFieldParser *new_AndroidGovNistJavaxSdpParserURIFieldParser_initWithNSString_(NSString *uriField) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpParserURIFieldParser, initWithNSString_, uriField)
}

AndroidGovNistJavaxSdpParserURIFieldParser *create_AndroidGovNistJavaxSdpParserURIFieldParser_initWithNSString_(NSString *uriField) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpParserURIFieldParser, initWithNSString_, uriField)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpParserURIFieldParser)
