//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/parser/OriginFieldParser.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/core/Host.h"
#include "android/gov/nist/core/HostNameParser.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sdp/fields/OriginField.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/parser/Lexer.h"
#include "android/gov/nist/javax/sdp/parser/OriginFieldParser.h"
#include "android/gov/nist/javax/sdp/parser/SDPParser.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Long.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/System.h"
#include "java/text/ParseException.h"

@implementation AndroidGovNistJavaxSdpParserOriginFieldParser

- (instancetype)initWithNSString:(NSString *)originField {
  AndroidGovNistJavaxSdpParserOriginFieldParser_initWithNSString_(self, originField);
  return self;
}

- (AndroidGovNistJavaxSdpFieldsOriginField *)originField {
  @try {
    AndroidGovNistJavaxSdpFieldsOriginField *originField = create_AndroidGovNistJavaxSdpFieldsOriginField_init();
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:'o'];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:'='];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID_NO_WHITESPACE];
    AndroidGovNistCoreToken *userName = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    [originField setUsernameWithNSString:[((AndroidGovNistCoreToken *) nil_chk(userName)) getTokenValue]];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
    AndroidGovNistCoreToken *sessionId = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    NSString *sessId = [((AndroidGovNistCoreToken *) nil_chk(sessionId)) getTokenValue];
    if (((jint) [((NSString *) nil_chk(sessId)) length]) > 18) sessId = [sessId java_substring:((jint) [sessId length]) - 18];
    @try {
      [originField setSessIdWithLong:JavaLangLong_parseLongWithNSString_(sessId)];
    }
    @catch (JavaLangNumberFormatException *ex) {
      [originField setSessionIdWithNSString:sessId];
    }
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
    AndroidGovNistCoreToken *sessionVersion = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    NSString *sessVer = [((AndroidGovNistCoreToken *) nil_chk(sessionVersion)) getTokenValue];
    if (((jint) [((NSString *) nil_chk(sessVer)) length]) > 18) sessVer = [sessVer java_substring:((jint) [sessVer length]) - 18];
    @try {
      [originField setSessVersionWithLong:JavaLangLong_parseLongWithNSString_(sessVer)];
    }
    @catch (JavaLangNumberFormatException *ex) {
      [originField setSessVersionWithNSString:sessVer];
    }
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
    AndroidGovNistCoreToken *networkType = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    [originField setNettypeWithNSString:[((AndroidGovNistCoreToken *) nil_chk(networkType)) getTokenValue]];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
    AndroidGovNistCoreToken *addressType = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    [originField setAddrtypeWithNSString:[((AndroidGovNistCoreToken *) nil_chk(addressType)) getTokenValue]];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    NSString *host = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getRest];
    AndroidGovNistCoreHostNameParser *hostNameParser = create_AndroidGovNistCoreHostNameParser_initWithNSString_(host);
    AndroidGovNistCoreHost *h = [hostNameParser host];
    [originField setAddressWithAndroidGovNistCoreHost:h];
    return originField;
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    @throw create_JavaTextParseException_initWithNSString_withInt_([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getBuffer], [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getPtr]);
  }
}

- (AndroidGovNistJavaxSdpFieldsSDPField *)parse {
  return [self originField];
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  AndroidGovNistJavaxSdpParserOriginFieldParser_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsOriginField;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsSDPField;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(originField);
  methods[2].selector = @selector(parse);
  methods[3].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LJavaTextParseException;", "main", "[LNSString;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpParserOriginFieldParser = { "OriginFieldParser", "android.gov.nist.javax.sdp.parser", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpParserOriginFieldParser;
}

@end

void AndroidGovNistJavaxSdpParserOriginFieldParser_initWithNSString_(AndroidGovNistJavaxSdpParserOriginFieldParser *self, NSString *originField) {
  AndroidGovNistJavaxSdpParserSDPParser_init(self);
  JreStrongAssignAndConsume(&self->lexer_, new_AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(@"charLexer", originField));
}

AndroidGovNistJavaxSdpParserOriginFieldParser *new_AndroidGovNistJavaxSdpParserOriginFieldParser_initWithNSString_(NSString *originField) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpParserOriginFieldParser, initWithNSString_, originField)
}

AndroidGovNistJavaxSdpParserOriginFieldParser *create_AndroidGovNistJavaxSdpParserOriginFieldParser_initWithNSString_(NSString *originField) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpParserOriginFieldParser, initWithNSString_, originField)
}

void AndroidGovNistJavaxSdpParserOriginFieldParser_mainWithNSStringArray_(IOSObjectArray *args) {
  AndroidGovNistJavaxSdpParserOriginFieldParser_initialize();
  IOSObjectArray *origin = [IOSObjectArray arrayWithObjects:(id[]){ @"o=- 45ec4ba1.1 45ec4ba1 in ip4 10.1.80.200\x0d\n", @"o=- 4322650003578 0 IN IP4 192.53.18.122\x0d\n", @"o=4855 12345678901234567890 12345678901234567890 IN IP4 166.35.224.216\n", @"o=mh/andley 2890844526 2890842807 IN IP4 126.16.64.4\n", @"o=UserB 2890844527 2890844527 IN IP4 everywhere.com\n", @"o=UserA 2890844526 2890844526 IN IP4 here.com\n", @"o=IFAXTERMINAL01 2890844527 2890844527 IN IP4 ift.here.com\n", @"o=GATEWAY1 2890844527 2890844527 IN IP4 gatewayone.wcom.com\n", @"o=- 2890844527 2890844527 IN IP4 gatewayone.wcom.com\n" } count:9 type:NSString_class_()];
  for (jint i = 0; i < origin->size_; i++) {
    AndroidGovNistJavaxSdpParserOriginFieldParser *originFieldParser = create_AndroidGovNistJavaxSdpParserOriginFieldParser_initWithNSString_(IOSObjectArray_Get(origin, i));
    AndroidGovNistJavaxSdpFieldsOriginField *originField = [originFieldParser originField];
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"toParse :", IOSObjectArray_Get(origin, i))];
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$", @"encoded: ", [((AndroidGovNistJavaxSdpFieldsOriginField *) nil_chk(originField)) encode])];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpParserOriginFieldParser)
