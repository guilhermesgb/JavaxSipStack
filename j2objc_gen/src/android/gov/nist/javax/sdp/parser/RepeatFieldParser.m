//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/parser/RepeatFieldParser.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/LexerCore.h"
#include "android/gov/nist/core/Token.h"
#include "android/gov/nist/javax/sdp/fields/RepeatField.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/fields/TypedTime.h"
#include "android/gov/nist/javax/sdp/parser/Lexer.h"
#include "android/gov/nist/javax/sdp/parser/RepeatFieldParser.h"
#include "android/gov/nist/javax/sdp/parser/SDPParser.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/text/ParseException.h"

@implementation AndroidGovNistJavaxSdpParserRepeatFieldParser

- (instancetype)initWithNSString:(NSString *)repeatField {
  AndroidGovNistJavaxSdpParserRepeatFieldParser_initWithNSString_(self, repeatField);
  return self;
}

- (AndroidGovNistJavaxSdpFieldsTypedTime *)getTypedTimeWithNSString:(NSString *)tokenValue {
  AndroidGovNistJavaxSdpFieldsTypedTime *typedTime = create_AndroidGovNistJavaxSdpFieldsTypedTime_init();
  if ([((NSString *) nil_chk(tokenValue)) hasSuffix:@"d"]) {
    [typedTime setUnitWithNSString:@"d"];
    NSString *t = [tokenValue java_replace:'d' withChar:' '];
    [typedTime setTimeWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(t)) java_trim])];
  }
  else if ([tokenValue hasSuffix:@"h"]) {
    [typedTime setUnitWithNSString:@"h"];
    NSString *t = [tokenValue java_replace:'h' withChar:' '];
    [typedTime setTimeWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(t)) java_trim])];
  }
  else if ([tokenValue hasSuffix:@"m"]) {
    [typedTime setUnitWithNSString:@"m"];
    NSString *t = [tokenValue java_replace:'m' withChar:' '];
    [typedTime setTimeWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(t)) java_trim])];
  }
  else {
    [typedTime setUnitWithNSString:@"s"];
    if ([tokenValue hasSuffix:@"s"]) {
      NSString *t = [tokenValue java_replace:'s' withChar:' '];
      [typedTime setTimeWithInt:JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(t)) java_trim])];
    }
    else [typedTime setTimeWithInt:JavaLangInteger_parseIntWithNSString_([tokenValue java_trim])];
  }
  return typedTime;
}

- (AndroidGovNistJavaxSdpFieldsRepeatField *)repeatField {
  @try {
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'r'];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) matchWithInt:'='];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistJavaxSdpFieldsRepeatField *repeatField = create_AndroidGovNistJavaxSdpFieldsRepeatField_init();
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
    AndroidGovNistCoreToken *repeatInterval = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    AndroidGovNistJavaxSdpFieldsTypedTime *typedTime = [self getTypedTimeWithNSString:[((AndroidGovNistCoreToken *) nil_chk(repeatInterval)) getTokenValue]];
    [repeatField setRepeatIntervalWithAndroidGovNistJavaxSdpFieldsTypedTime:typedTime];
    [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
    AndroidGovNistCoreToken *activeDuration = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
    [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
    typedTime = [self getTypedTimeWithNSString:[((AndroidGovNistCoreToken *) nil_chk(activeDuration)) getTokenValue]];
    [repeatField setActiveDurationWithAndroidGovNistJavaxSdpFieldsTypedTime:typedTime];
    while ([((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) hasMoreChars]) {
      jchar la = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) lookAheadWithInt:0];
      if (la == 0x000a || la == 0x000d) break;
      [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) matchWithInt:AndroidGovNistCoreLexerCore_ID];
      AndroidGovNistCoreToken *offsets = [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) getNextToken];
      [((AndroidGovNistCoreLexerCore *) nil_chk(self->lexer_)) SPorHT];
      typedTime = [self getTypedTimeWithNSString:[((AndroidGovNistCoreToken *) nil_chk(offsets)) getTokenValue]];
      [repeatField addOffsetWithAndroidGovNistJavaxSdpFieldsTypedTime:typedTime];
    }
    return repeatField;
  }
  @catch (JavaLangException *e) {
    @throw [((AndroidGovNistCoreLexerCore *) nil_chk(lexer_)) createParseException];
  }
}

- (AndroidGovNistJavaxSdpFieldsSDPField *)parse {
  return [self repeatField];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsTypedTime;", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsRepeatField;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsSDPField;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getTypedTimeWithNSString:);
  methods[2].selector = @selector(repeatField);
  methods[3].selector = @selector(parse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "getTypedTime", "LJavaTextParseException;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpParserRepeatFieldParser = { "RepeatFieldParser", "android.gov.nist.javax.sdp.parser", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpParserRepeatFieldParser;
}

@end

void AndroidGovNistJavaxSdpParserRepeatFieldParser_initWithNSString_(AndroidGovNistJavaxSdpParserRepeatFieldParser *self, NSString *repeatField) {
  AndroidGovNistJavaxSdpParserSDPParser_init(self);
  JreStrongAssignAndConsume(&self->lexer_, new_AndroidGovNistJavaxSdpParserLexer_initWithNSString_withNSString_(@"charLexer", repeatField));
}

AndroidGovNistJavaxSdpParserRepeatFieldParser *new_AndroidGovNistJavaxSdpParserRepeatFieldParser_initWithNSString_(NSString *repeatField) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpParserRepeatFieldParser, initWithNSString_, repeatField)
}

AndroidGovNistJavaxSdpParserRepeatFieldParser *create_AndroidGovNistJavaxSdpParserRepeatFieldParser_initWithNSString_(NSString *repeatField) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpParserRepeatFieldParser, initWithNSString_, repeatField)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpParserRepeatFieldParser)
