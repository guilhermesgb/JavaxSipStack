//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/MediaDescriptionImpl.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/NameValue.h"
#include "android/gov/nist/javax/sdp/MediaDescriptionImpl.h"
#include "android/gov/nist/javax/sdp/fields/AttributeField.h"
#include "android/gov/nist/javax/sdp/fields/BandwidthField.h"
#include "android/gov/nist/javax/sdp/fields/ConnectionField.h"
#include "android/gov/nist/javax/sdp/fields/InformationField.h"
#include "android/gov/nist/javax/sdp/fields/KeyField.h"
#include "android/gov/nist/javax/sdp/fields/MediaField.h"
#include "android/gov/nist/javax/sdp/fields/PreconditionFields.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/javax/sdp/Connection.h"
#include "android/javax/sdp/Info.h"
#include "android/javax/sdp/Key.h"
#include "android/javax/sdp/Media.h"
#include "android/javax/sdp/SdpConstants.h"
#include "android/javax/sdp/SdpException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Vector.h"

@implementation AndroidGovNistJavaxSdpMediaDescriptionImpl

- (NSString *)encode {
  JavaLangStringBuilder *retval = create_JavaLangStringBuilder_init();
  if (mediaField_ != nil) [retval appendWithNSString:[mediaField_ encode]];
  if (informationField_ != nil) [retval appendWithNSString:[informationField_ encode]];
  if (connectionField_ != nil) [retval appendWithNSString:[connectionField_ encode]];
  if (bandwidthFields_ != nil) {
    for (jint i = 0; i < [((JavaUtilVector *) nil_chk(bandwidthFields_)) size]; i++) {
      [retval appendWithNSString:[((AndroidGovNistJavaxSdpFieldsSDPField *) nil_chk(((AndroidGovNistJavaxSdpFieldsSDPField *) cast_chk([((JavaUtilVector *) nil_chk(bandwidthFields_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsSDPField class])))) encode]];
    }
    if (preconditionFields_ != nil) {
      jint precondSize = [preconditionFields_ getPreconditionSize];
      for (jint i = 0; i < precondSize; i++) {
        [retval appendWithNSString:[((AndroidGovNistJavaxSdpFieldsSDPField *) nil_chk(((AndroidGovNistJavaxSdpFieldsSDPField *) cast_chk([((JavaUtilVector *) nil_chk([((AndroidGovNistJavaxSdpFieldsPreconditionFields *) nil_chk(preconditionFields_)) getPreconditions])) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsSDPField class])))) encode]];
      }
    }
  }
  if (keyField_ != nil) [retval appendWithNSString:[keyField_ encode]];
  if (attributeFields_ != nil) {
    for (jint i = 0; i < [((JavaUtilVector *) nil_chk(attributeFields_)) size]; i++) [retval appendWithNSString:[((AndroidGovNistJavaxSdpFieldsSDPField *) nil_chk(((AndroidGovNistJavaxSdpFieldsSDPField *) cast_chk([((JavaUtilVector *) nil_chk(attributeFields_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsSDPField class])))) encode]];
  }
  return [retval description];
}

- (NSString *)description {
  return [self encode];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSdpMediaDescriptionImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (AndroidGovNistJavaxSdpFieldsMediaField *)getMediaField {
  return mediaField_;
}

- (AndroidGovNistJavaxSdpFieldsInformationField *)getInformationField {
  return informationField_;
}

- (AndroidGovNistJavaxSdpFieldsConnectionField *)getConnectionField {
  return connectionField_;
}

- (AndroidGovNistJavaxSdpFieldsKeyField *)getKeyField {
  return keyField_;
}

- (JavaUtilVector *)getAttributeFields {
  return attributeFields_;
}

- (void)setMediaFieldWithAndroidGovNistJavaxSdpFieldsMediaField:(AndroidGovNistJavaxSdpFieldsMediaField *)m {
  JreStrongAssign(&mediaField_, m);
}

- (void)setInformationFieldWithAndroidGovNistJavaxSdpFieldsInformationField:(AndroidGovNistJavaxSdpFieldsInformationField *)i {
  JreStrongAssign(&informationField_, i);
}

- (void)setConnectionFieldWithAndroidGovNistJavaxSdpFieldsConnectionField:(AndroidGovNistJavaxSdpFieldsConnectionField *)c {
  JreStrongAssign(&connectionField_, c);
}

- (void)addBandwidthFieldWithAndroidGovNistJavaxSdpFieldsBandwidthField:(AndroidGovNistJavaxSdpFieldsBandwidthField *)b {
  [((JavaUtilVector *) nil_chk(bandwidthFields_)) addWithId:b];
}

- (void)setKeyFieldWithAndroidGovNistJavaxSdpFieldsKeyField:(AndroidGovNistJavaxSdpFieldsKeyField *)k {
  JreStrongAssign(&keyField_, k);
}

- (void)setAttributeFieldsWithJavaUtilVector:(JavaUtilVector *)a {
  JreStrongAssign(&attributeFields_, a);
}

- (id<AndroidJavaxSdpMedia>)getMedia {
  return mediaField_;
}

- (void)addAttributeWithAndroidGovNistJavaxSdpFieldsAttributeField:(AndroidGovNistJavaxSdpFieldsAttributeField *)af {
  [((JavaUtilVector *) nil_chk(self->attributeFields_)) addWithId:af];
}

- (jboolean)hasAttributeWithNSString:(NSString *)name {
  for (jint i = 0; i < [((JavaUtilVector *) nil_chk(self->attributeFields_)) size]; i++) {
    AndroidGovNistJavaxSdpFieldsAttributeField *af = (AndroidGovNistJavaxSdpFieldsAttributeField *) cast_chk([((JavaUtilVector *) nil_chk(self->attributeFields_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsAttributeField class]);
    if ([((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([((AndroidGovNistJavaxSdpFieldsAttributeField *) nil_chk(af)) getAttribute])) getName])) isEqual:name]) return true;
  }
  return false;
}

- (void)setMediaWithAndroidJavaxSdpMedia:(id<AndroidJavaxSdpMedia>)media {
  if (media == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The media is null");
  if ([media isKindOfClass:[AndroidGovNistJavaxSdpFieldsMediaField class]]) {
    JreStrongAssign(&mediaField_, (AndroidGovNistJavaxSdpFieldsMediaField *) cast_chk(media, [AndroidGovNistJavaxSdpFieldsMediaField class]));
  }
  else @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"A mediaField parameter is required");
}

- (id<AndroidJavaxSdpInfo>)getInfo {
  AndroidGovNistJavaxSdpFieldsInformationField *informationField = [self getInformationField];
  if (informationField == nil) return nil;
  else {
    return informationField;
  }
}

- (void)setInfoWithAndroidJavaxSdpInfo:(id<AndroidJavaxSdpInfo>)i {
  if (i == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The info is null");
  if ([i isKindOfClass:[AndroidGovNistJavaxSdpFieldsInformationField class]]) {
    JreStrongAssign(&self->informationField_, (AndroidGovNistJavaxSdpFieldsInformationField *) cast_chk(i, [AndroidGovNistJavaxSdpFieldsInformationField class]));
  }
  else @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"A informationField parameter is required");
}

- (id<AndroidJavaxSdpConnection>)getConnection {
  return connectionField_;
}

- (void)setConnectionWithAndroidJavaxSdpConnection:(id<AndroidJavaxSdpConnection>)conn {
  if (conn == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The conn is null");
  if ([conn isKindOfClass:[AndroidGovNistJavaxSdpFieldsConnectionField class]]) {
    JreStrongAssign(&connectionField_, (AndroidGovNistJavaxSdpFieldsConnectionField *) cast_chk(conn, [AndroidGovNistJavaxSdpFieldsConnectionField class]));
  }
  else @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"bad implementation");
}

- (JavaUtilVector *)getBandwidthsWithBoolean:(jboolean)create {
  return bandwidthFields_;
}

- (void)setBandwidthsWithJavaUtilVector:(JavaUtilVector *)bandwidths {
  if (bandwidths == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The vector bandwidths is null");
  JreStrongAssign(&self->bandwidthFields_, bandwidths);
}

- (jint)getBandwidthWithNSString:(NSString *)name {
  if (name == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null parameter");
  if (bandwidthFields_ == nil) return -1;
  else {
    for (jint i = 0; i < [((JavaUtilVector *) nil_chk(bandwidthFields_)) size]; i++) {
      AndroidGovNistJavaxSdpFieldsBandwidthField *bandwidthField = (AndroidGovNistJavaxSdpFieldsBandwidthField *) cast_chk([((JavaUtilVector *) nil_chk(bandwidthFields_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsBandwidthField class]);
      NSString *type = [((AndroidGovNistJavaxSdpFieldsBandwidthField *) nil_chk(bandwidthField)) getBwtype];
      if (type != nil && [type isEqual:name]) return [bandwidthField getBandwidth];
    }
    return -1;
  }
}

- (void)setBandwidthWithNSString:(NSString *)name
                         withInt:(jint)value {
  if (name == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The name is null");
  else {
    jint i = 0;
    for (i = 0; i < [((JavaUtilVector *) nil_chk(bandwidthFields_)) size]; i++) {
      AndroidGovNistJavaxSdpFieldsBandwidthField *bandwidthField = (AndroidGovNistJavaxSdpFieldsBandwidthField *) cast_chk([((JavaUtilVector *) nil_chk(self->bandwidthFields_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsBandwidthField class]);
      NSString *type = [((AndroidGovNistJavaxSdpFieldsBandwidthField *) nil_chk(bandwidthField)) getBwtype];
      if (type != nil && [type isEqual:name]) {
        [bandwidthField setBandwidthWithInt:value];
        break;
      }
    }
    if (i == [((JavaUtilVector *) nil_chk(self->bandwidthFields_)) size]) {
      AndroidGovNistJavaxSdpFieldsBandwidthField *bandwidthField = create_AndroidGovNistJavaxSdpFieldsBandwidthField_init();
      [bandwidthField setTypeWithNSString:name];
      [bandwidthField setValueWithInt:value];
      [((JavaUtilVector *) nil_chk(self->bandwidthFields_)) addWithId:bandwidthField];
    }
  }
}

- (void)removeBandwidthWithNSString:(NSString *)name {
  if (name == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"null bandwidth type");
  }
  else {
    jint i = 0;
    for (i = 0; i < [((JavaUtilVector *) nil_chk(bandwidthFields_)) size]; i++) {
      AndroidGovNistJavaxSdpFieldsBandwidthField *bandwidthField = (AndroidGovNistJavaxSdpFieldsBandwidthField *) cast_chk([((JavaUtilVector *) nil_chk(bandwidthFields_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsBandwidthField class]);
      NSString *type = [((AndroidGovNistJavaxSdpFieldsBandwidthField *) nil_chk(bandwidthField)) getBwtype];
      if (type != nil && [type isEqual:name]) break;
    }
    if (i < [((JavaUtilVector *) nil_chk(bandwidthFields_)) size]) [((JavaUtilVector *) nil_chk(bandwidthFields_)) removeElementAtWithInt:i];
  }
}

- (id<AndroidJavaxSdpKey>)getKey {
  if (keyField_ == nil) return nil;
  else {
    return keyField_;
  }
}

- (void)setKeyWithAndroidJavaxSdpKey:(id<AndroidJavaxSdpKey>)key {
  if (key == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The key is null");
  if ([key isKindOfClass:[AndroidGovNistJavaxSdpFieldsKeyField class]]) {
    AndroidGovNistJavaxSdpFieldsKeyField *keyField = (AndroidGovNistJavaxSdpFieldsKeyField *) cast_chk(key, [AndroidGovNistJavaxSdpFieldsKeyField class]);
    [self setKeyFieldWithAndroidGovNistJavaxSdpFieldsKeyField:keyField];
  }
  else @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"A keyField parameter is required");
}

- (JavaUtilVector *)getAttributesWithBoolean:(jboolean)create {
  return attributeFields_;
}

- (void)setAttributesWithJavaUtilVector:(JavaUtilVector *)attributes {
  JreStrongAssign(&self->attributeFields_, attributes);
}

- (NSString *)getAttributeWithNSString:(NSString *)name {
  if (name != nil) {
    for (jint i = 0; i < [((JavaUtilVector *) nil_chk(self->attributeFields_)) size]; i++) {
      AndroidGovNistJavaxSdpFieldsAttributeField *af = (AndroidGovNistJavaxSdpFieldsAttributeField *) cast_chk([((JavaUtilVector *) nil_chk(self->attributeFields_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsAttributeField class]);
      if ([name isEqual:[((AndroidGovNistCoreNameValue *) nil_chk([((AndroidGovNistJavaxSdpFieldsAttributeField *) nil_chk(af)) getAttribute])) getName]]) return (NSString *) cast_chk([((AndroidGovNistCoreNameValue *) nil_chk([af getAttribute])) getValueAsObject], [NSString class]);
    }
    return nil;
  }
  else @throw create_JavaLangNullPointerException_initWithNSString_(@"null arg!");
}

- (void)setAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  if (name == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The parameters are null");
  else {
    jint i = 0;
    for (i = 0; i < [((JavaUtilVector *) nil_chk(self->attributeFields_)) size]; i++) {
      AndroidGovNistJavaxSdpFieldsAttributeField *af = (AndroidGovNistJavaxSdpFieldsAttributeField *) cast_chk([((JavaUtilVector *) nil_chk(self->attributeFields_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsAttributeField class]);
      if ([((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([((AndroidGovNistJavaxSdpFieldsAttributeField *) nil_chk(af)) getAttribute])) getName])) isEqual:name]) {
        AndroidGovNistCoreNameValue *nv = [af getAttribute];
        [((AndroidGovNistCoreNameValue *) nil_chk(nv)) setValueAsObjectWithId:value];
        break;
      }
    }
    if (i == [((JavaUtilVector *) nil_chk(self->attributeFields_)) size]) {
      AndroidGovNistJavaxSdpFieldsAttributeField *af = create_AndroidGovNistJavaxSdpFieldsAttributeField_init();
      AndroidGovNistCoreNameValue *nv = create_AndroidGovNistCoreNameValue_initWithNSString_withId_(name, value);
      [af setAttributeWithAndroidGovNistCoreNameValue:nv];
      [((JavaUtilVector *) nil_chk(self->attributeFields_)) addWithId:af];
    }
  }
}

- (NSString *)getDuplexity {
  jint i = 0;
  for (i = 0; i < [((JavaUtilVector *) nil_chk(self->attributeFields_)) size]; i++) {
    AndroidGovNistJavaxSdpFieldsAttributeField *af = (AndroidGovNistJavaxSdpFieldsAttributeField *) cast_chk([((JavaUtilVector *) nil_chk(self->attributeFields_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsAttributeField class]);
    if ([((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([((AndroidGovNistJavaxSdpFieldsAttributeField *) nil_chk(af)) getAttribute])) getName])) java_equalsIgnoreCase:@"sendrecv"] || [((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([af getAttribute])) getName])) java_equalsIgnoreCase:@"recvonly"] || [((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([af getAttribute])) getName])) java_equalsIgnoreCase:@"sendonly"] || [((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([af getAttribute])) getName])) java_equalsIgnoreCase:@"inactive"]) {
      return [((AndroidGovNistCoreNameValue *) nil_chk([af getAttribute])) getName];
    }
  }
  return nil;
}

- (void)setDuplexityWithNSString:(NSString *)duplexity {
  if (duplexity == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"Null arg");
  jint i = 0;
  for (i = 0; i < [((JavaUtilVector *) nil_chk(self->attributeFields_)) size]; i++) {
    AndroidGovNistJavaxSdpFieldsAttributeField *af = (AndroidGovNistJavaxSdpFieldsAttributeField *) cast_chk([((JavaUtilVector *) nil_chk(self->attributeFields_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsAttributeField class]);
    if ([((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([((AndroidGovNistJavaxSdpFieldsAttributeField *) nil_chk(af)) getAttribute])) getName])) java_equalsIgnoreCase:@"sendrecv"] || [((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([af getAttribute])) getName])) java_equalsIgnoreCase:@"recvonly"] || [((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([af getAttribute])) getName])) java_equalsIgnoreCase:@"sendonly"] || [((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([af getAttribute])) getName])) java_equalsIgnoreCase:@"inactive"]) {
      AndroidGovNistCoreNameValue *nv = create_AndroidGovNistCoreNameValue_initWithNSString_withId_(duplexity, nil);
      [af setAttributeWithAndroidGovNistCoreNameValue:nv];
      return;
    }
  }
  if (i == [((JavaUtilVector *) nil_chk(self->attributeFields_)) size]) {
    AndroidGovNistJavaxSdpFieldsAttributeField *af = create_AndroidGovNistJavaxSdpFieldsAttributeField_init();
    AndroidGovNistCoreNameValue *nv = create_AndroidGovNistCoreNameValue_initWithNSString_withId_(duplexity, nil);
    [af setAttributeWithAndroidGovNistCoreNameValue:nv];
    [((JavaUtilVector *) nil_chk(self->attributeFields_)) addWithId:af];
  }
}

- (void)removeAttributeWithNSString:(NSString *)name {
  if (name == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null arg!");
  if (name != nil) {
    jint i = 0;
    for (i = 0; i < [((JavaUtilVector *) nil_chk(self->attributeFields_)) size]; i++) {
      AndroidGovNistJavaxSdpFieldsAttributeField *af = (AndroidGovNistJavaxSdpFieldsAttributeField *) cast_chk([((JavaUtilVector *) nil_chk(self->attributeFields_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsAttributeField class]);
      if ([((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([((AndroidGovNistJavaxSdpFieldsAttributeField *) nil_chk(af)) getAttribute])) getName])) isEqual:name]) break;
    }
    if (i < [((JavaUtilVector *) nil_chk(attributeFields_)) size]) [((JavaUtilVector *) nil_chk(attributeFields_)) removeElementAtWithInt:i];
  }
}

- (JavaUtilVector *)getMimeTypes {
  AndroidGovNistJavaxSdpFieldsMediaField *mediaField = (AndroidGovNistJavaxSdpFieldsMediaField *) cast_chk([self getMedia], [AndroidGovNistJavaxSdpFieldsMediaField class]);
  NSString *type = [((AndroidGovNistJavaxSdpFieldsMediaField *) nil_chk(mediaField)) getMediaType];
  NSString *protocol = [mediaField getProtocol];
  JavaUtilVector *formats = [mediaField getMediaFormatsWithBoolean:false];
  JavaUtilVector *v = create_JavaUtilVector_init();
  for (jint i = 0; i < [((JavaUtilVector *) nil_chk(formats)) size]; i++) {
    NSString *result = nil;
    if ([((NSString *) nil_chk(protocol)) isEqual:@"RTP/AVP"]) {
      if ([self getAttributeWithNSString:AndroidJavaxSdpSdpConstants_RTPMAP] != nil) result = JreStrcat("$C$", type, '/', protocol);
      else {
      }
    }
    else result = JreStrcat("$C$", type, '/', protocol);
    [v addElementWithId:result];
  }
  return v;
}

- (JavaUtilVector *)getMimeParameters {
  NSString *rate = [self getAttributeWithNSString:@"rate"];
  NSString *ptime = [self getAttributeWithNSString:@"ptime"];
  NSString *maxptime = [self getAttributeWithNSString:@"maxptime"];
  NSString *ftmp = [self getAttributeWithNSString:@"ftmp"];
  JavaUtilVector *result = create_JavaUtilVector_init();
  [result addElementWithId:rate];
  [result addElementWithId:ptime];
  [result addElementWithId:maxptime];
  [result addElementWithId:ftmp];
  return result;
}

- (void)addDynamicPayloadsWithJavaUtilVector:(JavaUtilVector *)payloadNames
                          withJavaUtilVector:(JavaUtilVector *)payloadValues {
  if (payloadNames == nil || payloadValues == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@" The vectors are null");
  else {
    if ([payloadNames isEmpty] || [payloadValues isEmpty]) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@" The vectors are empty");
    else {
      if ([payloadNames size] != [payloadValues size]) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@" The vector sizes are unequal");
      else {
        for (jint i = 0; i < [payloadNames size]; i++) {
          NSString *name = (NSString *) cast_chk([payloadNames elementAtWithInt:i], [NSString class]);
          NSString *value = (NSString *) cast_chk([payloadValues elementAtWithInt:i], [NSString class]);
          [self setAttributeWithNSString:name withNSString:value];
        }
      }
    }
  }
}

- (void)setPreconditionFieldsWithJavaUtilVector:(JavaUtilVector *)precondition {
  [((AndroidGovNistJavaxSdpFieldsPreconditionFields *) nil_chk(self->preconditionFields_)) setPreconditionsWithJavaUtilVector:precondition];
}

- (void)setPreconditionsWithAndroidGovNistJavaxSdpFieldsPreconditionFields:(AndroidGovNistJavaxSdpFieldsPreconditionFields *)precondition {
  JreStrongAssign(&self->preconditionFields_, precondition);
}

- (JavaUtilVector *)getPreconditionFields {
  return [((AndroidGovNistJavaxSdpFieldsPreconditionFields *) nil_chk(self->preconditionFields_)) getPreconditions];
}

- (void)dealloc {
  RELEASE_(mediaField_);
  RELEASE_(informationField_);
  RELEASE_(connectionField_);
  RELEASE_(bandwidthFields_);
  RELEASE_(keyField_);
  RELEASE_(attributeFields_);
  RELEASE_(preconditionFields_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsMediaField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsInformationField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsConnectionField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsKeyField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpMedia;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, 19, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, 19, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpConnection;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 23, 19, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 12, 19, -1, -1, -1 },
    { NULL, "I", 0x1, 27, 16, 28, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 30, 19, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 16, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpKey;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 32, 33, 19, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, 34, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 12, 19, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 36, 16, 28, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 38, 19, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 39, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 40, 16, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, -1, -1, 19, -1, -1, -1 },
    { NULL, "V", 0x1, 41, 42, 19, -1, -1, -1 },
    { NULL, "V", 0x1, 43, 12, 19, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 45, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(encode);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(getMediaField);
  methods[4].selector = @selector(getInformationField);
  methods[5].selector = @selector(getConnectionField);
  methods[6].selector = @selector(getKeyField);
  methods[7].selector = @selector(getAttributeFields);
  methods[8].selector = @selector(setMediaFieldWithAndroidGovNistJavaxSdpFieldsMediaField:);
  methods[9].selector = @selector(setInformationFieldWithAndroidGovNistJavaxSdpFieldsInformationField:);
  methods[10].selector = @selector(setConnectionFieldWithAndroidGovNistJavaxSdpFieldsConnectionField:);
  methods[11].selector = @selector(addBandwidthFieldWithAndroidGovNistJavaxSdpFieldsBandwidthField:);
  methods[12].selector = @selector(setKeyFieldWithAndroidGovNistJavaxSdpFieldsKeyField:);
  methods[13].selector = @selector(setAttributeFieldsWithJavaUtilVector:);
  methods[14].selector = @selector(getMedia);
  methods[15].selector = @selector(addAttributeWithAndroidGovNistJavaxSdpFieldsAttributeField:);
  methods[16].selector = @selector(hasAttributeWithNSString:);
  methods[17].selector = @selector(setMediaWithAndroidJavaxSdpMedia:);
  methods[18].selector = @selector(getInfo);
  methods[19].selector = @selector(setInfoWithAndroidJavaxSdpInfo:);
  methods[20].selector = @selector(getConnection);
  methods[21].selector = @selector(setConnectionWithAndroidJavaxSdpConnection:);
  methods[22].selector = @selector(getBandwidthsWithBoolean:);
  methods[23].selector = @selector(setBandwidthsWithJavaUtilVector:);
  methods[24].selector = @selector(getBandwidthWithNSString:);
  methods[25].selector = @selector(setBandwidthWithNSString:withInt:);
  methods[26].selector = @selector(removeBandwidthWithNSString:);
  methods[27].selector = @selector(getKey);
  methods[28].selector = @selector(setKeyWithAndroidJavaxSdpKey:);
  methods[29].selector = @selector(getAttributesWithBoolean:);
  methods[30].selector = @selector(setAttributesWithJavaUtilVector:);
  methods[31].selector = @selector(getAttributeWithNSString:);
  methods[32].selector = @selector(setAttributeWithNSString:withNSString:);
  methods[33].selector = @selector(getDuplexity);
  methods[34].selector = @selector(setDuplexityWithNSString:);
  methods[35].selector = @selector(removeAttributeWithNSString:);
  methods[36].selector = @selector(getMimeTypes);
  methods[37].selector = @selector(getMimeParameters);
  methods[38].selector = @selector(addDynamicPayloadsWithJavaUtilVector:withJavaUtilVector:);
  methods[39].selector = @selector(setPreconditionFieldsWithJavaUtilVector:);
  methods[40].selector = @selector(setPreconditionsWithAndroidGovNistJavaxSdpFieldsPreconditionFields:);
  methods[41].selector = @selector(getPreconditionFields);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mediaField_", "LAndroidGovNistJavaxSdpFieldsMediaField;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "informationField_", "LAndroidGovNistJavaxSdpFieldsInformationField;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "connectionField_", "LAndroidGovNistJavaxSdpFieldsConnectionField;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "bandwidthFields_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "keyField_", "LAndroidGovNistJavaxSdpFieldsKeyField;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "attributeFields_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "preconditionFields_", "LAndroidGovNistJavaxSdpFieldsPreconditionFields;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "setMediaField", "LAndroidGovNistJavaxSdpFieldsMediaField;", "setInformationField", "LAndroidGovNistJavaxSdpFieldsInformationField;", "setConnectionField", "LAndroidGovNistJavaxSdpFieldsConnectionField;", "addBandwidthField", "LAndroidGovNistJavaxSdpFieldsBandwidthField;", "setKeyField", "LAndroidGovNistJavaxSdpFieldsKeyField;", "setAttributeFields", "LJavaUtilVector;", "addAttribute", "LAndroidGovNistJavaxSdpFieldsAttributeField;", "hasAttribute", "LNSString;", "setMedia", "LAndroidJavaxSdpMedia;", "LAndroidJavaxSdpSdpException;", "setInfo", "LAndroidJavaxSdpInfo;", "setConnection", "LAndroidJavaxSdpConnection;", "getBandwidths", "Z", "setBandwidths", "getBandwidth", "LAndroidJavaxSdpSdpParseException;", "setBandwidth", "LNSString;I", "removeBandwidth", "setKey", "LAndroidJavaxSdpKey;", "getAttributes", "setAttributes", "getAttribute", "setAttribute", "LNSString;LNSString;", "setDuplexity", "removeAttribute", "addDynamicPayloads", "LJavaUtilVector;LJavaUtilVector;", "setPreconditionFields", "setPreconditions", "LAndroidGovNistJavaxSdpFieldsPreconditionFields;" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpMediaDescriptionImpl = { "MediaDescriptionImpl", "android.gov.nist.javax.sdp", ptrTable, methods, fields, 7, 0x1, 42, 7, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpMediaDescriptionImpl;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

void AndroidGovNistJavaxSdpMediaDescriptionImpl_init(AndroidGovNistJavaxSdpMediaDescriptionImpl *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->bandwidthFields_, new_JavaUtilVector_init());
  JreStrongAssignAndConsume(&self->attributeFields_, new_JavaUtilVector_init());
  JreStrongAssignAndConsume(&self->preconditionFields_, new_AndroidGovNistJavaxSdpFieldsPreconditionFields_init());
}

AndroidGovNistJavaxSdpMediaDescriptionImpl *new_AndroidGovNistJavaxSdpMediaDescriptionImpl_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpMediaDescriptionImpl, init)
}

AndroidGovNistJavaxSdpMediaDescriptionImpl *create_AndroidGovNistJavaxSdpMediaDescriptionImpl_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpMediaDescriptionImpl, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpMediaDescriptionImpl)
