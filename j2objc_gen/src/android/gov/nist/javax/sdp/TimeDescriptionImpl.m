//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/TimeDescriptionImpl.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sdp/TimeDescriptionImpl.h"
#include "android/gov/nist/javax/sdp/fields/RepeatField.h"
#include "android/gov/nist/javax/sdp/fields/TimeField.h"
#include "android/javax/sdp/SdpException.h"
#include "android/javax/sdp/Time.h"
#include "java/lang/NullPointerException.h"
#include "java/util/Vector.h"

@interface AndroidGovNistJavaxSdpTimeDescriptionImpl () {
 @public
  AndroidGovNistJavaxSdpFieldsTimeField *timeImpl_;
  JavaUtilVector *repeatList_;
}

@end

J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSdpTimeDescriptionImpl, timeImpl_, AndroidGovNistJavaxSdpFieldsTimeField *)
J2OBJC_FIELD_SETTER(AndroidGovNistJavaxSdpTimeDescriptionImpl, repeatList_, JavaUtilVector *)

@implementation AndroidGovNistJavaxSdpTimeDescriptionImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSdpTimeDescriptionImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithAndroidGovNistJavaxSdpFieldsTimeField:(AndroidGovNistJavaxSdpFieldsTimeField *)timeField {
  AndroidGovNistJavaxSdpTimeDescriptionImpl_initWithAndroidGovNistJavaxSdpFieldsTimeField_(self, timeField);
  return self;
}

- (id<AndroidJavaxSdpTime>)getTime {
  return timeImpl_;
}

- (void)setTimeWithAndroidJavaxSdpTime:(id<AndroidJavaxSdpTime>)timeField {
  if (timeField == nil) {
    @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The parameter is null");
  }
  else {
    if ([timeField isKindOfClass:[AndroidGovNistJavaxSdpFieldsTimeField class]]) {
      JreStrongAssign(&self->timeImpl_, (AndroidGovNistJavaxSdpFieldsTimeField *) cast_chk(timeField, [AndroidGovNistJavaxSdpFieldsTimeField class]));
    }
    else @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The parameter is not an instance of TimeField");
  }
}

- (JavaUtilVector *)getRepeatTimesWithBoolean:(jboolean)create {
  return self->repeatList_;
}

- (void)setRepeatTimesWithJavaUtilVector:(JavaUtilVector *)repeatTimes {
  JreStrongAssign(&self->repeatList_, repeatTimes);
}

- (void)addRepeatFieldWithAndroidGovNistJavaxSdpFieldsRepeatField:(AndroidGovNistJavaxSdpFieldsRepeatField *)repeatField {
  if (repeatField == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"null repeatField");
  [((JavaUtilVector *) nil_chk(self->repeatList_)) addWithId:repeatField];
}

- (NSString *)description {
  NSString *retval = [((AndroidGovNistJavaxSdpFieldsTimeField *) nil_chk(timeImpl_)) encode];
  for (jint i = 0; i < [((JavaUtilVector *) nil_chk(self->repeatList_)) size]; i++) {
    AndroidGovNistJavaxSdpFieldsRepeatField *repeatField = (AndroidGovNistJavaxSdpFieldsRepeatField *) cast_chk([((JavaUtilVector *) nil_chk(self->repeatList_)) elementAtWithInt:i], [AndroidGovNistJavaxSdpFieldsRepeatField class]);
    JreStrAppend(&retval, "$", [((AndroidGovNistJavaxSdpFieldsRepeatField *) nil_chk(repeatField)) encode]);
  }
  return retval;
}

- (void)dealloc {
  RELEASE_(timeImpl_);
  RELEASE_(repeatList_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTime;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithAndroidGovNistJavaxSdpFieldsTimeField:);
  methods[2].selector = @selector(getTime);
  methods[3].selector = @selector(setTimeWithAndroidJavaxSdpTime:);
  methods[4].selector = @selector(getRepeatTimesWithBoolean:);
  methods[5].selector = @selector(setRepeatTimesWithJavaUtilVector:);
  methods[6].selector = @selector(addRepeatFieldWithAndroidGovNistJavaxSdpFieldsRepeatField:);
  methods[7].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "timeImpl_", "LAndroidGovNistJavaxSdpFieldsTimeField;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "repeatList_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidGovNistJavaxSdpFieldsTimeField;", "setTime", "LAndroidJavaxSdpTime;", "LAndroidJavaxSdpSdpException;", "getRepeatTimes", "Z", "setRepeatTimes", "LJavaUtilVector;", "addRepeatField", "LAndroidGovNistJavaxSdpFieldsRepeatField;", "toString" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpTimeDescriptionImpl = { "TimeDescriptionImpl", "android.gov.nist.javax.sdp", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpTimeDescriptionImpl;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

void AndroidGovNistJavaxSdpTimeDescriptionImpl_init(AndroidGovNistJavaxSdpTimeDescriptionImpl *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->timeImpl_, new_AndroidGovNistJavaxSdpFieldsTimeField_init());
  JreStrongAssignAndConsume(&self->repeatList_, new_JavaUtilVector_init());
}

AndroidGovNistJavaxSdpTimeDescriptionImpl *new_AndroidGovNistJavaxSdpTimeDescriptionImpl_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpTimeDescriptionImpl, init)
}

AndroidGovNistJavaxSdpTimeDescriptionImpl *create_AndroidGovNistJavaxSdpTimeDescriptionImpl_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpTimeDescriptionImpl, init)
}

void AndroidGovNistJavaxSdpTimeDescriptionImpl_initWithAndroidGovNistJavaxSdpFieldsTimeField_(AndroidGovNistJavaxSdpTimeDescriptionImpl *self, AndroidGovNistJavaxSdpFieldsTimeField *timeField) {
  NSObject_init(self);
  JreStrongAssign(&self->timeImpl_, timeField);
  JreStrongAssignAndConsume(&self->repeatList_, new_JavaUtilVector_init());
}

AndroidGovNistJavaxSdpTimeDescriptionImpl *new_AndroidGovNistJavaxSdpTimeDescriptionImpl_initWithAndroidGovNistJavaxSdpFieldsTimeField_(AndroidGovNistJavaxSdpFieldsTimeField *timeField) {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpTimeDescriptionImpl, initWithAndroidGovNistJavaxSdpFieldsTimeField_, timeField)
}

AndroidGovNistJavaxSdpTimeDescriptionImpl *create_AndroidGovNistJavaxSdpTimeDescriptionImpl_initWithAndroidGovNistJavaxSdpFieldsTimeField_(AndroidGovNistJavaxSdpFieldsTimeField *timeField) {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpTimeDescriptionImpl, initWithAndroidGovNistJavaxSdpFieldsTimeField_, timeField)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpTimeDescriptionImpl)
