//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/fields/AttributeField.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/NameValue.h"
#include "android/gov/nist/core/Separators.h"
#include "android/gov/nist/javax/sdp/fields/AttributeField.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/fields/SDPFieldNames.h"
#include "android/javax/sdp/SdpException.h"
#include "java/lang/UnsupportedOperationException.h"

@implementation AndroidGovNistJavaxSdpFieldsAttributeField

- (AndroidGovNistCoreNameValue *)getAttribute {
  return attribute_;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSdpFieldsAttributeField_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setAttributeWithAndroidGovNistCoreNameValue:(AndroidGovNistCoreNameValue *)a {
  JreStrongAssign(&attribute_, a);
  [((AndroidGovNistCoreNameValue *) nil_chk(attribute_)) setSeparatorWithNSString:AndroidGovNistCoreSeparators_COLON];
}

- (NSString *)encode {
  NSString *encoded_string = AndroidGovNistJavaxSdpFieldsSDPFieldNames_ATTRIBUTE_FIELD;
  if (attribute_ != nil) JreStrAppend(&encoded_string, "$", [attribute_ encode]);
  return JreStrcat("$$", encoded_string, AndroidGovNistCoreSeparators_NEWLINE);
}

- (NSString *)description {
  return [self encode];
}

- (NSString *)getName {
  AndroidGovNistCoreNameValue *nameValue = [self getAttribute];
  if (nameValue == nil) return nil;
  else {
    NSString *name = [nameValue getName];
    if (name == nil) return nil;
    else return name;
  }
}

- (void)setNameWithNSString:(NSString *)name {
  if (name == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The name is null");
  else {
    AndroidGovNistCoreNameValue *nameValue = [self getAttribute];
    if (nameValue == nil) nameValue = create_AndroidGovNistCoreNameValue_init();
    [nameValue setNameWithNSString:name];
    [self setAttributeWithAndroidGovNistCoreNameValue:nameValue];
  }
}

- (jboolean)hasValue {
  AndroidGovNistCoreNameValue *nameValue = [self getAttribute];
  if (nameValue == nil) return false;
  else {
    id value = [nameValue getValueAsObject];
    if (value == nil) return false;
    else return true;
  }
}

- (NSString *)getValue {
  AndroidGovNistCoreNameValue *nameValue = [self getAttribute];
  if (nameValue == nil) return nil;
  else {
    id value = [nameValue getValueAsObject];
    if (value == nil) return nil;
    else if ([value isKindOfClass:[NSString class]]) return (NSString *) cast_chk(value, [NSString class]);
    else return [value description];
  }
}

- (void)setValueWithNSString:(NSString *)value {
  if (value == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The value is null");
  else {
    AndroidGovNistCoreNameValue *nameValue = [self getAttribute];
    if (nameValue == nil) nameValue = create_AndroidGovNistCoreNameValue_init();
    [nameValue setValueAsObjectWithId:value];
    [self setAttributeWithAndroidGovNistCoreNameValue:nameValue];
  }
}

- (void)setValueAllowNullWithNSString:(NSString *)value {
  AndroidGovNistCoreNameValue *nameValue = [self getAttribute];
  if (nameValue == nil) nameValue = create_AndroidGovNistCoreNameValue_init();
  [nameValue setValueAsObjectWithId:value];
  [self setAttributeWithAndroidGovNistCoreNameValue:nameValue];
}

- (id)java_clone {
  AndroidGovNistJavaxSdpFieldsAttributeField *retval = (AndroidGovNistJavaxSdpFieldsAttributeField *) cast_chk([super java_clone], [AndroidGovNistJavaxSdpFieldsAttributeField class]);
  if (self->attribute_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSdpFieldsAttributeField *) nil_chk(retval))->attribute_, (AndroidGovNistCoreNameValue *) cast_chk([self->attribute_ java_clone], [AndroidGovNistCoreNameValue class]));
  return retval;
}

- (jboolean)isEqual:(id)that {
  if (!([that isKindOfClass:[AndroidGovNistJavaxSdpFieldsAttributeField class]])) return false;
  AndroidGovNistJavaxSdpFieldsAttributeField *other = (AndroidGovNistJavaxSdpFieldsAttributeField *) cast_chk(that, [AndroidGovNistJavaxSdpFieldsAttributeField class]);
  return [((NSString *) nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([((AndroidGovNistJavaxSdpFieldsAttributeField *) nil_chk(other)) getAttribute])) getName])) java_equalsIgnoreCase:[((AndroidGovNistCoreNameValue *) nil_chk([self getAttribute])) getName]] && [nil_chk([((AndroidGovNistCoreNameValue *) nil_chk([self getAttribute])) getValueAsObject]) isEqual:[((AndroidGovNistCoreNameValue *) nil_chk([other getAttribute])) getValueAsObject]];
}

- (NSUInteger)hash {
  if ([self getAttribute] == nil) @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Attribute is null cannot compute hashCode ");
  return ((jint) [((NSString *) nil_chk([self encode])) hash]);
}

- (void)dealloc {
  RELEASE_(attribute_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LAndroidGovNistCoreNameValue;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 5, 6, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 12, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getAttribute);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(setAttributeWithAndroidGovNistCoreNameValue:);
  methods[3].selector = @selector(encode);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(getName);
  methods[6].selector = @selector(setNameWithNSString:);
  methods[7].selector = @selector(hasValue);
  methods[8].selector = @selector(getValue);
  methods[9].selector = @selector(setValueWithNSString:);
  methods[10].selector = @selector(setValueAllowNullWithNSString:);
  methods[11].selector = @selector(java_clone);
  methods[12].selector = @selector(isEqual:);
  methods[13].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "attribute_", "LAndroidGovNistCoreNameValue;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setAttribute", "LAndroidGovNistCoreNameValue;", "toString", "LAndroidJavaxSdpSdpParseException;", "setName", "LNSString;", "LAndroidJavaxSdpSdpException;", "setValue", "setValueAllowNull", "clone", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpFieldsAttributeField = { "AttributeField", "android.gov.nist.javax.sdp.fields", ptrTable, methods, fields, 7, 0x1, 14, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpFieldsAttributeField;
}

@end

void AndroidGovNistJavaxSdpFieldsAttributeField_init(AndroidGovNistJavaxSdpFieldsAttributeField *self) {
  AndroidGovNistJavaxSdpFieldsSDPField_initWithNSString_(self, AndroidGovNistJavaxSdpFieldsSDPFieldNames_ATTRIBUTE_FIELD);
}

AndroidGovNistJavaxSdpFieldsAttributeField *new_AndroidGovNistJavaxSdpFieldsAttributeField_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpFieldsAttributeField, init)
}

AndroidGovNistJavaxSdpFieldsAttributeField *create_AndroidGovNistJavaxSdpFieldsAttributeField_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpFieldsAttributeField, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpFieldsAttributeField)
