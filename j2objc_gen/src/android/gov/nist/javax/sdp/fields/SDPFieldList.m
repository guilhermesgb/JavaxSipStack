//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/fields/SDPFieldList.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/javax/sdp/fields/Indentation.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/fields/SDPFieldList.h"
#include "android/gov/nist/javax/sdp/fields/SDPObject.h"
#include "android/gov/nist/javax/sdp/fields/SDPObjectList.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ListIterator.h"

@implementation AndroidGovNistJavaxSdpFieldsSDPFieldList

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSdpFieldsSDPFieldList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilListIterator>)listIterator {
  return [((AndroidGovNistJavaxSdpFieldsSDPObjectList *) nil_chk(sdpFields_)) listIterator];
}

- (instancetype)initWithNSString:(NSString *)fieldName {
  AndroidGovNistJavaxSdpFieldsSDPFieldList_initWithNSString_(self, fieldName);
  return self;
}

- (instancetype)initWithNSString:(NSString *)fieldName
                    withNSString:(NSString *)classname {
  AndroidGovNistJavaxSdpFieldsSDPFieldList_initWithNSString_withNSString_(self, fieldName, classname);
  return self;
}

- (void)addWithAndroidGovNistJavaxSdpFieldsSDPField:(AndroidGovNistJavaxSdpFieldsSDPField *)h {
  [((AndroidGovNistJavaxSdpFieldsSDPObjectList *) nil_chk(sdpFields_)) addWithAndroidGovNistJavaxSdpFieldsSDPObject:h];
}

- (AndroidGovNistJavaxSdpFieldsSDPObject *)first {
  return (AndroidGovNistJavaxSdpFieldsSDPObject *) cast_chk([((AndroidGovNistJavaxSdpFieldsSDPObjectList *) nil_chk(sdpFields_)) first], [AndroidGovNistJavaxSdpFieldsSDPObject class]);
}

- (AndroidGovNistJavaxSdpFieldsSDPObject *)next {
  return (AndroidGovNistJavaxSdpFieldsSDPObject *) cast_chk([((AndroidGovNistJavaxSdpFieldsSDPObjectList *) nil_chk(sdpFields_)) next], [AndroidGovNistJavaxSdpFieldsSDPObject class]);
}

- (NSString *)encode {
  JavaLangStringBuilder *retval = create_JavaLangStringBuilder_init();
  id<JavaUtilListIterator> li = [((AndroidGovNistJavaxSdpFieldsSDPObjectList *) nil_chk(sdpFields_)) listIterator];
  while ([((id<JavaUtilListIterator>) nil_chk(li)) hasNext]) {
    AndroidGovNistJavaxSdpFieldsSDPField *sdphdr = (AndroidGovNistJavaxSdpFieldsSDPField *) cast_chk([li next], [AndroidGovNistJavaxSdpFieldsSDPField class]);
    [retval appendWithNSString:[((AndroidGovNistJavaxSdpFieldsSDPField *) nil_chk(sdphdr)) encode]];
  }
  return [retval description];
}

- (NSString *)debugDumpWithInt:(jint)indentation {
  JreStrongAssign(&stringRepresentation_, @"");
  NSString *indent = [create_AndroidGovNistJavaxSdpFieldsIndentation_initWithInt_(indentation) getIndentation];
  ;
  NSString *className_ = [[self java_getClass] getName];
  [self sprintWithNSString:JreStrcat("$$", indent, className_)];
  [self sprintWithNSString:JreStrcat("$C", indent, '{')];
  [self sprintWithNSString:JreStrcat("$$", indent, [((AndroidGovNistJavaxSdpFieldsSDPObjectList *) nil_chk(sdpFields_)) debugDumpWithInt:indentation])];
  [self sprintWithNSString:JreStrcat("$C", indent, '}')];
  return stringRepresentation_;
}

- (NSString *)debugDump {
  return [self debugDumpWithInt:0];
}

- (NSString *)description {
  return [self encode];
}

- (jboolean)isEqual:(id)other {
  if (other == nil) return false;
  if (![[self java_getClass] isEqual:[other java_getClass]]) return false;
  AndroidGovNistJavaxSdpFieldsSDPFieldList *that = (AndroidGovNistJavaxSdpFieldsSDPFieldList *) cast_chk(other, [AndroidGovNistJavaxSdpFieldsSDPFieldList class]);
  if (sdpFields_ == nil) return that->sdpFields_ == nil;
  return [self->sdpFields_ isEqual:that->sdpFields_];
}

- (jboolean)matchWithId:(id)template_ {
  if (template_ == nil) return true;
  if (![[template_ java_getClass] isEqual:[self java_getClass]]) return false;
  AndroidGovNistJavaxSdpFieldsSDPFieldList *other = (AndroidGovNistJavaxSdpFieldsSDPFieldList *) cast_chk(template_, [AndroidGovNistJavaxSdpFieldsSDPFieldList class]);
  if (sdpFields_ == other->sdpFields_) return true;
  else if (sdpFields_ == nil) return false;
  return [sdpFields_ matchWithId:other->sdpFields_];
}

- (id)java_clone {
  AndroidGovNistJavaxSdpFieldsSDPFieldList *retval = (AndroidGovNistJavaxSdpFieldsSDPFieldList *) cast_chk([super java_clone], [AndroidGovNistJavaxSdpFieldsSDPFieldList class]);
  if (self->sdpFields_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSdpFieldsSDPFieldList *) nil_chk(retval))->sdpFields_, (AndroidGovNistJavaxSdpFieldsSDPObjectList *) cast_chk([self->sdpFields_ java_clone], [AndroidGovNistJavaxSdpFieldsSDPObjectList class]));
  return retval;
}

- (void)dealloc {
  RELEASE_(sdpFields_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilListIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsSDPObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsSDPObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(listIterator);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(initWithNSString:withNSString:);
  methods[4].selector = @selector(addWithAndroidGovNistJavaxSdpFieldsSDPField:);
  methods[5].selector = @selector(first);
  methods[6].selector = @selector(next);
  methods[7].selector = @selector(encode);
  methods[8].selector = @selector(debugDumpWithInt:);
  methods[9].selector = @selector(debugDump);
  methods[10].selector = @selector(description);
  methods[11].selector = @selector(isEqual:);
  methods[12].selector = @selector(matchWithId:);
  methods[13].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sdpFields_", "LAndroidGovNistJavaxSdpFieldsSDPObjectList;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LNSString;", "add", "LAndroidGovNistJavaxSdpFieldsSDPField;", "debugDump", "I", "toString", "equals", "LNSObject;", "match", "clone" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpFieldsSDPFieldList = { "SDPFieldList", "android.gov.nist.javax.sdp.fields", ptrTable, methods, fields, 7, 0x401, 14, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpFieldsSDPFieldList;
}

@end

void AndroidGovNistJavaxSdpFieldsSDPFieldList_init(AndroidGovNistJavaxSdpFieldsSDPFieldList *self) {
  AndroidGovNistJavaxSdpFieldsSDPField_init(self);
}

void AndroidGovNistJavaxSdpFieldsSDPFieldList_initWithNSString_(AndroidGovNistJavaxSdpFieldsSDPFieldList *self, NSString *fieldName) {
  AndroidGovNistJavaxSdpFieldsSDPField_initWithNSString_(self, fieldName);
  JreStrongAssignAndConsume(&self->sdpFields_, new_AndroidGovNistJavaxSdpFieldsSDPObjectList_initWithNSString_(fieldName));
}

void AndroidGovNistJavaxSdpFieldsSDPFieldList_initWithNSString_withNSString_(AndroidGovNistJavaxSdpFieldsSDPFieldList *self, NSString *fieldName, NSString *classname) {
  AndroidGovNistJavaxSdpFieldsSDPField_initWithNSString_(self, fieldName);
  JreStrongAssignAndConsume(&self->sdpFields_, new_AndroidGovNistJavaxSdpFieldsSDPObjectList_initWithNSString_withNSString_(fieldName, classname));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpFieldsSDPFieldList)
