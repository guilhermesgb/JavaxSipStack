//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/fields/ZoneField.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/Separators.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/fields/SDPFieldNames.h"
#include "android/gov/nist/javax/sdp/fields/SDPObjectList.h"
#include "android/gov/nist/javax/sdp/fields/ZoneAdjustment.h"
#include "android/gov/nist/javax/sdp/fields/ZoneField.h"
#include "android/javax/sdp/SdpException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Date.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "java/util/ListIterator.h"

@implementation AndroidGovNistJavaxSdpFieldsZoneField

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSdpFieldsZoneField_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addZoneAdjustmentWithAndroidGovNistJavaxSdpFieldsZoneAdjustment:(AndroidGovNistJavaxSdpFieldsZoneAdjustment *)za {
  [((AndroidGovNistJavaxSdpFieldsSDPObjectList *) nil_chk(zoneAdjustments_)) addWithAndroidGovNistJavaxSdpFieldsSDPObject:za];
}

- (AndroidGovNistJavaxSdpFieldsSDPObjectList *)getZoneAdjustments {
  return zoneAdjustments_;
}

- (NSString *)encode {
  JavaLangStringBuilder *retval = create_JavaLangStringBuilder_initWithNSString_(AndroidGovNistJavaxSdpFieldsSDPFieldNames_ZONE_FIELD);
  id<JavaUtilListIterator> li = [((AndroidGovNistJavaxSdpFieldsSDPObjectList *) nil_chk(zoneAdjustments_)) listIterator];
  jint num = 0;
  while ([((id<JavaUtilListIterator>) nil_chk(li)) hasNext]) {
    AndroidGovNistJavaxSdpFieldsZoneAdjustment *za = (AndroidGovNistJavaxSdpFieldsZoneAdjustment *) cast_chk([li next], [AndroidGovNistJavaxSdpFieldsZoneAdjustment class]);
    if (num > 0) [retval appendWithNSString:AndroidGovNistCoreSeparators_SP];
    [retval appendWithNSString:[((AndroidGovNistJavaxSdpFieldsZoneAdjustment *) nil_chk(za)) encode]];
    num++;
  }
  [retval appendWithNSString:AndroidGovNistCoreSeparators_NEWLINE];
  return [retval description];
}

- (JavaUtilHashtable *)getZoneAdjustmentsWithBoolean:(jboolean)create {
  JavaUtilHashtable *result = create_JavaUtilHashtable_init();
  AndroidGovNistJavaxSdpFieldsSDPObjectList *zoneAdjustments = [self getZoneAdjustments];
  AndroidGovNistJavaxSdpFieldsZoneAdjustment *zone;
  if (zoneAdjustments == nil) if (create) return create_JavaUtilHashtable_init();
  else return nil;
  else {
    while ((zone = (AndroidGovNistJavaxSdpFieldsZoneAdjustment *) cast_chk([zoneAdjustments next], [AndroidGovNistJavaxSdpFieldsZoneAdjustment class])) != nil) {
      JavaLangLong *l = JavaLangLong_valueOfWithLong_([((AndroidGovNistJavaxSdpFieldsZoneAdjustment *) nil_chk(zone)) getTime]);
      JavaLangInteger *time = JavaLangInteger_valueOfWithNSString_([l description]);
      JavaUtilDate *date = create_JavaUtilDate_initWithLong_([zone getTime]);
      [result putWithId:date withId:time];
    }
    return result;
  }
}

- (void)setZoneAdjustmentsWithJavaUtilHashtable:(JavaUtilHashtable *)map {
  if (map == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The map is null");
  else {
    for (id<JavaUtilEnumeration> e = [map keys]; [((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]; ) {
      id o = [e nextElement];
      if ([o isKindOfClass:[JavaUtilDate class]]) {
        JavaUtilDate *date = (JavaUtilDate *) cast_chk(o, [JavaUtilDate class]);
        AndroidGovNistJavaxSdpFieldsZoneAdjustment *zone = create_AndroidGovNistJavaxSdpFieldsZoneAdjustment_init();
        [zone setTimeWithLong:[((JavaUtilDate *) nil_chk(date)) getTime]];
        [self addZoneAdjustmentWithAndroidGovNistJavaxSdpFieldsZoneAdjustment:zone];
      }
      else @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The map is not well-formated ");
    }
  }
}

- (void)setTypedTimeWithBoolean:(jboolean)typedTime {
}

- (jboolean)getTypedTime {
  return false;
}

- (id)java_clone {
  AndroidGovNistJavaxSdpFieldsZoneField *retval = (AndroidGovNistJavaxSdpFieldsZoneField *) cast_chk([super java_clone], [AndroidGovNistJavaxSdpFieldsZoneField class]);
  if (self->zoneAdjustments_ != nil) JreStrongAssign(&((AndroidGovNistJavaxSdpFieldsZoneField *) nil_chk(retval))->zoneAdjustments_, (AndroidGovNistJavaxSdpFieldsSDPObjectList *) cast_chk([self->zoneAdjustments_ java_clone], [AndroidGovNistJavaxSdpFieldsSDPObjectList class]));
  return retval;
}

- (void)dealloc {
  RELEASE_(zoneAdjustments_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidGovNistJavaxSdpFieldsSDPObjectList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilHashtable;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 7, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addZoneAdjustmentWithAndroidGovNistJavaxSdpFieldsZoneAdjustment:);
  methods[2].selector = @selector(getZoneAdjustments);
  methods[3].selector = @selector(encode);
  methods[4].selector = @selector(getZoneAdjustmentsWithBoolean:);
  methods[5].selector = @selector(setZoneAdjustmentsWithJavaUtilHashtable:);
  methods[6].selector = @selector(setTypedTimeWithBoolean:);
  methods[7].selector = @selector(getTypedTime);
  methods[8].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "zoneAdjustments_", "LAndroidGovNistJavaxSdpFieldsSDPObjectList;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "addZoneAdjustment", "LAndroidGovNistJavaxSdpFieldsZoneAdjustment;", "getZoneAdjustments", "Z", "LAndroidJavaxSdpSdpParseException;", "setZoneAdjustments", "LJavaUtilHashtable;", "LAndroidJavaxSdpSdpException;", "setTypedTime", "clone" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpFieldsZoneField = { "ZoneField", "android.gov.nist.javax.sdp.fields", ptrTable, methods, fields, 7, 0x1, 9, 1, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpFieldsZoneField;
}

@end

void AndroidGovNistJavaxSdpFieldsZoneField_init(AndroidGovNistJavaxSdpFieldsZoneField *self) {
  AndroidGovNistJavaxSdpFieldsSDPField_initWithNSString_(self, AndroidGovNistJavaxSdpFieldsSDPFieldNames_ZONE_FIELD);
  JreStrongAssignAndConsume(&self->zoneAdjustments_, new_AndroidGovNistJavaxSdpFieldsSDPObjectList_init());
}

AndroidGovNistJavaxSdpFieldsZoneField *new_AndroidGovNistJavaxSdpFieldsZoneField_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpFieldsZoneField, init)
}

AndroidGovNistJavaxSdpFieldsZoneField *create_AndroidGovNistJavaxSdpFieldsZoneField_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpFieldsZoneField, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpFieldsZoneField)
