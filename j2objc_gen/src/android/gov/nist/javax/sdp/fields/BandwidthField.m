//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/javax/sdp/fields/BandwidthField.java
//

#include "J2ObjC_source.h"
#include "android/gov/nist/core/Separators.h"
#include "android/gov/nist/javax/sdp/fields/BandwidthField.h"
#include "android/gov/nist/javax/sdp/fields/SDPField.h"
#include "android/gov/nist/javax/sdp/fields/SDPFieldNames.h"
#include "android/javax/sdp/SdpException.h"

@implementation AndroidGovNistJavaxSdpFieldsBandwidthField

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistJavaxSdpFieldsBandwidthField_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getBwtype {
  return bwtype_;
}

- (jint)getBandwidth {
  return bandwidth_;
}

- (void)setBwtypeWithNSString:(NSString *)b {
  JreStrongAssign(&bwtype_, b);
}

- (void)setBandwidthWithInt:(jint)b {
  bandwidth_ = b;
}

- (NSString *)encode {
  NSString *encoded_string = AndroidGovNistJavaxSdpFieldsSDPFieldNames_BANDWIDTH_FIELD;
  if (bwtype_ != nil) JreStrAppend(&encoded_string, "$$", bwtype_, AndroidGovNistCoreSeparators_COLON);
  return JreStrcat("$I$", encoded_string, bandwidth_, AndroidGovNistCoreSeparators_NEWLINE);
}

- (NSString *)getType {
  return [self getBwtype];
}

- (void)setTypeWithNSString:(NSString *)type {
  if (type == nil) @throw create_AndroidJavaxSdpSdpException_initWithNSString_(@"The type is null");
  else [self setBwtypeWithNSString:type];
}

- (jint)getValue {
  return [self getBandwidth];
}

- (void)setValueWithInt:(jint)value {
  [self setBandwidthWithInt:value];
}

- (void)dealloc {
  RELEASE_(bwtype_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, 6, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 3, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getBwtype);
  methods[2].selector = @selector(getBandwidth);
  methods[3].selector = @selector(setBwtypeWithNSString:);
  methods[4].selector = @selector(setBandwidthWithInt:);
  methods[5].selector = @selector(encode);
  methods[6].selector = @selector(getType);
  methods[7].selector = @selector(setTypeWithNSString:);
  methods[8].selector = @selector(getValue);
  methods[9].selector = @selector(setValueWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bwtype_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "bandwidth_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setBwtype", "LNSString;", "setBandwidth", "I", "LAndroidJavaxSdpSdpParseException;", "setType", "LAndroidJavaxSdpSdpException;", "setValue" };
  static const J2ObjcClassInfo _AndroidGovNistJavaxSdpFieldsBandwidthField = { "BandwidthField", "android.gov.nist.javax.sdp.fields", ptrTable, methods, fields, 7, 0x1, 10, 2, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistJavaxSdpFieldsBandwidthField;
}

@end

void AndroidGovNistJavaxSdpFieldsBandwidthField_init(AndroidGovNistJavaxSdpFieldsBandwidthField *self) {
  AndroidGovNistJavaxSdpFieldsSDPField_initWithNSString_(self, AndroidGovNistJavaxSdpFieldsSDPFieldNames_BANDWIDTH_FIELD);
}

AndroidGovNistJavaxSdpFieldsBandwidthField *new_AndroidGovNistJavaxSdpFieldsBandwidthField_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistJavaxSdpFieldsBandwidthField, init)
}

AndroidGovNistJavaxSdpFieldsBandwidthField *create_AndroidGovNistJavaxSdpFieldsBandwidthField_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistJavaxSdpFieldsBandwidthField, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistJavaxSdpFieldsBandwidthField)
