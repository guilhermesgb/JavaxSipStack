//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/core/NameValue.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/core/GenericObject.h"
#include "android/gov/nist/core/GenericObjectList.h"
#include "android/gov/nist/core/NameValue.h"
#include "android/gov/nist/core/Separators.h"
#include "java/lang/StringBuilder.h"

@interface AndroidGovNistCoreNameValue () {
 @public
  NSString *separator_;
  NSString *quotes_;
  NSString *name_;
  id value_;
}

@end

J2OBJC_FIELD_SETTER(AndroidGovNistCoreNameValue, separator_, NSString *)
J2OBJC_FIELD_SETTER(AndroidGovNistCoreNameValue, quotes_, NSString *)
J2OBJC_FIELD_SETTER(AndroidGovNistCoreNameValue, name_, NSString *)
J2OBJC_FIELD_SETTER(AndroidGovNistCoreNameValue, value_, id)

inline jlong AndroidGovNistCoreNameValue_get_serialVersionUID();
#define AndroidGovNistCoreNameValue_serialVersionUID -1857729012596437950LL
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreNameValue, serialVersionUID, jlong)

@implementation AndroidGovNistCoreNameValue

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistCoreNameValue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)n
                          withId:(id)v
                     withBoolean:(jboolean)isFlag {
  AndroidGovNistCoreNameValue_initWithNSString_withId_withBoolean_(self, n, v, isFlag);
  return self;
}

- (instancetype)initWithNSString:(NSString *)n
                          withId:(id)v {
  AndroidGovNistCoreNameValue_initWithNSString_withId_(self, n, v);
  return self;
}

- (void)setSeparatorWithNSString:(NSString *)sep {
  JreStrongAssign(&separator_, sep);
}

- (void)setQuotedValue {
  isQuotedString_ = true;
  JreStrongAssign(&self->quotes_, AndroidGovNistCoreSeparators_DOUBLE_QUOTE);
}

- (jboolean)isValueQuoted {
  return isQuotedString_;
}

- (NSString *)getName {
  return name_;
}

- (id)getValueAsObject {
  return [self getValueAsObjectWithBoolean:true];
}

- (id)getValueAsObjectWithBoolean:(jboolean)stripQuotes {
  if (isFlagParameter_) return @"";
  if (!stripQuotes && isQuotedString_) return JreStrcat("$$$", quotes_, [nil_chk(value_) description], quotes_);
  return value_;
}

- (void)setNameWithNSString:(NSString *)n {
  JreStrongAssign(&name_, n);
}

- (void)setValueAsObjectWithId:(id)v {
  JreStrongAssign(&value_, v);
}

- (NSString *)encode {
  return [((JavaLangStringBuilder *) nil_chk([self encodeWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)encodeWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer {
  if (name_ != nil && value_ != nil && !isFlagParameter_) {
    if (AndroidGovNistCoreGenericObject_isMySubclassWithIOSClass_([value_ java_getClass])) {
      AndroidGovNistCoreGenericObject *gv = (AndroidGovNistCoreGenericObject *) cast_chk(value_, [AndroidGovNistCoreGenericObject class]);
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:name_])) appendWithNSString:separator_])) appendWithNSString:quotes_];
      [((AndroidGovNistCoreGenericObject *) nil_chk(gv)) encodeWithJavaLangStringBuilder:buffer];
      [buffer appendWithNSString:quotes_];
      return buffer;
    }
    else if (AndroidGovNistCoreGenericObjectList_isMySubclassWithIOSClass_([nil_chk(value_) java_getClass])) {
      AndroidGovNistCoreGenericObjectList *gvlist = (AndroidGovNistCoreGenericObjectList *) cast_chk(value_, [AndroidGovNistCoreGenericObjectList class]);
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:name_])) appendWithNSString:separator_])) appendWithNSString:[((AndroidGovNistCoreGenericObjectList *) nil_chk(gvlist)) encode]];
      return buffer;
    }
    else if (((jint) [((NSString *) nil_chk([nil_chk(value_) description])) length]) == 0) {
      if (self->isQuotedString_) {
        [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:name_])) appendWithNSString:separator_])) appendWithNSString:quotes_])) appendWithNSString:quotes_];
        return buffer;
      }
      else {
        [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:name_])) appendWithNSString:separator_];
        return buffer;
      }
    }
    else {
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:name_])) appendWithNSString:separator_])) appendWithNSString:quotes_])) appendWithNSString:[nil_chk(value_) description]])) appendWithNSString:quotes_];
      return buffer;
    }
  }
  else if (name_ == nil && value_ != nil) {
    if (AndroidGovNistCoreGenericObject_isMySubclassWithIOSClass_([value_ java_getClass])) {
      AndroidGovNistCoreGenericObject *gv = (AndroidGovNistCoreGenericObject *) cast_chk(value_, [AndroidGovNistCoreGenericObject class]);
      [((AndroidGovNistCoreGenericObject *) nil_chk(gv)) encodeWithJavaLangStringBuilder:buffer];
      return buffer;
    }
    else if (AndroidGovNistCoreGenericObjectList_isMySubclassWithIOSClass_([nil_chk(value_) java_getClass])) {
      AndroidGovNistCoreGenericObjectList *gvlist = (AndroidGovNistCoreGenericObjectList *) cast_chk(value_, [AndroidGovNistCoreGenericObjectList class]);
      [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:[((AndroidGovNistCoreGenericObjectList *) nil_chk(gvlist)) encode]];
      return buffer;
    }
    else {
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:quotes_])) appendWithNSString:[nil_chk(value_) description]])) appendWithNSString:quotes_];
      return buffer;
    }
  }
  else if (name_ != nil && (value_ == nil || isFlagParameter_)) {
    [((JavaLangStringBuilder *) nil_chk(buffer)) appendWithNSString:name_];
    return buffer;
  }
  else {
    return buffer;
  }
}

- (id)java_clone {
  AndroidGovNistCoreNameValue *retval = (AndroidGovNistCoreNameValue *) cast_chk([super java_clone], [AndroidGovNistCoreNameValue class]);
  if (value_ != nil) JreStrongAssign(&((AndroidGovNistCoreNameValue *) nil_chk(retval))->value_, AndroidGovNistCoreGenericObject_makeCloneWithId_(value_));
  return retval;
}

- (jboolean)isEqual:(id)other {
  if (other == nil) return false;
  if (![[other java_getClass] isEqual:[self java_getClass]]) return false;
  AndroidGovNistCoreNameValue *that = (AndroidGovNistCoreNameValue *) cast_chk(other, [AndroidGovNistCoreNameValue class]);
  if (self == that) return true;
  if ((self->name_ == nil && that->name_ != nil) || (self->name_ != nil && that->name_ == nil)) return false;
  if (self->name_ != nil && that->name_ != nil && [self->name_ java_compareToIgnoreCase:that->name_] != 0) return false;
  if ((self->value_ != nil && that->value_ == nil) || (self->value_ == nil && that->value_ != nil)) return false;
  if (self->value_ == that->value_) return true;
  if ([value_ isKindOfClass:[NSString class]]) {
    if (isQuotedString_) return [nil_chk(self->value_) isEqual:that->value_];
    NSString *val = (NSString *) cast_chk(self->value_, [NSString class]);
    NSString *val1 = (NSString *) cast_chk(that->value_, [NSString class]);
    return [((NSString *) nil_chk(val)) java_compareToIgnoreCase:val1] == 0;
  }
  else return [nil_chk(self->value_) isEqual:that->value_];
}

- (NSString *)getKey {
  return self->name_;
}

- (NSString *)getValue {
  if (value_ == nil) return nil;
  return [value_ description];
}

- (NSString *)setValueWithId:(NSString *)value {
  NSString *retval = self->value_ == nil ? nil : value;
  JreStrongAssign(&self->value_, value);
  return retval;
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk([((NSString *) nil_chk([self encode])) lowercaseString])) hash]);
}

- (void)dealloc {
  RELEASE_(separator_);
  RELEASE_(quotes_);
  RELEASE_(name_);
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 11, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 14, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:withId:withBoolean:);
  methods[2].selector = @selector(initWithNSString:withId:);
  methods[3].selector = @selector(setSeparatorWithNSString:);
  methods[4].selector = @selector(setQuotedValue);
  methods[5].selector = @selector(isValueQuoted);
  methods[6].selector = @selector(getName);
  methods[7].selector = @selector(getValueAsObject);
  methods[8].selector = @selector(getValueAsObjectWithBoolean:);
  methods[9].selector = @selector(setNameWithNSString:);
  methods[10].selector = @selector(setValueAsObjectWithId:);
  methods[11].selector = @selector(encode);
  methods[12].selector = @selector(encodeWithJavaLangStringBuilder:);
  methods[13].selector = @selector(java_clone);
  methods[14].selector = @selector(isEqual:);
  methods[15].selector = @selector(getKey);
  methods[16].selector = @selector(getValue);
  methods[17].selector = @selector(setValueWithId:);
  methods[18].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = AndroidGovNistCoreNameValue_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "isQuotedString_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "isFlagParameter_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "separator_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "quotes_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSObject;Z", "LNSString;LNSObject;", "setSeparator", "LNSString;", "getValueAsObject", "Z", "setName", "setValueAsObject", "LNSObject;", "encode", "LJavaLangStringBuilder;", "clone", "equals", "setValue", "hashCode", "Landroid/gov/nist/core/GenericObject;Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _AndroidGovNistCoreNameValue = { "NameValue", "android.gov.nist.core", ptrTable, methods, fields, 7, 0x1, 19, 7, -1, -1, -1, 15, -1 };
  return &_AndroidGovNistCoreNameValue;
}

@end

void AndroidGovNistCoreNameValue_init(AndroidGovNistCoreNameValue *self) {
  AndroidGovNistCoreGenericObject_init(self);
  JreStrongAssign(&self->name_, nil);
  JreStrongAssign(&self->value_, @"");
  JreStrongAssign(&self->separator_, AndroidGovNistCoreSeparators_EQUALS);
  JreStrongAssign(&self->quotes_, @"");
  self->isFlagParameter_ = false;
}

AndroidGovNistCoreNameValue *new_AndroidGovNistCoreNameValue_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistCoreNameValue, init)
}

AndroidGovNistCoreNameValue *create_AndroidGovNistCoreNameValue_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistCoreNameValue, init)
}

void AndroidGovNistCoreNameValue_initWithNSString_withId_withBoolean_(AndroidGovNistCoreNameValue *self, NSString *n, id v, jboolean isFlag) {
  AndroidGovNistCoreGenericObject_init(self);
  JreStrongAssign(&self->name_, n);
  JreStrongAssign(&self->value_, v);
  JreStrongAssign(&self->separator_, AndroidGovNistCoreSeparators_EQUALS);
  JreStrongAssign(&self->quotes_, @"");
  self->isFlagParameter_ = isFlag;
}

AndroidGovNistCoreNameValue *new_AndroidGovNistCoreNameValue_initWithNSString_withId_withBoolean_(NSString *n, id v, jboolean isFlag) {
  J2OBJC_NEW_IMPL(AndroidGovNistCoreNameValue, initWithNSString_withId_withBoolean_, n, v, isFlag)
}

AndroidGovNistCoreNameValue *create_AndroidGovNistCoreNameValue_initWithNSString_withId_withBoolean_(NSString *n, id v, jboolean isFlag) {
  J2OBJC_CREATE_IMPL(AndroidGovNistCoreNameValue, initWithNSString_withId_withBoolean_, n, v, isFlag)
}

void AndroidGovNistCoreNameValue_initWithNSString_withId_(AndroidGovNistCoreNameValue *self, NSString *n, id v) {
  AndroidGovNistCoreNameValue_initWithNSString_withId_withBoolean_(self, n, v, false);
}

AndroidGovNistCoreNameValue *new_AndroidGovNistCoreNameValue_initWithNSString_withId_(NSString *n, id v) {
  J2OBJC_NEW_IMPL(AndroidGovNistCoreNameValue, initWithNSString_withId_, n, v)
}

AndroidGovNistCoreNameValue *create_AndroidGovNistCoreNameValue_initWithNSString_withId_(NSString *n, id v) {
  J2OBJC_CREATE_IMPL(AndroidGovNistCoreNameValue, initWithNSString_withId_, n, v)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistCoreNameValue)
