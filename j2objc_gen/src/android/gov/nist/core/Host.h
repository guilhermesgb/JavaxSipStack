//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/core/Host.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistCoreHost")
#ifdef RESTRICT_AndroidGovNistCoreHost
#define INCLUDE_ALL_AndroidGovNistCoreHost 0
#else
#define INCLUDE_ALL_AndroidGovNistCoreHost 1
#endif
#undef RESTRICT_AndroidGovNistCoreHost

#if !defined (AndroidGovNistCoreHost_) && (INCLUDE_ALL_AndroidGovNistCoreHost || defined(INCLUDE_AndroidGovNistCoreHost))
#define AndroidGovNistCoreHost_

#define RESTRICT_AndroidGovNistCoreGenericObject 1
#define INCLUDE_AndroidGovNistCoreGenericObject 1
#include "android/gov/nist/core/GenericObject.h"

@class JavaLangStringBuilder;
@class JavaNetInetAddress;

@interface AndroidGovNistCoreHost : AndroidGovNistCoreGenericObject {
 @public
  NSString *hostname_;
  jint addressType_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)hostName;

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)addrType;

- (NSString *)encode;

- (JavaLangStringBuilder *)encodeWithJavaLangStringBuilder:(JavaLangStringBuilder *)buffer;

- (jboolean)isEqual:(id)obj;

- (NSString *)getAddress;

- (NSString *)getHostname;

- (JavaNetInetAddress *)getInetAddress;

- (NSString *)getIpAddress;

- (NSUInteger)hash;

- (jboolean)isHostname;

- (jboolean)isIPAddress;

+ (jboolean)isIPv6ReferenceWithNSString:(NSString *)address;

- (void)setAddressWithNSString:(NSString *)address;

- (void)setHostAddressWithNSString:(NSString *)address;

- (void)setHostnameWithNSString:(NSString *)h;

@end

J2OBJC_STATIC_INIT(AndroidGovNistCoreHost)

J2OBJC_FIELD_SETTER(AndroidGovNistCoreHost, hostname_, NSString *)

inline jint AndroidGovNistCoreHost_get_HOSTNAME();
#define AndroidGovNistCoreHost_HOSTNAME 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreHost, HOSTNAME, jint)

inline jint AndroidGovNistCoreHost_get_IPV4ADDRESS();
#define AndroidGovNistCoreHost_IPV4ADDRESS 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreHost, IPV4ADDRESS, jint)

inline jint AndroidGovNistCoreHost_get_IPV6ADDRESS();
#define AndroidGovNistCoreHost_IPV6ADDRESS 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreHost, IPV6ADDRESS, jint)

FOUNDATION_EXPORT void AndroidGovNistCoreHost_init(AndroidGovNistCoreHost *self);

FOUNDATION_EXPORT AndroidGovNistCoreHost *new_AndroidGovNistCoreHost_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreHost *create_AndroidGovNistCoreHost_init();

FOUNDATION_EXPORT void AndroidGovNistCoreHost_initWithNSString_(AndroidGovNistCoreHost *self, NSString *hostName);

FOUNDATION_EXPORT AndroidGovNistCoreHost *new_AndroidGovNistCoreHost_initWithNSString_(NSString *hostName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreHost *create_AndroidGovNistCoreHost_initWithNSString_(NSString *hostName);

FOUNDATION_EXPORT void AndroidGovNistCoreHost_initWithNSString_withInt_(AndroidGovNistCoreHost *self, NSString *name, jint addrType);

FOUNDATION_EXPORT AndroidGovNistCoreHost *new_AndroidGovNistCoreHost_initWithNSString_withInt_(NSString *name, jint addrType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreHost *create_AndroidGovNistCoreHost_initWithNSString_withInt_(NSString *name, jint addrType);

FOUNDATION_EXPORT jboolean AndroidGovNistCoreHost_isIPv6ReferenceWithNSString_(NSString *address);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistCoreHost)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistCoreHost")
