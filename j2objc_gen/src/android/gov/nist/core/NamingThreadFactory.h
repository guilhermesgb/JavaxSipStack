//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/core/NamingThreadFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistCoreNamingThreadFactory")
#ifdef RESTRICT_AndroidGovNistCoreNamingThreadFactory
#define INCLUDE_ALL_AndroidGovNistCoreNamingThreadFactory 0
#else
#define INCLUDE_ALL_AndroidGovNistCoreNamingThreadFactory 1
#endif
#undef RESTRICT_AndroidGovNistCoreNamingThreadFactory

#if !defined (AndroidGovNistCoreNamingThreadFactory_) && (INCLUDE_ALL_AndroidGovNistCoreNamingThreadFactory || defined(INCLUDE_AndroidGovNistCoreNamingThreadFactory))
#define AndroidGovNistCoreNamingThreadFactory_

#define RESTRICT_JavaUtilConcurrentThreadFactory 1
#define INCLUDE_JavaUtilConcurrentThreadFactory 1
#include "java/util/concurrent/ThreadFactory.h"

@class JavaLangThread;
@protocol JavaLangRunnable;

@interface AndroidGovNistCoreNamingThreadFactory : NSObject < JavaUtilConcurrentThreadFactory >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)baseName;

- (instancetype)initWithNSString:(NSString *)baseName
withJavaUtilConcurrentThreadFactory:(id<JavaUtilConcurrentThreadFactory>)delegate;

- (JavaLangThread *)newThreadWithJavaLangRunnable:(id<JavaLangRunnable>)r OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistCoreNamingThreadFactory)

FOUNDATION_EXPORT void AndroidGovNistCoreNamingThreadFactory_initWithNSString_(AndroidGovNistCoreNamingThreadFactory *self, NSString *baseName);

FOUNDATION_EXPORT AndroidGovNistCoreNamingThreadFactory *new_AndroidGovNistCoreNamingThreadFactory_initWithNSString_(NSString *baseName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreNamingThreadFactory *create_AndroidGovNistCoreNamingThreadFactory_initWithNSString_(NSString *baseName);

FOUNDATION_EXPORT void AndroidGovNistCoreNamingThreadFactory_initWithNSString_withJavaUtilConcurrentThreadFactory_(AndroidGovNistCoreNamingThreadFactory *self, NSString *baseName, id<JavaUtilConcurrentThreadFactory> delegate);

FOUNDATION_EXPORT AndroidGovNistCoreNamingThreadFactory *new_AndroidGovNistCoreNamingThreadFactory_initWithNSString_withJavaUtilConcurrentThreadFactory_(NSString *baseName, id<JavaUtilConcurrentThreadFactory> delegate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreNamingThreadFactory *create_AndroidGovNistCoreNamingThreadFactory_initWithNSString_withJavaUtilConcurrentThreadFactory_(NSString *baseName, id<JavaUtilConcurrentThreadFactory> delegate);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistCoreNamingThreadFactory)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistCoreNamingThreadFactory")
