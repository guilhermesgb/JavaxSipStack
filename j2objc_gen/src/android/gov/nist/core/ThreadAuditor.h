//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/core/ThreadAuditor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistCoreThreadAuditor")
#ifdef RESTRICT_AndroidGovNistCoreThreadAuditor
#define INCLUDE_ALL_AndroidGovNistCoreThreadAuditor 0
#else
#define INCLUDE_ALL_AndroidGovNistCoreThreadAuditor 1
#endif
#undef RESTRICT_AndroidGovNistCoreThreadAuditor

#if !defined (AndroidGovNistCoreThreadAuditor_) && (INCLUDE_ALL_AndroidGovNistCoreThreadAuditor || defined(INCLUDE_AndroidGovNistCoreThreadAuditor))
#define AndroidGovNistCoreThreadAuditor_

@class AndroidGovNistCoreThreadAuditor_ThreadHandle;
@class JavaLangThread;

@interface AndroidGovNistCoreThreadAuditor : NSObject

#pragma mark Public

- (instancetype)init;

- (AndroidGovNistCoreThreadAuditor_ThreadHandle *)addCurrentThread;

- (NSString *)auditThreads;

- (jlong)getPingIntervalInMillisecs;

- (jboolean)isEnabled;

- (void)pingWithAndroidGovNistCoreThreadAuditor_ThreadHandle:(AndroidGovNistCoreThreadAuditor_ThreadHandle *)threadHandle;

- (void)removeThreadWithJavaLangThread:(JavaLangThread *)thread;

- (void)reset;

- (void)setPingIntervalInMillisecsWithLong:(jlong)value;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistCoreThreadAuditor)

FOUNDATION_EXPORT void AndroidGovNistCoreThreadAuditor_init(AndroidGovNistCoreThreadAuditor *self);

FOUNDATION_EXPORT AndroidGovNistCoreThreadAuditor *new_AndroidGovNistCoreThreadAuditor_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreThreadAuditor *create_AndroidGovNistCoreThreadAuditor_init();

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistCoreThreadAuditor)

#endif

#if !defined (AndroidGovNistCoreThreadAuditor_ThreadHandle_) && (INCLUDE_ALL_AndroidGovNistCoreThreadAuditor || defined(INCLUDE_AndroidGovNistCoreThreadAuditor_ThreadHandle))
#define AndroidGovNistCoreThreadAuditor_ThreadHandle_

@class AndroidGovNistCoreThreadAuditor;
@class JavaLangThread;

@interface AndroidGovNistCoreThreadAuditor_ThreadHandle : NSObject

#pragma mark Public

- (instancetype)initWithAndroidGovNistCoreThreadAuditor:(AndroidGovNistCoreThreadAuditor *)outer$
                    withAndroidGovNistCoreThreadAuditor:(AndroidGovNistCoreThreadAuditor *)aThreadAuditor;

- (jlong)getPingIntervalInMillisecs;

- (JavaLangThread *)getThread;

- (jboolean)isThreadActive;

- (void)ping;

- (NSString *)description;

#pragma mark Protected

- (void)setThreadActiveWithBoolean:(jboolean)value;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistCoreThreadAuditor_ThreadHandle)

FOUNDATION_EXPORT void AndroidGovNistCoreThreadAuditor_ThreadHandle_initWithAndroidGovNistCoreThreadAuditor_withAndroidGovNistCoreThreadAuditor_(AndroidGovNistCoreThreadAuditor_ThreadHandle *self, AndroidGovNistCoreThreadAuditor *outer$, AndroidGovNistCoreThreadAuditor *aThreadAuditor);

FOUNDATION_EXPORT AndroidGovNistCoreThreadAuditor_ThreadHandle *new_AndroidGovNistCoreThreadAuditor_ThreadHandle_initWithAndroidGovNistCoreThreadAuditor_withAndroidGovNistCoreThreadAuditor_(AndroidGovNistCoreThreadAuditor *outer$, AndroidGovNistCoreThreadAuditor *aThreadAuditor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreThreadAuditor_ThreadHandle *create_AndroidGovNistCoreThreadAuditor_ThreadHandle_initWithAndroidGovNistCoreThreadAuditor_withAndroidGovNistCoreThreadAuditor_(AndroidGovNistCoreThreadAuditor *outer$, AndroidGovNistCoreThreadAuditor *aThreadAuditor);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistCoreThreadAuditor_ThreadHandle)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistCoreThreadAuditor")
