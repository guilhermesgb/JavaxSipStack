//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/core/StringTokenizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistCoreStringTokenizer")
#ifdef RESTRICT_AndroidGovNistCoreStringTokenizer
#define INCLUDE_ALL_AndroidGovNistCoreStringTokenizer 0
#else
#define INCLUDE_ALL_AndroidGovNistCoreStringTokenizer 1
#endif
#undef RESTRICT_AndroidGovNistCoreStringTokenizer

#if !defined (AndroidGovNistCoreStringTokenizer_) && (INCLUDE_ALL_AndroidGovNistCoreStringTokenizer || defined(INCLUDE_AndroidGovNistCoreStringTokenizer))
#define AndroidGovNistCoreStringTokenizer_

@class IOSCharArray;
@class JavaUtilVector;

@interface AndroidGovNistCoreStringTokenizer : NSObject {
 @public
  IOSCharArray *buffer_;
  jint bufferLen_;
  jint ptr_;
  jint savedPtr_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)buffer;

- (void)consume;

- (void)consumeWithInt:(jint)k;

- (NSString *)getLine;

- (JavaUtilVector *)getLines;

- (jchar)getNextChar;

- (NSString *)getNextTokenWithChar:(jchar)delim;

+ (NSString *)getSDPFieldNameWithNSString:(NSString *)line;

- (jboolean)hasMoreChars;

+ (jboolean)isAlphaWithChar:(jchar)ch;

+ (jboolean)isAlphaDigitWithChar:(jchar)ch;

+ (jboolean)isDigitWithChar:(jchar)ch;

+ (jboolean)isHexDigitWithChar:(jchar)ch;

- (jchar)lookAhead;

- (jchar)lookAheadWithInt:(jint)k;

- (NSString *)nextToken;

- (NSString *)peekLine;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidGovNistCoreStringTokenizer)

J2OBJC_FIELD_SETTER(AndroidGovNistCoreStringTokenizer, buffer_, IOSCharArray *)

FOUNDATION_EXPORT void AndroidGovNistCoreStringTokenizer_init(AndroidGovNistCoreStringTokenizer *self);

FOUNDATION_EXPORT AndroidGovNistCoreStringTokenizer *new_AndroidGovNistCoreStringTokenizer_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreStringTokenizer *create_AndroidGovNistCoreStringTokenizer_init();

FOUNDATION_EXPORT void AndroidGovNistCoreStringTokenizer_initWithNSString_(AndroidGovNistCoreStringTokenizer *self, NSString *buffer);

FOUNDATION_EXPORT AndroidGovNistCoreStringTokenizer *new_AndroidGovNistCoreStringTokenizer_initWithNSString_(NSString *buffer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreStringTokenizer *create_AndroidGovNistCoreStringTokenizer_initWithNSString_(NSString *buffer);

FOUNDATION_EXPORT jboolean AndroidGovNistCoreStringTokenizer_isHexDigitWithChar_(jchar ch);

FOUNDATION_EXPORT jboolean AndroidGovNistCoreStringTokenizer_isAlphaWithChar_(jchar ch);

FOUNDATION_EXPORT jboolean AndroidGovNistCoreStringTokenizer_isDigitWithChar_(jchar ch);

FOUNDATION_EXPORT jboolean AndroidGovNistCoreStringTokenizer_isAlphaDigitWithChar_(jchar ch);

FOUNDATION_EXPORT NSString *AndroidGovNistCoreStringTokenizer_getSDPFieldNameWithNSString_(NSString *line);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistCoreStringTokenizer)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistCoreStringTokenizer")
