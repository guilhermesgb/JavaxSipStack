//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/core/LexerCore.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistCoreLexerCore")
#ifdef RESTRICT_AndroidGovNistCoreLexerCore
#define INCLUDE_ALL_AndroidGovNistCoreLexerCore 0
#else
#define INCLUDE_ALL_AndroidGovNistCoreLexerCore 1
#endif
#undef RESTRICT_AndroidGovNistCoreLexerCore

#if !defined (AndroidGovNistCoreLexerCore_) && (INCLUDE_ALL_AndroidGovNistCoreLexerCore || defined(INCLUDE_AndroidGovNistCoreLexerCore))
#define AndroidGovNistCoreLexerCore_

#define RESTRICT_AndroidGovNistCoreStringTokenizer 1
#define INCLUDE_AndroidGovNistCoreStringTokenizer 1
#include "android/gov/nist/core/StringTokenizer.h"

@class AndroidGovNistCoreToken;
@class IOSCharArray;
@class IOSObjectArray;
@class JavaTextParseException;
@class JavaUtilConcurrentConcurrentHashMap;
@protocol JavaUtilMap;

@interface AndroidGovNistCoreLexerCore : AndroidGovNistCoreStringTokenizer {
 @public
  id<JavaUtilMap> currentLexer_;
  NSString *currentLexerName_;
  AndroidGovNistCoreToken *currentMatch_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)lexerName
                    withNSString:(NSString *)buffer;

- (NSString *)byteStringNoComma;

- (NSString *)byteStringNoSemicolon;

- (NSString *)byteStringNoSlash;

+ (NSString *)charAsStringWithChar:(jchar)ch;

- (NSString *)charAsStringWithInt:(jint)nchars;

- (NSString *)comment;

- (void)consumeValidCharsWithCharArray:(IOSCharArray *)validChars;

- (JavaTextParseException *)createParseException;

- (NSString *)getBuffer;

- (NSString *)getNextId;

- (NSString *)getNextIdNoWhiteSpace;

- (AndroidGovNistCoreToken *)getNextToken;

- (jint)getPtr;

- (NSString *)getRest;

- (NSString *)getStringWithChar:(jchar)c;

+ (jboolean)isTokenCharWithChar:(jchar)c;

- (NSString *)lookupTokenWithInt:(jint)value;

- (jint)markInputPosition;

- (AndroidGovNistCoreToken *)matchWithInt:(jint)tok;

- (NSString *)number;

- (NSString *)peekNextId;

- (AndroidGovNistCoreToken *)peekNextToken;

- (IOSObjectArray *)peekNextTokenWithInt:(jint)ntokens;

- (NSString *)quotedString;

- (void)rewindInputPositionWithInt:(jint)position;

- (void)selectLexerWithNSString:(NSString *)lexerName;

- (void)SPorHT;

- (jboolean)startsId;

- (jboolean)startsIdNoWhiteSpace;

- (jboolean)startsSafeToken;

- (NSString *)ttoken;

- (NSString *)ttokenNoWhiteSpace;

- (NSString *)ttokenSafe;

#pragma mark Protected

- (instancetype)init;

- (void)addKeywordWithNSString:(NSString *)name
                       withInt:(jint)value;

@end

J2OBJC_STATIC_INIT(AndroidGovNistCoreLexerCore)

J2OBJC_FIELD_SETTER(AndroidGovNistCoreLexerCore, currentLexer_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(AndroidGovNistCoreLexerCore, currentLexerName_, NSString *)
J2OBJC_FIELD_SETTER(AndroidGovNistCoreLexerCore, currentMatch_, AndroidGovNistCoreToken *)

inline jint AndroidGovNistCoreLexerCore_get_START();
#define AndroidGovNistCoreLexerCore_START 2048
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, START, jint)

inline jint AndroidGovNistCoreLexerCore_get_END();
#define AndroidGovNistCoreLexerCore_END 4096
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, END, jint)

inline jint AndroidGovNistCoreLexerCore_get_ID_NO_WHITESPACE();
#define AndroidGovNistCoreLexerCore_ID_NO_WHITESPACE 4093
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, ID_NO_WHITESPACE, jint)

inline jint AndroidGovNistCoreLexerCore_get_ID();
#define AndroidGovNistCoreLexerCore_ID 4095
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, ID, jint)

inline jint AndroidGovNistCoreLexerCore_get_SAFE();
#define AndroidGovNistCoreLexerCore_SAFE 4094
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, SAFE, jint)

inline jint AndroidGovNistCoreLexerCore_get_WHITESPACE();
#define AndroidGovNistCoreLexerCore_WHITESPACE 4097
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, WHITESPACE, jint)

inline jint AndroidGovNistCoreLexerCore_get_DIGIT();
#define AndroidGovNistCoreLexerCore_DIGIT 4098
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, DIGIT, jint)

inline jint AndroidGovNistCoreLexerCore_get_ALPHA();
#define AndroidGovNistCoreLexerCore_ALPHA 4099
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, ALPHA, jint)

inline jint AndroidGovNistCoreLexerCore_get_BACKSLASH();
#define AndroidGovNistCoreLexerCore_BACKSLASH 92
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, BACKSLASH, jint)

inline jint AndroidGovNistCoreLexerCore_get_QUOTE();
#define AndroidGovNistCoreLexerCore_QUOTE 39
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, QUOTE, jint)

inline jint AndroidGovNistCoreLexerCore_get_AT();
#define AndroidGovNistCoreLexerCore_AT 64
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, AT, jint)

inline jint AndroidGovNistCoreLexerCore_get_SP();
#define AndroidGovNistCoreLexerCore_SP 32
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, SP, jint)

inline jint AndroidGovNistCoreLexerCore_get_HT();
#define AndroidGovNistCoreLexerCore_HT 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, HT, jint)

inline jint AndroidGovNistCoreLexerCore_get_COLON();
#define AndroidGovNistCoreLexerCore_COLON 58
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, COLON, jint)

inline jint AndroidGovNistCoreLexerCore_get_STAR();
#define AndroidGovNistCoreLexerCore_STAR 42
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, STAR, jint)

inline jint AndroidGovNistCoreLexerCore_get_DOLLAR();
#define AndroidGovNistCoreLexerCore_DOLLAR 36
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, DOLLAR, jint)

inline jint AndroidGovNistCoreLexerCore_get_PLUS();
#define AndroidGovNistCoreLexerCore_PLUS 43
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, PLUS, jint)

inline jint AndroidGovNistCoreLexerCore_get_POUND();
#define AndroidGovNistCoreLexerCore_POUND 35
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, POUND, jint)

inline jint AndroidGovNistCoreLexerCore_get_MINUS();
#define AndroidGovNistCoreLexerCore_MINUS 45
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, MINUS, jint)

inline jint AndroidGovNistCoreLexerCore_get_DOUBLEQUOTE();
#define AndroidGovNistCoreLexerCore_DOUBLEQUOTE 34
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, DOUBLEQUOTE, jint)

inline jint AndroidGovNistCoreLexerCore_get_TILDE();
#define AndroidGovNistCoreLexerCore_TILDE 126
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, TILDE, jint)

inline jint AndroidGovNistCoreLexerCore_get_BACK_QUOTE();
#define AndroidGovNistCoreLexerCore_BACK_QUOTE 96
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, BACK_QUOTE, jint)

inline jint AndroidGovNistCoreLexerCore_get_NULL();
#define AndroidGovNistCoreLexerCore_NULL 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, NULL, jint)

inline jint AndroidGovNistCoreLexerCore_get_EQUALS();
#define AndroidGovNistCoreLexerCore_EQUALS 61
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, EQUALS, jint)

inline jint AndroidGovNistCoreLexerCore_get_SEMICOLON();
#define AndroidGovNistCoreLexerCore_SEMICOLON 59
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, SEMICOLON, jint)

inline jint AndroidGovNistCoreLexerCore_get_SLASH();
#define AndroidGovNistCoreLexerCore_SLASH 47
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, SLASH, jint)

inline jint AndroidGovNistCoreLexerCore_get_L_SQUARE_BRACKET();
#define AndroidGovNistCoreLexerCore_L_SQUARE_BRACKET 91
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, L_SQUARE_BRACKET, jint)

inline jint AndroidGovNistCoreLexerCore_get_R_SQUARE_BRACKET();
#define AndroidGovNistCoreLexerCore_R_SQUARE_BRACKET 93
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, R_SQUARE_BRACKET, jint)

inline jint AndroidGovNistCoreLexerCore_get_R_CURLY();
#define AndroidGovNistCoreLexerCore_R_CURLY 125
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, R_CURLY, jint)

inline jint AndroidGovNistCoreLexerCore_get_L_CURLY();
#define AndroidGovNistCoreLexerCore_L_CURLY 123
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, L_CURLY, jint)

inline jint AndroidGovNistCoreLexerCore_get_HAT();
#define AndroidGovNistCoreLexerCore_HAT 94
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, HAT, jint)

inline jint AndroidGovNistCoreLexerCore_get_BAR();
#define AndroidGovNistCoreLexerCore_BAR 124
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, BAR, jint)

inline jint AndroidGovNistCoreLexerCore_get_DOT();
#define AndroidGovNistCoreLexerCore_DOT 46
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, DOT, jint)

inline jint AndroidGovNistCoreLexerCore_get_EXCLAMATION();
#define AndroidGovNistCoreLexerCore_EXCLAMATION 33
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, EXCLAMATION, jint)

inline jint AndroidGovNistCoreLexerCore_get_LPAREN();
#define AndroidGovNistCoreLexerCore_LPAREN 40
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, LPAREN, jint)

inline jint AndroidGovNistCoreLexerCore_get_RPAREN();
#define AndroidGovNistCoreLexerCore_RPAREN 41
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, RPAREN, jint)

inline jint AndroidGovNistCoreLexerCore_get_GREATER_THAN();
#define AndroidGovNistCoreLexerCore_GREATER_THAN 62
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, GREATER_THAN, jint)

inline jint AndroidGovNistCoreLexerCore_get_LESS_THAN();
#define AndroidGovNistCoreLexerCore_LESS_THAN 60
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, LESS_THAN, jint)

inline jint AndroidGovNistCoreLexerCore_get_PERCENT();
#define AndroidGovNistCoreLexerCore_PERCENT 37
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, PERCENT, jint)

inline jint AndroidGovNistCoreLexerCore_get_QUESTION();
#define AndroidGovNistCoreLexerCore_QUESTION 63
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, QUESTION, jint)

inline jint AndroidGovNistCoreLexerCore_get_AND();
#define AndroidGovNistCoreLexerCore_AND 38
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, AND, jint)

inline jint AndroidGovNistCoreLexerCore_get_UNDERSCORE();
#define AndroidGovNistCoreLexerCore_UNDERSCORE 95
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, UNDERSCORE, jint)

inline JavaUtilConcurrentConcurrentHashMap *AndroidGovNistCoreLexerCore_get_globalSymbolTable();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilConcurrentConcurrentHashMap *AndroidGovNistCoreLexerCore_globalSymbolTable;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidGovNistCoreLexerCore, globalSymbolTable, JavaUtilConcurrentConcurrentHashMap *)

inline JavaUtilConcurrentConcurrentHashMap *AndroidGovNistCoreLexerCore_get_lexerTables();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilConcurrentConcurrentHashMap *AndroidGovNistCoreLexerCore_lexerTables;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidGovNistCoreLexerCore, lexerTables, JavaUtilConcurrentConcurrentHashMap *)

inline jchar AndroidGovNistCoreLexerCore_get_ALPHA_VALID_CHARS();
#define AndroidGovNistCoreLexerCore_ALPHA_VALID_CHARS 0xffff
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, ALPHA_VALID_CHARS, jchar)

inline jchar AndroidGovNistCoreLexerCore_get_DIGIT_VALID_CHARS();
#define AndroidGovNistCoreLexerCore_DIGIT_VALID_CHARS 0xfffe
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, DIGIT_VALID_CHARS, jchar)

inline jchar AndroidGovNistCoreLexerCore_get_ALPHADIGIT_VALID_CHARS();
#define AndroidGovNistCoreLexerCore_ALPHADIGIT_VALID_CHARS 0xfffd
J2OBJC_STATIC_FIELD_CONSTANT(AndroidGovNistCoreLexerCore, ALPHADIGIT_VALID_CHARS, jchar)

FOUNDATION_EXPORT void AndroidGovNistCoreLexerCore_init(AndroidGovNistCoreLexerCore *self);

FOUNDATION_EXPORT AndroidGovNistCoreLexerCore *new_AndroidGovNistCoreLexerCore_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreLexerCore *create_AndroidGovNistCoreLexerCore_init();

FOUNDATION_EXPORT void AndroidGovNistCoreLexerCore_initWithNSString_withNSString_(AndroidGovNistCoreLexerCore *self, NSString *lexerName, NSString *buffer);

FOUNDATION_EXPORT AndroidGovNistCoreLexerCore *new_AndroidGovNistCoreLexerCore_initWithNSString_withNSString_(NSString *lexerName, NSString *buffer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreLexerCore *create_AndroidGovNistCoreLexerCore_initWithNSString_withNSString_(NSString *lexerName, NSString *buffer);

FOUNDATION_EXPORT jboolean AndroidGovNistCoreLexerCore_isTokenCharWithChar_(jchar c);

FOUNDATION_EXPORT NSString *AndroidGovNistCoreLexerCore_charAsStringWithChar_(jchar ch);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistCoreLexerCore)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistCoreLexerCore")
