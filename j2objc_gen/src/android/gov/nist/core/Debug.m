//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/core/Debug.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/core/Debug.h"
#include "java/lang/Exception.h"
#include "org/slf4j/Logger.h"
#include "org/slf4j/LoggerFactory.h"

inline id<OrgSlf4jLogger> AndroidGovNistCoreDebug_get_logger();
static id<OrgSlf4jLogger> AndroidGovNistCoreDebug_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidGovNistCoreDebug, logger, id<OrgSlf4jLogger>)

J2OBJC_INITIALIZED_DEFN(AndroidGovNistCoreDebug)

jboolean AndroidGovNistCoreDebug_debug = false;
jboolean AndroidGovNistCoreDebug_parserDebug = false;

@implementation AndroidGovNistCoreDebug

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidGovNistCoreDebug_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)printlnWithNSString:(NSString *)s {
  AndroidGovNistCoreDebug_printlnWithNSString_(s);
}

+ (void)printStackTraceWithJavaLangException:(JavaLangException *)ex {
  AndroidGovNistCoreDebug_printStackTraceWithJavaLangException_(ex);
}

+ (void)logErrorWithNSString:(NSString *)message
       withJavaLangException:(JavaLangException *)ex {
  AndroidGovNistCoreDebug_logErrorWithNSString_withJavaLangException_(message, ex);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(printlnWithNSString:);
  methods[2].selector = @selector(printStackTraceWithJavaLangException:);
  methods[3].selector = @selector(logErrorWithNSString:withJavaLangException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "LOrgSlf4jLogger;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "debug", "Z", .constantValue.asLong = 0, 0x9, -1, 7, -1, -1 },
    { "parserDebug", "Z", .constantValue.asLong = 0, 0x9, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "println", "LNSString;", "printStackTrace", "LJavaLangException;", "logError", "LNSString;LJavaLangException;", &AndroidGovNistCoreDebug_logger, &AndroidGovNistCoreDebug_debug, &AndroidGovNistCoreDebug_parserDebug };
  static const J2ObjcClassInfo _AndroidGovNistCoreDebug = { "Debug", "android.gov.nist.core", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_AndroidGovNistCoreDebug;
}

+ (void)initialize {
  if (self == [AndroidGovNistCoreDebug class]) {
    JreStrongAssign(&AndroidGovNistCoreDebug_logger, OrgSlf4jLoggerFactory_getLoggerWithIOSClass_(AndroidGovNistCoreDebug_class_()));
    J2OBJC_SET_INITIALIZED(AndroidGovNistCoreDebug)
  }
}

@end

void AndroidGovNistCoreDebug_init(AndroidGovNistCoreDebug *self) {
  NSObject_init(self);
}

AndroidGovNistCoreDebug *new_AndroidGovNistCoreDebug_init() {
  J2OBJC_NEW_IMPL(AndroidGovNistCoreDebug, init)
}

AndroidGovNistCoreDebug *create_AndroidGovNistCoreDebug_init() {
  J2OBJC_CREATE_IMPL(AndroidGovNistCoreDebug, init)
}

void AndroidGovNistCoreDebug_printlnWithNSString_(NSString *s) {
  AndroidGovNistCoreDebug_initialize();
  if ((AndroidGovNistCoreDebug_parserDebug || AndroidGovNistCoreDebug_debug)) [((id<OrgSlf4jLogger>) nil_chk(AndroidGovNistCoreDebug_logger)) debugWithNSString:JreStrcat("$C", s, 0x000a)];
}

void AndroidGovNistCoreDebug_printStackTraceWithJavaLangException_(JavaLangException *ex) {
  AndroidGovNistCoreDebug_initialize();
  if ((AndroidGovNistCoreDebug_parserDebug || AndroidGovNistCoreDebug_debug)) {
    [((id<OrgSlf4jLogger>) nil_chk(AndroidGovNistCoreDebug_logger)) errorWithNSString:@"Stack Trace" withNSException:ex];
  }
}

void AndroidGovNistCoreDebug_logErrorWithNSString_withJavaLangException_(NSString *message, JavaLangException *ex) {
  AndroidGovNistCoreDebug_initialize();
  if ((AndroidGovNistCoreDebug_parserDebug || AndroidGovNistCoreDebug_debug)) {
    [((id<OrgSlf4jLogger>) nil_chk(AndroidGovNistCoreDebug_logger)) errorWithNSString:message withNSException:ex];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidGovNistCoreDebug)
