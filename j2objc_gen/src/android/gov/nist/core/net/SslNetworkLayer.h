//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/core/net/SslNetworkLayer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistCoreNetSslNetworkLayer")
#ifdef RESTRICT_AndroidGovNistCoreNetSslNetworkLayer
#define INCLUDE_ALL_AndroidGovNistCoreNetSslNetworkLayer 0
#else
#define INCLUDE_ALL_AndroidGovNistCoreNetSslNetworkLayer 1
#endif
#undef RESTRICT_AndroidGovNistCoreNetSslNetworkLayer

#if !defined (AndroidGovNistCoreNetSslNetworkLayer_) && (INCLUDE_ALL_AndroidGovNistCoreNetSslNetworkLayer || defined(INCLUDE_AndroidGovNistCoreNetSslNetworkLayer))
#define AndroidGovNistCoreNetSslNetworkLayer_

#define RESTRICT_AndroidGovNistCoreNetNetworkLayer 1
#define INCLUDE_AndroidGovNistCoreNetNetworkLayer 1
#include "android/gov/nist/core/net/NetworkLayer.h"

@class AndroidGovNistJavaxSipSipStackImpl;
@class IOSCharArray;
@class IOSObjectArray;
@class JavaNetDatagramSocket;
@class JavaNetInetAddress;
@class JavaNetServerSocket;
@class JavaNetSocket;
@class JavaxNetSslSSLServerSocket;
@class JavaxNetSslSSLSocket;

@interface AndroidGovNistCoreNetSslNetworkLayer : NSObject < AndroidGovNistCoreNetNetworkLayer > {
 @public
  IOSObjectArray *trustAllCerts_;
}

#pragma mark Public

- (instancetype)initWithAndroidGovNistJavaxSipSipStackImpl:(AndroidGovNistJavaxSipSipStackImpl *)sipStack
                                              withNSString:(NSString *)trustStoreFile
                                              withNSString:(NSString *)keyStoreFile
                                             withCharArray:(IOSCharArray *)keyStorePassword
                                             withCharArray:(IOSCharArray *)trustStorePassword
                                              withNSString:(NSString *)keyStoreType
                                              withNSString:(NSString *)trustStoreType;

- (JavaNetDatagramSocket *)createDatagramSocket;

- (JavaNetDatagramSocket *)createDatagramSocketWithInt:(jint)port
                                withJavaNetInetAddress:(JavaNetInetAddress *)laddr;

- (JavaNetServerSocket *)createServerSocketWithInt:(jint)port
                                           withInt:(jint)backlog
                            withJavaNetInetAddress:(JavaNetInetAddress *)bindAddress;

- (JavaNetSocket *)createSocketWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                              withInt:(jint)port;

- (JavaNetSocket *)createSocketWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                              withInt:(jint)port
                               withJavaNetInetAddress:(JavaNetInetAddress *)myAddress;

- (JavaNetSocket *)createSocketWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                              withInt:(jint)port
                               withJavaNetInetAddress:(JavaNetInetAddress *)myAddress
                                              withInt:(jint)myPort;

- (JavaxNetSslSSLServerSocket *)createSSLServerSocketWithInt:(jint)port
                                                     withInt:(jint)backlog
                                      withJavaNetInetAddress:(JavaNetInetAddress *)bindAddress;

- (JavaxNetSslSSLSocket *)createSSLSocketWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                                        withInt:(jint)port;

- (JavaxNetSslSSLSocket *)createSSLSocketWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                                        withInt:(jint)port
                                         withJavaNetInetAddress:(JavaNetInetAddress *)myAddress;

- (void)setSipStackWithAndroidGovNistJavaxSipSipStackImpl:(AndroidGovNistJavaxSipSipStackImpl *)sipStackImpl;

@end

J2OBJC_STATIC_INIT(AndroidGovNistCoreNetSslNetworkLayer)

J2OBJC_FIELD_SETTER(AndroidGovNistCoreNetSslNetworkLayer, trustAllCerts_, IOSObjectArray *)

FOUNDATION_EXPORT void AndroidGovNistCoreNetSslNetworkLayer_initWithAndroidGovNistJavaxSipSipStackImpl_withNSString_withNSString_withCharArray_withCharArray_withNSString_withNSString_(AndroidGovNistCoreNetSslNetworkLayer *self, AndroidGovNistJavaxSipSipStackImpl *sipStack, NSString *trustStoreFile, NSString *keyStoreFile, IOSCharArray *keyStorePassword, IOSCharArray *trustStorePassword, NSString *keyStoreType, NSString *trustStoreType);

FOUNDATION_EXPORT AndroidGovNistCoreNetSslNetworkLayer *new_AndroidGovNistCoreNetSslNetworkLayer_initWithAndroidGovNistJavaxSipSipStackImpl_withNSString_withNSString_withCharArray_withCharArray_withNSString_withNSString_(AndroidGovNistJavaxSipSipStackImpl *sipStack, NSString *trustStoreFile, NSString *keyStoreFile, IOSCharArray *keyStorePassword, IOSCharArray *trustStorePassword, NSString *keyStoreType, NSString *trustStoreType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidGovNistCoreNetSslNetworkLayer *create_AndroidGovNistCoreNetSslNetworkLayer_initWithAndroidGovNistJavaxSipSipStackImpl_withNSString_withNSString_withCharArray_withCharArray_withNSString_withNSString_(AndroidGovNistJavaxSipSipStackImpl *sipStack, NSString *trustStoreFile, NSString *keyStoreFile, IOSCharArray *keyStorePassword, IOSCharArray *trustStorePassword, NSString *keyStoreType, NSString *trustStoreType);

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistCoreNetSslNetworkLayer)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistCoreNetSslNetworkLayer")
