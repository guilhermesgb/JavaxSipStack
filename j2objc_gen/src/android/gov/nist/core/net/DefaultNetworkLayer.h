//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/gov/nist/core/net/DefaultNetworkLayer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidGovNistCoreNetDefaultNetworkLayer")
#ifdef RESTRICT_AndroidGovNistCoreNetDefaultNetworkLayer
#define INCLUDE_ALL_AndroidGovNistCoreNetDefaultNetworkLayer 0
#else
#define INCLUDE_ALL_AndroidGovNistCoreNetDefaultNetworkLayer 1
#endif
#undef RESTRICT_AndroidGovNistCoreNetDefaultNetworkLayer

#if !defined (AndroidGovNistCoreNetDefaultNetworkLayer_) && (INCLUDE_ALL_AndroidGovNistCoreNetDefaultNetworkLayer || defined(INCLUDE_AndroidGovNistCoreNetDefaultNetworkLayer))
#define AndroidGovNistCoreNetDefaultNetworkLayer_

#define RESTRICT_AndroidGovNistCoreNetNetworkLayer 1
#define INCLUDE_AndroidGovNistCoreNetNetworkLayer 1
#include "android/gov/nist/core/net/NetworkLayer.h"

@class AndroidGovNistJavaxSipSipStackImpl;
@class JavaNetDatagramSocket;
@class JavaNetInetAddress;
@class JavaNetServerSocket;
@class JavaNetSocket;
@class JavaxNetSslSSLServerSocket;
@class JavaxNetSslSSLSocket;

@interface AndroidGovNistCoreNetDefaultNetworkLayer : NSObject < AndroidGovNistCoreNetNetworkLayer >

#pragma mark Public

- (JavaNetDatagramSocket *)createDatagramSocket;

- (JavaNetDatagramSocket *)createDatagramSocketWithInt:(jint)port
                                withJavaNetInetAddress:(JavaNetInetAddress *)laddr;

- (JavaNetServerSocket *)createServerSocketWithInt:(jint)port
                                           withInt:(jint)backlog
                            withJavaNetInetAddress:(JavaNetInetAddress *)bindAddress;

- (JavaNetSocket *)createSocketWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                              withInt:(jint)port;

- (JavaNetSocket *)createSocketWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                              withInt:(jint)port
                               withJavaNetInetAddress:(JavaNetInetAddress *)myAddress;

- (JavaNetSocket *)createSocketWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                              withInt:(jint)port
                               withJavaNetInetAddress:(JavaNetInetAddress *)myAddress
                                              withInt:(jint)myPort;

- (JavaxNetSslSSLServerSocket *)createSSLServerSocketWithInt:(jint)port
                                                     withInt:(jint)backlog
                                      withJavaNetInetAddress:(JavaNetInetAddress *)bindAddress;

- (JavaxNetSslSSLSocket *)createSSLSocketWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                                        withInt:(jint)port;

- (JavaxNetSslSSLSocket *)createSSLSocketWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                                        withInt:(jint)port
                                         withJavaNetInetAddress:(JavaNetInetAddress *)myAddress;

- (void)setSipStackWithAndroidGovNistJavaxSipSipStackImpl:(AndroidGovNistJavaxSipSipStackImpl *)sipStackImpl;

@end

J2OBJC_STATIC_INIT(AndroidGovNistCoreNetDefaultNetworkLayer)

inline AndroidGovNistCoreNetDefaultNetworkLayer *AndroidGovNistCoreNetDefaultNetworkLayer_get_SINGLETON();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidGovNistCoreNetDefaultNetworkLayer *AndroidGovNistCoreNetDefaultNetworkLayer_SINGLETON;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidGovNistCoreNetDefaultNetworkLayer, SINGLETON, AndroidGovNistCoreNetDefaultNetworkLayer *)

J2OBJC_TYPE_LITERAL_HEADER(AndroidGovNistCoreNetDefaultNetworkLayer)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidGovNistCoreNetDefaultNetworkLayer")
