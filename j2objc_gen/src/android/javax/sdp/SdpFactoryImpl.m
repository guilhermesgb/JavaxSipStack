//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sdp/SdpFactoryImpl.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "android/gov/nist/javax/sdp/MediaDescriptionImpl.h"
#include "android/gov/nist/javax/sdp/SessionDescriptionImpl.h"
#include "android/gov/nist/javax/sdp/TimeDescriptionImpl.h"
#include "android/gov/nist/javax/sdp/fields/AttributeField.h"
#include "android/gov/nist/javax/sdp/fields/BandwidthField.h"
#include "android/gov/nist/javax/sdp/fields/ConnectionField.h"
#include "android/gov/nist/javax/sdp/fields/EmailField.h"
#include "android/gov/nist/javax/sdp/fields/InformationField.h"
#include "android/gov/nist/javax/sdp/fields/KeyField.h"
#include "android/gov/nist/javax/sdp/fields/MediaField.h"
#include "android/gov/nist/javax/sdp/fields/OriginField.h"
#include "android/gov/nist/javax/sdp/fields/PhoneField.h"
#include "android/gov/nist/javax/sdp/fields/ProtoVersionField.h"
#include "android/gov/nist/javax/sdp/fields/RepeatField.h"
#include "android/gov/nist/javax/sdp/fields/SDPKeywords.h"
#include "android/gov/nist/javax/sdp/fields/SessionNameField.h"
#include "android/gov/nist/javax/sdp/fields/TimeField.h"
#include "android/gov/nist/javax/sdp/fields/URIField.h"
#include "android/gov/nist/javax/sdp/fields/ZoneField.h"
#include "android/gov/nist/javax/sdp/parser/SDPAnnounceParser.h"
#include "android/javax/sdp/Attribute.h"
#include "android/javax/sdp/BandWidth.h"
#include "android/javax/sdp/Connection.h"
#include "android/javax/sdp/EMail.h"
#include "android/javax/sdp/Info.h"
#include "android/javax/sdp/Key.h"
#include "android/javax/sdp/Media.h"
#include "android/javax/sdp/MediaDescription.h"
#include "android/javax/sdp/Origin.h"
#include "android/javax/sdp/Phone.h"
#include "android/javax/sdp/RepeatTime.h"
#include "android/javax/sdp/SdpConstants.h"
#include "android/javax/sdp/SdpException.h"
#include "android/javax/sdp/SdpFactoryImpl.h"
#include "android/javax/sdp/SdpParseException.h"
#include "android/javax/sdp/SessionDescription.h"
#include "android/javax/sdp/SessionName.h"
#include "android/javax/sdp/Time.h"
#include "android/javax/sdp/TimeDescription.h"
#include "android/javax/sdp/TimeZoneAdjustment.h"
#include "android/javax/sdp/URI.h"
#include "android/javax/sdp/Version.h"
#include "java/io/PrintStream.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/net/InetAddress.h"
#include "java/net/URL.h"
#include "java/net/UnknownHostException.h"
#include "java/text/ParseException.h"
#include "java/util/Date.h"
#include "java/util/Hashtable.h"
#include "java/util/Vector.h"

@interface AndroidJavaxSdpSdpFactoryImpl ()

- (instancetype)init;

@end

inline AndroidJavaxSdpSdpFactoryImpl *AndroidJavaxSdpSdpFactoryImpl_get_singletonInstance();
static AndroidJavaxSdpSdpFactoryImpl *AndroidJavaxSdpSdpFactoryImpl_singletonInstance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidJavaxSdpSdpFactoryImpl, singletonInstance, AndroidJavaxSdpSdpFactoryImpl *)

__attribute__((unused)) static void AndroidJavaxSdpSdpFactoryImpl_init(AndroidJavaxSdpSdpFactoryImpl *self);

__attribute__((unused)) static AndroidJavaxSdpSdpFactoryImpl *new_AndroidJavaxSdpSdpFactoryImpl_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidJavaxSdpSdpFactoryImpl *create_AndroidJavaxSdpSdpFactoryImpl_init();

J2OBJC_INITIALIZED_DEFN(AndroidJavaxSdpSdpFactoryImpl)

@implementation AndroidJavaxSdpSdpFactoryImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidJavaxSdpSdpFactoryImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (AndroidJavaxSdpSdpFactoryImpl *)getInstance {
  return AndroidJavaxSdpSdpFactoryImpl_getInstance();
}

- (id<AndroidJavaxSdpSessionDescription>)createSessionDescription {
  AndroidGovNistJavaxSdpSessionDescriptionImpl *sessionDescriptionImpl = create_AndroidGovNistJavaxSdpSessionDescriptionImpl_init();
  AndroidGovNistJavaxSdpFieldsProtoVersionField *ProtoVersionField = create_AndroidGovNistJavaxSdpFieldsProtoVersionField_init();
  [ProtoVersionField setVersionWithInt:0];
  [sessionDescriptionImpl setVersionWithAndroidJavaxSdpVersion:ProtoVersionField];
  AndroidGovNistJavaxSdpFieldsOriginField *originImpl = nil;
  @try {
    originImpl = (AndroidGovNistJavaxSdpFieldsOriginField *) cast_chk([self createOriginWithNSString:@"user" withNSString:[((JavaNetInetAddress *) nil_chk(JavaNetInetAddress_getLocalHost())) getHostAddress]], [AndroidGovNistJavaxSdpFieldsOriginField class]);
  }
  @catch (JavaNetUnknownHostException *e) {
    [((JavaNetUnknownHostException *) nil_chk(e)) printStackTrace];
  }
  [sessionDescriptionImpl setOriginWithAndroidJavaxSdpOrigin:originImpl];
  AndroidGovNistJavaxSdpFieldsSessionNameField *sessionNameImpl = create_AndroidGovNistJavaxSdpFieldsSessionNameField_init();
  [sessionNameImpl setValueWithNSString:@"-"];
  [sessionDescriptionImpl setSessionNameWithAndroidJavaxSdpSessionName:sessionNameImpl];
  AndroidGovNistJavaxSdpTimeDescriptionImpl *timeDescriptionImpl = create_AndroidGovNistJavaxSdpTimeDescriptionImpl_init();
  AndroidGovNistJavaxSdpFieldsTimeField *timeImpl = create_AndroidGovNistJavaxSdpFieldsTimeField_init();
  [timeImpl setZero];
  [timeDescriptionImpl setTimeWithAndroidJavaxSdpTime:timeImpl];
  JavaUtilVector *times = create_JavaUtilVector_init();
  [times addElementWithId:timeDescriptionImpl];
  [sessionDescriptionImpl setTimeDescriptionsWithJavaUtilVector:times];
  return sessionDescriptionImpl;
}

- (id<AndroidJavaxSdpSessionDescription>)createSessionDescriptionWithNSString:(NSString *)localHost {
  AndroidGovNistJavaxSdpSessionDescriptionImpl *sessionDescriptionImpl = create_AndroidGovNistJavaxSdpSessionDescriptionImpl_init();
  AndroidGovNistJavaxSdpFieldsProtoVersionField *ProtoVersionField = create_AndroidGovNistJavaxSdpFieldsProtoVersionField_init();
  [ProtoVersionField setVersionWithInt:0];
  [sessionDescriptionImpl setVersionWithAndroidJavaxSdpVersion:ProtoVersionField];
  AndroidGovNistJavaxSdpFieldsOriginField *originImpl;
  originImpl = (AndroidGovNistJavaxSdpFieldsOriginField *) cast_chk([self createOriginWithNSString:@"user" withNSString:localHost], [AndroidGovNistJavaxSdpFieldsOriginField class]);
  [sessionDescriptionImpl setOriginWithAndroidJavaxSdpOrigin:originImpl];
  AndroidGovNistJavaxSdpFieldsSessionNameField *sessionNameImpl = create_AndroidGovNistJavaxSdpFieldsSessionNameField_init();
  [sessionNameImpl setValueWithNSString:@"-"];
  [sessionDescriptionImpl setSessionNameWithAndroidJavaxSdpSessionName:sessionNameImpl];
  AndroidGovNistJavaxSdpTimeDescriptionImpl *timeDescriptionImpl = create_AndroidGovNistJavaxSdpTimeDescriptionImpl_init();
  AndroidGovNistJavaxSdpFieldsTimeField *timeImpl = create_AndroidGovNistJavaxSdpFieldsTimeField_init();
  [timeImpl setZero];
  [timeDescriptionImpl setTimeWithAndroidJavaxSdpTime:timeImpl];
  JavaUtilVector *times = create_JavaUtilVector_init();
  [times addElementWithId:timeDescriptionImpl];
  [sessionDescriptionImpl setTimeDescriptionsWithJavaUtilVector:times];
  return sessionDescriptionImpl;
}

- (id<AndroidJavaxSdpSessionDescription>)createSessionDescriptionWithAndroidJavaxSdpSessionDescription:(id<AndroidJavaxSdpSessionDescription>)otherSessionDescription {
  return create_AndroidGovNistJavaxSdpSessionDescriptionImpl_initWithAndroidJavaxSdpSessionDescription_(otherSessionDescription);
}

- (id<AndroidJavaxSdpSessionDescription>)createSessionDescriptionFromStringWithNSString:(NSString *)s {
  @try {
    AndroidGovNistJavaxSdpParserSDPAnnounceParser *sdpParser = create_AndroidGovNistJavaxSdpParserSDPAnnounceParser_initWithNSString_(s);
    return [sdpParser parse];
  }
  @catch (JavaTextParseException *e) {
    [((JavaTextParseException *) nil_chk(e)) printStackTrace];
    @throw create_AndroidJavaxSdpSdpParseException_initWithInt_withInt_withNSString_(0, 0, @"Could not parse message");
  }
}

- (id<AndroidJavaxSdpBandWidth>)createBandwidthWithNSString:(NSString *)modifier
                                                    withInt:(jint)value {
  AndroidGovNistJavaxSdpFieldsBandwidthField *bandWidthImpl = create_AndroidGovNistJavaxSdpFieldsBandwidthField_init();
  @try {
    [bandWidthImpl setTypeWithNSString:modifier];
    [bandWidthImpl setValueWithInt:value];
  }
  @catch (AndroidJavaxSdpSdpException *s) {
    [((AndroidJavaxSdpSdpException *) nil_chk(s)) printStackTrace];
  }
  return bandWidthImpl;
}

- (id<AndroidJavaxSdpAttribute>)createAttributeWithNSString:(NSString *)name
                                               withNSString:(NSString *)value {
  AndroidGovNistJavaxSdpFieldsAttributeField *attributeImpl = create_AndroidGovNistJavaxSdpFieldsAttributeField_init();
  @try {
    [attributeImpl setNameWithNSString:name];
    [attributeImpl setValueAllowNullWithNSString:value];
  }
  @catch (AndroidJavaxSdpSdpException *s) {
    [((AndroidJavaxSdpSdpException *) nil_chk(s)) printStackTrace];
  }
  return attributeImpl;
}

- (id<AndroidJavaxSdpInfo>)createInfoWithNSString:(NSString *)value {
  AndroidGovNistJavaxSdpFieldsInformationField *infoImpl = create_AndroidGovNistJavaxSdpFieldsInformationField_init();
  @try {
    [infoImpl setValueWithNSString:value];
  }
  @catch (AndroidJavaxSdpSdpException *s) {
    [((AndroidJavaxSdpSdpException *) nil_chk(s)) printStackTrace];
  }
  return infoImpl;
}

- (id<AndroidJavaxSdpPhone>)createPhoneWithNSString:(NSString *)value {
  AndroidGovNistJavaxSdpFieldsPhoneField *phoneImpl = create_AndroidGovNistJavaxSdpFieldsPhoneField_init();
  @try {
    [phoneImpl setValueWithNSString:value];
  }
  @catch (AndroidJavaxSdpSdpException *s) {
    [((AndroidJavaxSdpSdpException *) nil_chk(s)) printStackTrace];
  }
  return phoneImpl;
}

- (id<AndroidJavaxSdpEMail>)createEMailWithNSString:(NSString *)value {
  AndroidGovNistJavaxSdpFieldsEmailField *emailImpl = create_AndroidGovNistJavaxSdpFieldsEmailField_init();
  @try {
    [emailImpl setValueWithNSString:value];
  }
  @catch (AndroidJavaxSdpSdpException *s) {
    [((AndroidJavaxSdpSdpException *) nil_chk(s)) printStackTrace];
  }
  return emailImpl;
}

- (id<AndroidJavaxSdpURI>)createURIWithJavaNetURL:(JavaNetURL *)value {
  AndroidGovNistJavaxSdpFieldsURIField *uriImpl = create_AndroidGovNistJavaxSdpFieldsURIField_init();
  [uriImpl setWithJavaNetURL:value];
  return uriImpl;
}

- (id<AndroidJavaxSdpSessionName>)createSessionNameWithNSString:(NSString *)name {
  AndroidGovNistJavaxSdpFieldsSessionNameField *sessionNameImpl = create_AndroidGovNistJavaxSdpFieldsSessionNameField_init();
  @try {
    [sessionNameImpl setValueWithNSString:name];
  }
  @catch (AndroidJavaxSdpSdpException *s) {
    [((AndroidJavaxSdpSdpException *) nil_chk(s)) printStackTrace];
  }
  return sessionNameImpl;
}

- (id<AndroidJavaxSdpKey>)createKeyWithNSString:(NSString *)method
                                   withNSString:(NSString *)key {
  AndroidGovNistJavaxSdpFieldsKeyField *keyImpl = create_AndroidGovNistJavaxSdpFieldsKeyField_init();
  @try {
    [keyImpl setMethodWithNSString:method];
    [keyImpl setKeyWithNSString:key];
  }
  @catch (AndroidJavaxSdpSdpException *s) {
    [((AndroidJavaxSdpSdpException *) nil_chk(s)) printStackTrace];
    return nil;
  }
  return keyImpl;
}

- (id<AndroidJavaxSdpVersion>)createVersionWithInt:(jint)value {
  AndroidGovNistJavaxSdpFieldsProtoVersionField *protoVersionField = create_AndroidGovNistJavaxSdpFieldsProtoVersionField_init();
  @try {
    [protoVersionField setVersionWithInt:value];
  }
  @catch (AndroidJavaxSdpSdpException *s) {
    [((AndroidJavaxSdpSdpException *) nil_chk(s)) printStackTrace];
    return nil;
  }
  return protoVersionField;
}

- (id<AndroidJavaxSdpMedia>)createMediaWithNSString:(NSString *)media
                                            withInt:(jint)port
                                            withInt:(jint)numPorts
                                       withNSString:(NSString *)transport
                                 withJavaUtilVector:(JavaUtilVector *)staticRtpAvpTypes {
  AndroidGovNistJavaxSdpFieldsMediaField *mediaImpl = create_AndroidGovNistJavaxSdpFieldsMediaField_init();
  [mediaImpl setMediaTypeWithNSString:media];
  [mediaImpl setMediaPortWithInt:port];
  [mediaImpl setPortCountWithInt:numPorts];
  [mediaImpl setProtocolWithNSString:transport];
  [mediaImpl setMediaFormatsWithJavaUtilVector:staticRtpAvpTypes];
  return mediaImpl;
}

- (id<AndroidJavaxSdpOrigin>)createOriginWithNSString:(NSString *)userName
                                         withNSString:(NSString *)address {
  AndroidGovNistJavaxSdpFieldsOriginField *originImpl = create_AndroidGovNistJavaxSdpFieldsOriginField_init();
  [originImpl setUsernameWithNSString:userName];
  [originImpl setAddressWithNSString:address];
  [originImpl setNetworkTypeWithNSString:AndroidGovNistJavaxSdpFieldsSDPKeywords_IN];
  [originImpl setAddressTypeWithNSString:AndroidGovNistJavaxSdpFieldsSDPKeywords_IPV4];
  return originImpl;
}

- (id<AndroidJavaxSdpOrigin>)createOriginWithNSString:(NSString *)userName
                                             withLong:(jlong)sessionId
                                             withLong:(jlong)sessionVersion
                                         withNSString:(NSString *)networkType
                                         withNSString:(NSString *)addrType
                                         withNSString:(NSString *)address {
  AndroidGovNistJavaxSdpFieldsOriginField *originImpl = create_AndroidGovNistJavaxSdpFieldsOriginField_init();
  [originImpl setUsernameWithNSString:userName];
  [originImpl setAddressWithNSString:address];
  [originImpl setSessionIdWithLong:sessionId];
  [originImpl setSessionVersionWithLong:sessionVersion];
  [originImpl setAddressTypeWithNSString:addrType];
  [originImpl setNetworkTypeWithNSString:networkType];
  return originImpl;
}

- (id<AndroidJavaxSdpMediaDescription>)createMediaDescriptionWithNSString:(NSString *)media
                                                                  withInt:(jint)port
                                                                  withInt:(jint)numPorts
                                                             withNSString:(NSString *)transport
                                                             withIntArray:(IOSIntArray *)staticRtpAvpTypes {
  AndroidGovNistJavaxSdpMediaDescriptionImpl *mediaDescriptionImpl = create_AndroidGovNistJavaxSdpMediaDescriptionImpl_init();
  AndroidGovNistJavaxSdpFieldsMediaField *mediaImpl = create_AndroidGovNistJavaxSdpFieldsMediaField_init();
  [mediaImpl setMediaTypeWithNSString:media];
  [mediaImpl setMediaPortWithInt:port];
  [mediaImpl setPortCountWithInt:numPorts];
  [mediaImpl setProtocolWithNSString:transport];
  [mediaDescriptionImpl setMediaWithAndroidJavaxSdpMedia:mediaImpl];
  JavaUtilVector *payload = create_JavaUtilVector_init();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(staticRtpAvpTypes))->size_; i++) [payload addWithId:[create_JavaLangInteger_initWithInt_(IOSIntArray_Get(staticRtpAvpTypes, i)) description]];
  [mediaImpl setMediaFormatsWithJavaUtilVector:payload];
  return mediaDescriptionImpl;
}

- (id<AndroidJavaxSdpMediaDescription>)createMediaDescriptionWithNSString:(NSString *)media
                                                                  withInt:(jint)port
                                                                  withInt:(jint)numPorts
                                                             withNSString:(NSString *)transport
                                                        withNSStringArray:(IOSObjectArray *)formats {
  AndroidGovNistJavaxSdpMediaDescriptionImpl *mediaDescriptionImpl = create_AndroidGovNistJavaxSdpMediaDescriptionImpl_init();
  @try {
    AndroidGovNistJavaxSdpFieldsMediaField *mediaImpl = create_AndroidGovNistJavaxSdpFieldsMediaField_init();
    [mediaImpl setMediaTypeWithNSString:media];
    [mediaImpl setMediaPortWithInt:port];
    [mediaImpl setPortCountWithInt:numPorts];
    [mediaImpl setProtocolWithNSString:transport];
    JavaUtilVector *formatsV = create_JavaUtilVector_initWithInt_(((IOSObjectArray *) nil_chk(formats))->size_);
    for (jint i = 0; i < formats->size_; i++) [formatsV addWithId:IOSObjectArray_Get(formats, i)];
    [mediaImpl setMediaFormatsWithJavaUtilVector:formatsV];
    [mediaDescriptionImpl setMediaWithAndroidJavaxSdpMedia:mediaImpl];
  }
  @catch (AndroidJavaxSdpSdpException *s) {
    [((AndroidJavaxSdpSdpException *) nil_chk(s)) printStackTrace];
  }
  return mediaDescriptionImpl;
}

- (id<AndroidJavaxSdpTimeDescription>)createTimeDescriptionWithAndroidJavaxSdpTime:(id<AndroidJavaxSdpTime>)t {
  AndroidGovNistJavaxSdpTimeDescriptionImpl *timeDescriptionImpl = create_AndroidGovNistJavaxSdpTimeDescriptionImpl_init();
  [timeDescriptionImpl setTimeWithAndroidJavaxSdpTime:t];
  return timeDescriptionImpl;
}

- (id<AndroidJavaxSdpTimeDescription>)createTimeDescription {
  AndroidGovNistJavaxSdpTimeDescriptionImpl *timeDescriptionImpl = create_AndroidGovNistJavaxSdpTimeDescriptionImpl_init();
  AndroidGovNistJavaxSdpFieldsTimeField *timeImpl = create_AndroidGovNistJavaxSdpFieldsTimeField_init();
  [timeImpl setZero];
  [timeDescriptionImpl setTimeWithAndroidJavaxSdpTime:timeImpl];
  return timeDescriptionImpl;
}

- (id<AndroidJavaxSdpTimeDescription>)createTimeDescriptionWithJavaUtilDate:(JavaUtilDate *)start
                                                           withJavaUtilDate:(JavaUtilDate *)stop {
  AndroidGovNistJavaxSdpTimeDescriptionImpl *timeDescriptionImpl = create_AndroidGovNistJavaxSdpTimeDescriptionImpl_init();
  AndroidGovNistJavaxSdpFieldsTimeField *timeImpl = create_AndroidGovNistJavaxSdpFieldsTimeField_init();
  [timeImpl setStartWithJavaUtilDate:start];
  [timeImpl setStopWithJavaUtilDate:stop];
  [timeDescriptionImpl setTimeWithAndroidJavaxSdpTime:timeImpl];
  return timeDescriptionImpl;
}

- (NSString *)formatMulticastAddressWithNSString:(NSString *)addr
                                         withInt:(jint)ttl
                                         withInt:(jint)numAddrs {
  NSString *res = JreStrcat("$CICI", addr, '/', ttl, '/', numAddrs);
  return res;
}

- (id<AndroidJavaxSdpConnection>)createConnectionWithNSString:(NSString *)netType
                                                 withNSString:(NSString *)addrType
                                                 withNSString:(NSString *)addr
                                                      withInt:(jint)ttl
                                                      withInt:(jint)numAddrs {
  AndroidGovNistJavaxSdpFieldsConnectionField *connectionImpl = create_AndroidGovNistJavaxSdpFieldsConnectionField_init();
  [connectionImpl setNetworkTypeWithNSString:netType];
  [connectionImpl setAddressTypeWithNSString:addrType];
  [connectionImpl setAddressWithNSString:addr];
  return connectionImpl;
}

- (id<AndroidJavaxSdpConnection>)createConnectionWithNSString:(NSString *)netType
                                                 withNSString:(NSString *)addrType
                                                 withNSString:(NSString *)addr {
  AndroidGovNistJavaxSdpFieldsConnectionField *connectionImpl = create_AndroidGovNistJavaxSdpFieldsConnectionField_init();
  [connectionImpl setNetworkTypeWithNSString:netType];
  [connectionImpl setAddressTypeWithNSString:addrType];
  [connectionImpl setAddressWithNSString:addr];
  return connectionImpl;
}

- (id<AndroidJavaxSdpConnection>)createConnectionWithNSString:(NSString *)addr
                                                      withInt:(jint)ttl
                                                      withInt:(jint)numAddrs {
  AndroidGovNistJavaxSdpFieldsConnectionField *connectionImpl = create_AndroidGovNistJavaxSdpFieldsConnectionField_init();
  [connectionImpl setAddressWithNSString:addr];
  return connectionImpl;
}

- (id<AndroidJavaxSdpConnection>)createConnectionWithNSString:(NSString *)addr {
  return [self createConnectionWithNSString:@"IN" withNSString:@"IP4" withNSString:addr];
}

- (id<AndroidJavaxSdpTime>)createTimeWithJavaUtilDate:(JavaUtilDate *)start
                                     withJavaUtilDate:(JavaUtilDate *)stop {
  AndroidGovNistJavaxSdpFieldsTimeField *timeImpl = create_AndroidGovNistJavaxSdpFieldsTimeField_init();
  [timeImpl setStartWithJavaUtilDate:start];
  [timeImpl setStopWithJavaUtilDate:stop];
  return timeImpl;
}

- (id<AndroidJavaxSdpTime>)createTime {
  AndroidGovNistJavaxSdpFieldsTimeField *timeImpl = create_AndroidGovNistJavaxSdpFieldsTimeField_init();
  [timeImpl setZero];
  return timeImpl;
}

- (id<AndroidJavaxSdpRepeatTime>)createRepeatTimeWithInt:(jint)repeatInterval
                                                 withInt:(jint)activeDuration
                                            withIntArray:(IOSIntArray *)offsets {
  AndroidGovNistJavaxSdpFieldsRepeatField *repeatTimeField = create_AndroidGovNistJavaxSdpFieldsRepeatField_init();
  @try {
    [repeatTimeField setRepeatIntervalWithInt:repeatInterval];
    [repeatTimeField setActiveDurationWithInt:activeDuration];
    [repeatTimeField setOffsetArrayWithIntArray:offsets];
  }
  @catch (AndroidJavaxSdpSdpException *s) {
    [((AndroidJavaxSdpSdpException *) nil_chk(s)) printStackTrace];
  }
  return repeatTimeField;
}

- (id<AndroidJavaxSdpTimeZoneAdjustment>)createTimeZoneAdjustmentWithJavaUtilDate:(JavaUtilDate *)d
                                                                          withInt:(jint)offset {
  AndroidGovNistJavaxSdpFieldsZoneField *timeZoneAdjustmentImpl = create_AndroidGovNistJavaxSdpFieldsZoneField_init();
  @try {
    JavaUtilHashtable *map = create_JavaUtilHashtable_init();
    [map putWithId:d withId:create_JavaLangInteger_initWithInt_(offset)];
    [timeZoneAdjustmentImpl setZoneAdjustmentsWithJavaUtilHashtable:map];
  }
  @catch (AndroidJavaxSdpSdpException *s) {
    [((AndroidJavaxSdpSdpException *) nil_chk(s)) printStackTrace];
  }
  return timeZoneAdjustmentImpl;
}

+ (JavaUtilDate *)getDateFromNtpWithLong:(jlong)ntpTime {
  return AndroidJavaxSdpSdpFactoryImpl_getDateFromNtpWithLong_(ntpTime);
}

+ (jlong)getNtpTimeWithJavaUtilDate:(JavaUtilDate *)d {
  return AndroidJavaxSdpSdpFactoryImpl_getNtpTimeWithJavaUtilDate_(d);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  AndroidJavaxSdpSdpFactoryImpl_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpSdpFactoryImpl;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpSessionDescription;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpSessionDescription;", 0x1, 1, 2, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpSessionDescription;", 0x1, 1, 3, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpSessionDescription;", 0x1, 4, 2, 5, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpBandWidth;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpAttribute;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpInfo;", 0x1, 10, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpPhone;", 0x1, 11, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpEMail;", 0x1, 12, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpURI;", 0x1, 13, 14, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpSessionName;", 0x1, 15, 2, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpKey;", 0x1, 16, 9, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpVersion;", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpMedia;", 0x1, 19, 20, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpOrigin;", 0x1, 21, 9, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpOrigin;", 0x1, 21, 22, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpMediaDescription;", 0x1, 23, 24, 25, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpMediaDescription;", 0x1, 23, 26, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTimeDescription;", 0x1, 27, 28, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTimeDescription;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTimeDescription;", 0x1, 27, 29, 0, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 30, 31, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpConnection;", 0x1, 32, 33, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpConnection;", 0x1, 32, 34, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpConnection;", 0x1, 32, 31, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpConnection;", 0x1, 32, 2, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTime;", 0x1, 35, 29, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTime;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpRepeatTime;", 0x1, 36, 37, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpTimeZoneAdjustment;", 0x1, 38, 39, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x9, 40, 41, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 42, 43, 5, -1, -1, -1 },
    { NULL, "V", 0x9, 44, 45, 46, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getInstance);
  methods[2].selector = @selector(createSessionDescription);
  methods[3].selector = @selector(createSessionDescriptionWithNSString:);
  methods[4].selector = @selector(createSessionDescriptionWithAndroidJavaxSdpSessionDescription:);
  methods[5].selector = @selector(createSessionDescriptionFromStringWithNSString:);
  methods[6].selector = @selector(createBandwidthWithNSString:withInt:);
  methods[7].selector = @selector(createAttributeWithNSString:withNSString:);
  methods[8].selector = @selector(createInfoWithNSString:);
  methods[9].selector = @selector(createPhoneWithNSString:);
  methods[10].selector = @selector(createEMailWithNSString:);
  methods[11].selector = @selector(createURIWithJavaNetURL:);
  methods[12].selector = @selector(createSessionNameWithNSString:);
  methods[13].selector = @selector(createKeyWithNSString:withNSString:);
  methods[14].selector = @selector(createVersionWithInt:);
  methods[15].selector = @selector(createMediaWithNSString:withInt:withInt:withNSString:withJavaUtilVector:);
  methods[16].selector = @selector(createOriginWithNSString:withNSString:);
  methods[17].selector = @selector(createOriginWithNSString:withLong:withLong:withNSString:withNSString:withNSString:);
  methods[18].selector = @selector(createMediaDescriptionWithNSString:withInt:withInt:withNSString:withIntArray:);
  methods[19].selector = @selector(createMediaDescriptionWithNSString:withInt:withInt:withNSString:withNSStringArray:);
  methods[20].selector = @selector(createTimeDescriptionWithAndroidJavaxSdpTime:);
  methods[21].selector = @selector(createTimeDescription);
  methods[22].selector = @selector(createTimeDescriptionWithJavaUtilDate:withJavaUtilDate:);
  methods[23].selector = @selector(formatMulticastAddressWithNSString:withInt:withInt:);
  methods[24].selector = @selector(createConnectionWithNSString:withNSString:withNSString:withInt:withInt:);
  methods[25].selector = @selector(createConnectionWithNSString:withNSString:withNSString:);
  methods[26].selector = @selector(createConnectionWithNSString:withInt:withInt:);
  methods[27].selector = @selector(createConnectionWithNSString:);
  methods[28].selector = @selector(createTimeWithJavaUtilDate:withJavaUtilDate:);
  methods[29].selector = @selector(createTime);
  methods[30].selector = @selector(createRepeatTimeWithInt:withInt:withIntArray:);
  methods[31].selector = @selector(createTimeZoneAdjustmentWithJavaUtilDate:withInt:);
  methods[32].selector = @selector(getDateFromNtpWithLong:);
  methods[33].selector = @selector(getNtpTimeWithJavaUtilDate:);
  methods[34].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "singletonInstance", "LAndroidJavaxSdpSdpFactoryImpl;", .constantValue.asLong = 0, 0x1a, -1, 47, -1, -1 },
  };
  static const void *ptrTable[] = { "LAndroidJavaxSdpSdpException;", "createSessionDescription", "LNSString;", "LAndroidJavaxSdpSessionDescription;", "createSessionDescriptionFromString", "LAndroidJavaxSdpSdpParseException;", "createBandwidth", "LNSString;I", "createAttribute", "LNSString;LNSString;", "createInfo", "createPhone", "createEMail", "createURI", "LJavaNetURL;", "createSessionName", "createKey", "createVersion", "I", "createMedia", "LNSString;IILNSString;LJavaUtilVector;", "createOrigin", "LNSString;JJLNSString;LNSString;LNSString;", "createMediaDescription", "LNSString;IILNSString;[I", "LJavaLangIllegalArgumentException;LAndroidJavaxSdpSdpException;", "LNSString;IILNSString;[LNSString;", "createTimeDescription", "LAndroidJavaxSdpTime;", "LJavaUtilDate;LJavaUtilDate;", "formatMulticastAddress", "LNSString;II", "createConnection", "LNSString;LNSString;LNSString;II", "LNSString;LNSString;LNSString;", "createTime", "createRepeatTime", "II[I", "createTimeZoneAdjustment", "LJavaUtilDate;I", "getDateFromNtp", "J", "getNtpTime", "LJavaUtilDate;", "main", "[LNSString;", "LAndroidJavaxSdpSdpParseException;LAndroidJavaxSdpSdpException;", &AndroidJavaxSdpSdpFactoryImpl_singletonInstance };
  static const J2ObjcClassInfo _AndroidJavaxSdpSdpFactoryImpl = { "SdpFactoryImpl", "android.javax.sdp", ptrTable, methods, fields, 7, 0x1, 35, 1, -1, -1, -1, -1, -1 };
  return &_AndroidJavaxSdpSdpFactoryImpl;
}

+ (void)initialize {
  if (self == [AndroidJavaxSdpSdpFactoryImpl class]) {
    JreStrongAssignAndConsume(&AndroidJavaxSdpSdpFactoryImpl_singletonInstance, new_AndroidJavaxSdpSdpFactoryImpl_init());
    J2OBJC_SET_INITIALIZED(AndroidJavaxSdpSdpFactoryImpl)
  }
}

@end

void AndroidJavaxSdpSdpFactoryImpl_init(AndroidJavaxSdpSdpFactoryImpl *self) {
  NSObject_init(self);
}

AndroidJavaxSdpSdpFactoryImpl *new_AndroidJavaxSdpSdpFactoryImpl_init() {
  J2OBJC_NEW_IMPL(AndroidJavaxSdpSdpFactoryImpl, init)
}

AndroidJavaxSdpSdpFactoryImpl *create_AndroidJavaxSdpSdpFactoryImpl_init() {
  J2OBJC_CREATE_IMPL(AndroidJavaxSdpSdpFactoryImpl, init)
}

AndroidJavaxSdpSdpFactoryImpl *AndroidJavaxSdpSdpFactoryImpl_getInstance() {
  AndroidJavaxSdpSdpFactoryImpl_initialize();
  return AndroidJavaxSdpSdpFactoryImpl_singletonInstance;
}

JavaUtilDate *AndroidJavaxSdpSdpFactoryImpl_getDateFromNtpWithLong_(jlong ntpTime) {
  AndroidJavaxSdpSdpFactoryImpl_initialize();
  return create_JavaUtilDate_initWithLong_((ntpTime - AndroidJavaxSdpSdpConstants_NTP_CONST) * 1000);
}

jlong AndroidJavaxSdpSdpFactoryImpl_getNtpTimeWithJavaUtilDate_(JavaUtilDate *d) {
  AndroidJavaxSdpSdpFactoryImpl_initialize();
  if (d == nil) return -1;
  return (([d getTime] / 1000) + AndroidJavaxSdpSdpConstants_NTP_CONST);
}

void AndroidJavaxSdpSdpFactoryImpl_mainWithNSStringArray_(IOSObjectArray *args) {
  AndroidJavaxSdpSdpFactoryImpl_initialize();
  NSString *sdpFields = @"v=0\x0d\no=CiscoSystemsSIP-GW-UserAgent 2578 3027 IN IP4 83.211.215.216\x0d\ns=SIP Call\x0d\nc=IN IP4 62.94.199.36\x0d\nt=0 0\x0d\nm=audio 62278 RTP/AVP 18 8 0 4 3 125 101 19\x0d\nc=IN IP4 62.94.199.36\x0d\na=rtpmap:18 G729/8000\x0d\na=fmtp:18 annexb=yes\x0d\na=rtpmap:8 PCMA/8000\x0d\na=rtpmap:0 PCMU/8000\x0d\na=rtpmap:4 G723/8000\x0d\na=fmtp:4 bitrate=5.3;annexa=no\x0d\na=rtpmap:3 GSM/8000\x0d\na=rtpmap:125 X-CCD/8000\x0d\na=rtpmap:101 telephone-event/8000\x0d\na=fmtp:101 0-16\x0d\na=rtpmap:19 CN/8000\x0d\na=direction:passive\x0d\n";
  AndroidJavaxSdpSdpFactoryImpl *sdpFactory = create_AndroidJavaxSdpSdpFactoryImpl_init();
  id<AndroidJavaxSdpSessionDescription> sessionDescription = [sdpFactory createSessionDescriptionWithNSString:sdpFields];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"sessionDescription = ", sessionDescription)];
  JavaUtilVector *mediaDescriptions = [((id<AndroidJavaxSdpSessionDescription>) nil_chk(sessionDescription)) getMediaDescriptionsWithBoolean:true];
  for (jint i = 0; i < [((JavaUtilVector *) nil_chk(mediaDescriptions)) size]; i++) {
    id<AndroidJavaxSdpMediaDescription> m = (id<AndroidJavaxSdpMediaDescription>) cast_check([mediaDescriptions elementAtWithInt:i], AndroidJavaxSdpMediaDescription_class_());
    [((AndroidGovNistJavaxSdpMediaDescriptionImpl *) nil_chk(((AndroidGovNistJavaxSdpMediaDescriptionImpl *) cast_chk(m, [AndroidGovNistJavaxSdpMediaDescriptionImpl class])))) setDuplexityWithNSString:@"sendrecv"];
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$", @"m = ", [((id<AndroidJavaxSdpMediaDescription>) nil_chk(m)) description])];
    id<AndroidJavaxSdpMedia> media = [m getMedia];
    JavaUtilVector *formats = [((id<AndroidJavaxSdpMedia>) nil_chk(media)) getMediaFormatsWithBoolean:false];
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"formats = ", formats)];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidJavaxSdpSdpFactoryImpl)
