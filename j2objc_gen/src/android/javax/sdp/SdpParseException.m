//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sdp/SdpParseException.java
//

#include "J2ObjC_source.h"
#include "android/javax/sdp/SdpException.h"
#include "android/javax/sdp/SdpParseException.h"

@interface AndroidJavaxSdpSdpParseException () {
 @public
  jint lineNumber_;
  jint charOffset_;
}

@end

@implementation AndroidJavaxSdpSdpParseException

- (instancetype)initWithInt:(jint)lineNumber
                    withInt:(jint)charOffset
               withNSString:(NSString *)message
            withNSException:(NSException *)rootCause {
  AndroidJavaxSdpSdpParseException_initWithInt_withInt_withNSString_withNSException_(self, lineNumber, charOffset, message, rootCause);
  return self;
}

- (instancetype)initWithInt:(jint)lineNumber
                    withInt:(jint)charOffset
               withNSString:(NSString *)message {
  AndroidJavaxSdpSdpParseException_initWithInt_withInt_withNSString_(self, lineNumber, charOffset, message);
  return self;
}

- (jint)getLineNumber {
  return lineNumber_;
}

- (jint)getCharOffset {
  return charOffset_;
}

- (NSString *)getMessage {
  return [super getMessage];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withInt:withNSString:withNSException:);
  methods[1].selector = @selector(initWithInt:withInt:withNSString:);
  methods[2].selector = @selector(getLineNumber);
  methods[3].selector = @selector(getCharOffset);
  methods[4].selector = @selector(getMessage);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "lineNumber_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "charOffset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IILNSString;LNSException;", "IILNSString;" };
  static const J2ObjcClassInfo _AndroidJavaxSdpSdpParseException = { "SdpParseException", "android.javax.sdp", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_AndroidJavaxSdpSdpParseException;
}

@end

void AndroidJavaxSdpSdpParseException_initWithInt_withInt_withNSString_withNSException_(AndroidJavaxSdpSdpParseException *self, jint lineNumber, jint charOffset, NSString *message, NSException *rootCause) {
  AndroidJavaxSdpSdpException_initWithNSString_withNSException_(self, message, rootCause);
  self->lineNumber_ = lineNumber;
  self->charOffset_ = charOffset;
}

AndroidJavaxSdpSdpParseException *new_AndroidJavaxSdpSdpParseException_initWithInt_withInt_withNSString_withNSException_(jint lineNumber, jint charOffset, NSString *message, NSException *rootCause) {
  J2OBJC_NEW_IMPL(AndroidJavaxSdpSdpParseException, initWithInt_withInt_withNSString_withNSException_, lineNumber, charOffset, message, rootCause)
}

AndroidJavaxSdpSdpParseException *create_AndroidJavaxSdpSdpParseException_initWithInt_withInt_withNSString_withNSException_(jint lineNumber, jint charOffset, NSString *message, NSException *rootCause) {
  J2OBJC_CREATE_IMPL(AndroidJavaxSdpSdpParseException, initWithInt_withInt_withNSString_withNSException_, lineNumber, charOffset, message, rootCause)
}

void AndroidJavaxSdpSdpParseException_initWithInt_withInt_withNSString_(AndroidJavaxSdpSdpParseException *self, jint lineNumber, jint charOffset, NSString *message) {
  AndroidJavaxSdpSdpException_initWithNSString_(self, message);
  self->lineNumber_ = lineNumber;
  self->charOffset_ = charOffset;
}

AndroidJavaxSdpSdpParseException *new_AndroidJavaxSdpSdpParseException_initWithInt_withInt_withNSString_(jint lineNumber, jint charOffset, NSString *message) {
  J2OBJC_NEW_IMPL(AndroidJavaxSdpSdpParseException, initWithInt_withInt_withNSString_, lineNumber, charOffset, message)
}

AndroidJavaxSdpSdpParseException *create_AndroidJavaxSdpSdpParseException_initWithInt_withInt_withNSString_(jint lineNumber, jint charOffset, NSString *message) {
  J2OBJC_CREATE_IMPL(AndroidJavaxSdpSdpParseException, initWithInt_withInt_withNSString_, lineNumber, charOffset, message)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidJavaxSdpSdpParseException)
