//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sdp/MediaDescription.java
//

#include "J2ObjC_source.h"
#include "android/javax/sdp/MediaDescription.h"

@interface AndroidJavaxSdpMediaDescription : NSObject

@end

@implementation AndroidJavaxSdpMediaDescription

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LAndroidJavaxSdpMedia;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpInfo;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 4, 2, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpConnection;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, 2, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x401, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 9, 10, 2, -1, -1, -1 },
    { NULL, "I", 0x401, 11, 12, 13, -1, -1, -1 },
    { NULL, "V", 0x401, 14, 15, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 16, 12, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSdpKey;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 17, 18, 2, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x401, 19, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 20, 10, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 21, 12, 13, -1, -1, -1 },
    { NULL, "V", 0x401, 22, 23, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 24, 12, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 25, 26, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 27, 10, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 28, 29, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 30, 31, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getMedia);
  methods[1].selector = @selector(setMediaWithAndroidJavaxSdpMedia:);
  methods[2].selector = @selector(getInfo);
  methods[3].selector = @selector(setInfoWithAndroidJavaxSdpInfo:);
  methods[4].selector = @selector(getConnection);
  methods[5].selector = @selector(setConnectionWithAndroidJavaxSdpConnection:);
  methods[6].selector = @selector(getBandwidthsWithBoolean:);
  methods[7].selector = @selector(setBandwidthsWithJavaUtilVector:);
  methods[8].selector = @selector(getBandwidthWithNSString:);
  methods[9].selector = @selector(setBandwidthWithNSString:withInt:);
  methods[10].selector = @selector(removeBandwidthWithNSString:);
  methods[11].selector = @selector(getKey);
  methods[12].selector = @selector(setKeyWithAndroidJavaxSdpKey:);
  methods[13].selector = @selector(getAttributesWithBoolean:);
  methods[14].selector = @selector(setAttributesWithJavaUtilVector:);
  methods[15].selector = @selector(getAttributeWithNSString:);
  methods[16].selector = @selector(setAttributeWithNSString:withNSString:);
  methods[17].selector = @selector(removeAttributeWithNSString:);
  methods[18].selector = @selector(getMimeTypes);
  methods[19].selector = @selector(getMimeParameters);
  methods[20].selector = @selector(addDynamicPayloadsWithJavaUtilVector:withJavaUtilVector:);
  methods[21].selector = @selector(setPreconditionFieldsWithJavaUtilVector:);
  methods[22].selector = @selector(setPreconditionsWithAndroidGovNistJavaxSdpFieldsPreconditionFields:);
  methods[23].selector = @selector(getPreconditionFields);
  methods[24].selector = @selector(addAttributeWithAndroidGovNistJavaxSdpFieldsAttributeField:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setMedia", "LAndroidJavaxSdpMedia;", "LAndroidJavaxSdpSdpException;", "setInfo", "LAndroidJavaxSdpInfo;", "setConnection", "LAndroidJavaxSdpConnection;", "getBandwidths", "Z", "setBandwidths", "LJavaUtilVector;", "getBandwidth", "LNSString;", "LAndroidJavaxSdpSdpParseException;", "setBandwidth", "LNSString;I", "removeBandwidth", "setKey", "LAndroidJavaxSdpKey;", "getAttributes", "setAttributes", "getAttribute", "setAttribute", "LNSString;LNSString;", "removeAttribute", "addDynamicPayloads", "LJavaUtilVector;LJavaUtilVector;", "setPreconditionFields", "setPreconditions", "LAndroidGovNistJavaxSdpFieldsPreconditionFields;", "addAttribute", "LAndroidGovNistJavaxSdpFieldsAttributeField;" };
  static const J2ObjcClassInfo _AndroidJavaxSdpMediaDescription = { "MediaDescription", "android.javax.sdp", ptrTable, methods, NULL, 7, 0x609, 25, 0, -1, -1, -1, -1, -1 };
  return &_AndroidJavaxSdpMediaDescription;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidJavaxSdpMediaDescription)
