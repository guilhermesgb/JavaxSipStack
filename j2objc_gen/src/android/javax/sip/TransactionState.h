//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sip/TransactionState.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidJavaxSipTransactionState")
#ifdef RESTRICT_AndroidJavaxSipTransactionState
#define INCLUDE_ALL_AndroidJavaxSipTransactionState 0
#else
#define INCLUDE_ALL_AndroidJavaxSipTransactionState 1
#endif
#undef RESTRICT_AndroidJavaxSipTransactionState

#if !defined (AndroidJavaxSipTransactionState_) && (INCLUDE_ALL_AndroidJavaxSipTransactionState || defined(INCLUDE_AndroidJavaxSipTransactionState))
#define AndroidJavaxSipTransactionState_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@interface AndroidJavaxSipTransactionState : NSObject < JavaIoSerializable >

#pragma mark Public

- (jboolean)isEqual:(id)obj;

+ (AndroidJavaxSipTransactionState *)getObjectWithInt:(jint)transactionState;

- (jint)getValue;

- (NSUInteger)hash;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(AndroidJavaxSipTransactionState)

inline jint AndroidJavaxSipTransactionState_get__CALLING();
#define AndroidJavaxSipTransactionState__CALLING 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipTransactionState, _CALLING, jint)

inline AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_get_CALLING();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_CALLING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidJavaxSipTransactionState, CALLING, AndroidJavaxSipTransactionState *)

inline jint AndroidJavaxSipTransactionState_get__TRYING();
#define AndroidJavaxSipTransactionState__TRYING 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipTransactionState, _TRYING, jint)

inline AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_get_TRYING();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_TRYING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidJavaxSipTransactionState, TRYING, AndroidJavaxSipTransactionState *)

inline jint AndroidJavaxSipTransactionState_get__PROCEEDING();
#define AndroidJavaxSipTransactionState__PROCEEDING 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipTransactionState, _PROCEEDING, jint)

inline AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_get_PROCEEDING();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_PROCEEDING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidJavaxSipTransactionState, PROCEEDING, AndroidJavaxSipTransactionState *)

inline jint AndroidJavaxSipTransactionState_get__COMPLETED();
#define AndroidJavaxSipTransactionState__COMPLETED 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipTransactionState, _COMPLETED, jint)

inline AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_get_COMPLETED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_COMPLETED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidJavaxSipTransactionState, COMPLETED, AndroidJavaxSipTransactionState *)

inline jint AndroidJavaxSipTransactionState_get__CONFIRMED();
#define AndroidJavaxSipTransactionState__CONFIRMED 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipTransactionState, _CONFIRMED, jint)

inline AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_get_CONFIRMED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_CONFIRMED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidJavaxSipTransactionState, CONFIRMED, AndroidJavaxSipTransactionState *)

inline jint AndroidJavaxSipTransactionState_get__TERMINATED();
#define AndroidJavaxSipTransactionState__TERMINATED 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipTransactionState, _TERMINATED, jint)

inline AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_get_TERMINATED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_TERMINATED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidJavaxSipTransactionState, TERMINATED, AndroidJavaxSipTransactionState *)

FOUNDATION_EXPORT AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_getObjectWithInt_(jint transactionState);

J2OBJC_TYPE_LITERAL_HEADER(AndroidJavaxSipTransactionState)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidJavaxSipTransactionState")
