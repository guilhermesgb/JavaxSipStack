//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sip/IOExceptionEvent.java
//

#include "J2ObjC_source.h"
#include "android/javax/sip/IOExceptionEvent.h"
#include "java/util/EventObject.h"

@interface AndroidJavaxSipIOExceptionEvent () {
 @public
  NSString *m_host_;
  jint m_port_;
  NSString *m_transport_;
}

@end

J2OBJC_FIELD_SETTER(AndroidJavaxSipIOExceptionEvent, m_host_, NSString *)
J2OBJC_FIELD_SETTER(AndroidJavaxSipIOExceptionEvent, m_transport_, NSString *)

@implementation AndroidJavaxSipIOExceptionEvent

- (instancetype)initWithId:(id)source
              withNSString:(NSString *)remoteHost
                   withInt:(jint)port
              withNSString:(NSString *)transport {
  AndroidJavaxSipIOExceptionEvent_initWithId_withNSString_withInt_withNSString_(self, source, remoteHost, port, transport);
  return self;
}

- (NSString *)getHost {
  return m_host_;
}

- (jint)getPort {
  return m_port_;
}

- (NSString *)getTransport {
  return self->m_transport_;
}

- (void)dealloc {
  RELEASE_(m_host_);
  RELEASE_(m_transport_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withNSString:withInt:withNSString:);
  methods[1].selector = @selector(getHost);
  methods[2].selector = @selector(getPort);
  methods[3].selector = @selector(getTransport);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "m_host_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "m_port_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "m_transport_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LNSString;ILNSString;" };
  static const J2ObjcClassInfo _AndroidJavaxSipIOExceptionEvent = { "IOExceptionEvent", "android.javax.sip", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_AndroidJavaxSipIOExceptionEvent;
}

@end

void AndroidJavaxSipIOExceptionEvent_initWithId_withNSString_withInt_withNSString_(AndroidJavaxSipIOExceptionEvent *self, id source, NSString *remoteHost, jint port, NSString *transport) {
  JavaUtilEventObject_initWithId_(self, source);
  JreStrongAssign(&self->m_host_, remoteHost);
  self->m_port_ = port;
  JreStrongAssign(&self->m_transport_, transport);
}

AndroidJavaxSipIOExceptionEvent *new_AndroidJavaxSipIOExceptionEvent_initWithId_withNSString_withInt_withNSString_(id source, NSString *remoteHost, jint port, NSString *transport) {
  J2OBJC_NEW_IMPL(AndroidJavaxSipIOExceptionEvent, initWithId_withNSString_withInt_withNSString_, source, remoteHost, port, transport)
}

AndroidJavaxSipIOExceptionEvent *create_AndroidJavaxSipIOExceptionEvent_initWithId_withNSString_withInt_withNSString_(id source, NSString *remoteHost, jint port, NSString *transport) {
  J2OBJC_CREATE_IMPL(AndroidJavaxSipIOExceptionEvent, initWithId_withNSString_withInt_withNSString_, source, remoteHost, port, transport)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidJavaxSipIOExceptionEvent)
