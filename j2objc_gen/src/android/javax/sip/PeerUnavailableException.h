//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sip/PeerUnavailableException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidJavaxSipPeerUnavailableException")
#ifdef RESTRICT_AndroidJavaxSipPeerUnavailableException
#define INCLUDE_ALL_AndroidJavaxSipPeerUnavailableException 0
#else
#define INCLUDE_ALL_AndroidJavaxSipPeerUnavailableException 1
#endif
#undef RESTRICT_AndroidJavaxSipPeerUnavailableException

#if !defined (AndroidJavaxSipPeerUnavailableException_) && (INCLUDE_ALL_AndroidJavaxSipPeerUnavailableException || defined(INCLUDE_AndroidJavaxSipPeerUnavailableException))
#define AndroidJavaxSipPeerUnavailableException_

#define RESTRICT_AndroidJavaxSipSipException 1
#define INCLUDE_AndroidJavaxSipSipException 1
#include "android/javax/sip/SipException.h"

@interface AndroidJavaxSipPeerUnavailableException : AndroidJavaxSipSipException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)message;

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidJavaxSipPeerUnavailableException)

FOUNDATION_EXPORT void AndroidJavaxSipPeerUnavailableException_init(AndroidJavaxSipPeerUnavailableException *self);

FOUNDATION_EXPORT AndroidJavaxSipPeerUnavailableException *new_AndroidJavaxSipPeerUnavailableException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidJavaxSipPeerUnavailableException *create_AndroidJavaxSipPeerUnavailableException_init();

FOUNDATION_EXPORT void AndroidJavaxSipPeerUnavailableException_initWithNSString_(AndroidJavaxSipPeerUnavailableException *self, NSString *message);

FOUNDATION_EXPORT AndroidJavaxSipPeerUnavailableException *new_AndroidJavaxSipPeerUnavailableException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidJavaxSipPeerUnavailableException *create_AndroidJavaxSipPeerUnavailableException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void AndroidJavaxSipPeerUnavailableException_initWithNSString_withNSException_(AndroidJavaxSipPeerUnavailableException *self, NSString *message, NSException *cause);

FOUNDATION_EXPORT AndroidJavaxSipPeerUnavailableException *new_AndroidJavaxSipPeerUnavailableException_initWithNSString_withNSException_(NSString *message, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidJavaxSipPeerUnavailableException *create_AndroidJavaxSipPeerUnavailableException_initWithNSString_withNSException_(NSString *message, NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(AndroidJavaxSipPeerUnavailableException)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidJavaxSipPeerUnavailableException")
