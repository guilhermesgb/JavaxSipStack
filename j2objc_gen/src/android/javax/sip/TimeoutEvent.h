//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sip/TimeoutEvent.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidJavaxSipTimeoutEvent")
#ifdef RESTRICT_AndroidJavaxSipTimeoutEvent
#define INCLUDE_ALL_AndroidJavaxSipTimeoutEvent 0
#else
#define INCLUDE_ALL_AndroidJavaxSipTimeoutEvent 1
#endif
#undef RESTRICT_AndroidJavaxSipTimeoutEvent

#if !defined (AndroidJavaxSipTimeoutEvent_) && (INCLUDE_ALL_AndroidJavaxSipTimeoutEvent || defined(INCLUDE_AndroidJavaxSipTimeoutEvent))
#define AndroidJavaxSipTimeoutEvent_

#define RESTRICT_JavaUtilEventObject 1
#define INCLUDE_JavaUtilEventObject 1
#include "java/util/EventObject.h"

@class AndroidJavaxSipTimeout;
@protocol AndroidJavaxSipClientTransaction;
@protocol AndroidJavaxSipServerTransaction;

@interface AndroidJavaxSipTimeoutEvent : JavaUtilEventObject

#pragma mark Public

- (instancetype)initWithId:(id)source
withAndroidJavaxSipClientTransaction:(id<AndroidJavaxSipClientTransaction>)clientTransaction
withAndroidJavaxSipTimeout:(AndroidJavaxSipTimeout *)timeout;

- (instancetype)initWithId:(id)source
withAndroidJavaxSipServerTransaction:(id<AndroidJavaxSipServerTransaction>)serverTransaction
withAndroidJavaxSipTimeout:(AndroidJavaxSipTimeout *)timeout;

- (id<AndroidJavaxSipClientTransaction>)getClientTransaction;

- (id<AndroidJavaxSipServerTransaction>)getServerTransaction;

- (AndroidJavaxSipTimeout *)getTimeout;

- (jboolean)isServerTransaction;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidJavaxSipTimeoutEvent)

FOUNDATION_EXPORT void AndroidJavaxSipTimeoutEvent_initWithId_withAndroidJavaxSipServerTransaction_withAndroidJavaxSipTimeout_(AndroidJavaxSipTimeoutEvent *self, id source, id<AndroidJavaxSipServerTransaction> serverTransaction, AndroidJavaxSipTimeout *timeout);

FOUNDATION_EXPORT AndroidJavaxSipTimeoutEvent *new_AndroidJavaxSipTimeoutEvent_initWithId_withAndroidJavaxSipServerTransaction_withAndroidJavaxSipTimeout_(id source, id<AndroidJavaxSipServerTransaction> serverTransaction, AndroidJavaxSipTimeout *timeout) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidJavaxSipTimeoutEvent *create_AndroidJavaxSipTimeoutEvent_initWithId_withAndroidJavaxSipServerTransaction_withAndroidJavaxSipTimeout_(id source, id<AndroidJavaxSipServerTransaction> serverTransaction, AndroidJavaxSipTimeout *timeout);

FOUNDATION_EXPORT void AndroidJavaxSipTimeoutEvent_initWithId_withAndroidJavaxSipClientTransaction_withAndroidJavaxSipTimeout_(AndroidJavaxSipTimeoutEvent *self, id source, id<AndroidJavaxSipClientTransaction> clientTransaction, AndroidJavaxSipTimeout *timeout);

FOUNDATION_EXPORT AndroidJavaxSipTimeoutEvent *new_AndroidJavaxSipTimeoutEvent_initWithId_withAndroidJavaxSipClientTransaction_withAndroidJavaxSipTimeout_(id source, id<AndroidJavaxSipClientTransaction> clientTransaction, AndroidJavaxSipTimeout *timeout) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidJavaxSipTimeoutEvent *create_AndroidJavaxSipTimeoutEvent_initWithId_withAndroidJavaxSipClientTransaction_withAndroidJavaxSipTimeout_(id source, id<AndroidJavaxSipClientTransaction> clientTransaction, AndroidJavaxSipTimeout *timeout);

J2OBJC_TYPE_LITERAL_HEADER(AndroidJavaxSipTimeoutEvent)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidJavaxSipTimeoutEvent")
