//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sip/address/Address.java
//

#include "J2ObjC_source.h"
#include "android/javax/sip/address/Address.h"

@interface AndroidJavaxSipAddressAddress : NSObject

@end

@implementation AndroidJavaxSipAddressAddress

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipAddressURI;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 5, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 8, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(setDisplayNameWithNSString:);
  methods[1].selector = @selector(getDisplayName);
  methods[2].selector = @selector(setURIWithAndroidJavaxSipAddressURI:);
  methods[3].selector = @selector(getURI);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(isWildcard);
  methods[8].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setDisplayName", "LNSString;", "LJavaTextParseException;", "setURI", "LAndroidJavaxSipAddressURI;", "toString", "equals", "LNSObject;", "hashCode", "clone" };
  static const J2ObjcClassInfo _AndroidJavaxSipAddressAddress = { "Address", "android.javax.sip.address", ptrTable, methods, NULL, 7, 0x609, 9, 0, -1, -1, -1, -1, -1 };
  return &_AndroidJavaxSipAddressAddress;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidJavaxSipAddressAddress)
