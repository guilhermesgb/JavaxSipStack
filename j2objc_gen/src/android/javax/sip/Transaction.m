//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sip/Transaction.java
//

#include "J2ObjC_source.h"
#include "android/javax/sip/Transaction.h"

@interface AndroidJavaxSipTransaction : NSObject

@end

@implementation AndroidJavaxSipTransaction

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LAndroidJavaxSipDialog;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipTransactionState;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x401, 1, 2, 0, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipMessageRequest;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getDialog);
  methods[1].selector = @selector(getState);
  methods[2].selector = @selector(getRetransmitTimer);
  methods[3].selector = @selector(setRetransmitTimerWithInt:);
  methods[4].selector = @selector(getBranchId);
  methods[5].selector = @selector(getRequest);
  methods[6].selector = @selector(setApplicationDataWithId:);
  methods[7].selector = @selector(getApplicationData);
  methods[8].selector = @selector(terminate);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangUnsupportedOperationException;", "setRetransmitTimer", "I", "setApplicationData", "LNSObject;", "LAndroidJavaxSipObjectInUseException;" };
  static const J2ObjcClassInfo _AndroidJavaxSipTransaction = { "Transaction", "android.javax.sip", ptrTable, methods, NULL, 7, 0x609, 9, 0, -1, -1, -1, -1, -1 };
  return &_AndroidJavaxSipTransaction;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidJavaxSipTransaction)
