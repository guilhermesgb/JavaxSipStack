//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sip/message/Message.java
//

#include "J2ObjC_source.h"
#include "android/javax/sip/message/Message.h"

@interface AndroidJavaxSipMessageMessage : NSObject

@end

@implementation AndroidJavaxSipMessageMessage

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 1, 3, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 1, 3, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, 7, -1, -1, -1 },
    { NULL, "V", 0x401, 8, 6, 7, -1, -1, -1 },
    { NULL, "V", 0x401, 9, 6, -1, -1, -1, -1 },
    { NULL, "LJavaUtilListIterator;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilListIterator;", 0x401, 10, 6, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipHeaderHeader;", 0x401, 11, 6, -1, -1, -1, -1 },
    { NULL, "LJavaUtilListIterator;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 12, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 13, 14, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipHeaderContentLengthHeader;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 15, 16, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipHeaderContentLanguageHeader;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 17, 18, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipHeaderContentEncodingHeader;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 19, 20, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipHeaderContentDispositionHeader;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 21, 22, 23, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 24, 25, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipHeaderExpiresHeader;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 26, 6, 23, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 27, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 28, 29, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 30, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 31, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(addHeaderWithAndroidJavaxSipHeaderHeader:);
  methods[1].selector = @selector(addLastWithAndroidJavaxSipHeaderHeader:);
  methods[2].selector = @selector(addFirstWithAndroidJavaxSipHeaderHeader:);
  methods[3].selector = @selector(removeFirstWithNSString:);
  methods[4].selector = @selector(removeLastWithNSString:);
  methods[5].selector = @selector(removeHeaderWithNSString:);
  methods[6].selector = @selector(getHeaderNames);
  methods[7].selector = @selector(getHeadersWithNSString:);
  methods[8].selector = @selector(getHeaderWithNSString:);
  methods[9].selector = @selector(getUnrecognizedHeaders);
  methods[10].selector = @selector(setHeaderWithAndroidJavaxSipHeaderHeader:);
  methods[11].selector = @selector(setContentLengthWithAndroidJavaxSipHeaderContentLengthHeader:);
  methods[12].selector = @selector(getContentLength);
  methods[13].selector = @selector(setContentLanguageWithAndroidJavaxSipHeaderContentLanguageHeader:);
  methods[14].selector = @selector(getContentLanguage);
  methods[15].selector = @selector(setContentEncodingWithAndroidJavaxSipHeaderContentEncodingHeader:);
  methods[16].selector = @selector(getContentEncoding);
  methods[17].selector = @selector(setContentDispositionWithAndroidJavaxSipHeaderContentDispositionHeader:);
  methods[18].selector = @selector(getContentDisposition);
  methods[19].selector = @selector(setContentWithId:withAndroidJavaxSipHeaderContentTypeHeader:);
  methods[20].selector = @selector(getRawContent);
  methods[21].selector = @selector(getContent);
  methods[22].selector = @selector(removeContent);
  methods[23].selector = @selector(setExpiresWithAndroidJavaxSipHeaderExpiresHeader:);
  methods[24].selector = @selector(getExpires);
  methods[25].selector = @selector(setSIPVersionWithNSString:);
  methods[26].selector = @selector(getSIPVersion);
  methods[27].selector = @selector(java_clone);
  methods[28].selector = @selector(isEqual:);
  methods[29].selector = @selector(hash);
  methods[30].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "addHeader", "LAndroidJavaxSipHeaderHeader;", "addLast", "LAndroidJavaxSipSipException;LJavaLangNullPointerException;", "addFirst", "removeFirst", "LNSString;", "LJavaLangNullPointerException;", "removeLast", "removeHeader", "getHeaders", "getHeader", "setHeader", "setContentLength", "LAndroidJavaxSipHeaderContentLengthHeader;", "setContentLanguage", "LAndroidJavaxSipHeaderContentLanguageHeader;", "setContentEncoding", "LAndroidJavaxSipHeaderContentEncodingHeader;", "setContentDisposition", "LAndroidJavaxSipHeaderContentDispositionHeader;", "setContent", "LNSObject;LAndroidJavaxSipHeaderContentTypeHeader;", "LJavaTextParseException;", "setExpires", "LAndroidJavaxSipHeaderExpiresHeader;", "setSIPVersion", "clone", "equals", "LNSObject;", "hashCode", "toString" };
  static const J2ObjcClassInfo _AndroidJavaxSipMessageMessage = { "Message", "android.javax.sip.message", ptrTable, methods, NULL, 7, 0x609, 31, 0, -1, -1, -1, -1, -1 };
  return &_AndroidJavaxSipMessageMessage;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidJavaxSipMessageMessage)
