//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sip/IOExceptionEvent.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidJavaxSipIOExceptionEvent")
#ifdef RESTRICT_AndroidJavaxSipIOExceptionEvent
#define INCLUDE_ALL_AndroidJavaxSipIOExceptionEvent 0
#else
#define INCLUDE_ALL_AndroidJavaxSipIOExceptionEvent 1
#endif
#undef RESTRICT_AndroidJavaxSipIOExceptionEvent

#if !defined (AndroidJavaxSipIOExceptionEvent_) && (INCLUDE_ALL_AndroidJavaxSipIOExceptionEvent || defined(INCLUDE_AndroidJavaxSipIOExceptionEvent))
#define AndroidJavaxSipIOExceptionEvent_

#define RESTRICT_JavaUtilEventObject 1
#define INCLUDE_JavaUtilEventObject 1
#include "java/util/EventObject.h"

@interface AndroidJavaxSipIOExceptionEvent : JavaUtilEventObject

#pragma mark Public

- (instancetype)initWithId:(id)source
              withNSString:(NSString *)remoteHost
                   withInt:(jint)port
              withNSString:(NSString *)transport;

- (NSString *)getHost;

- (jint)getPort;

- (NSString *)getTransport;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidJavaxSipIOExceptionEvent)

FOUNDATION_EXPORT void AndroidJavaxSipIOExceptionEvent_initWithId_withNSString_withInt_withNSString_(AndroidJavaxSipIOExceptionEvent *self, id source, NSString *remoteHost, jint port, NSString *transport);

FOUNDATION_EXPORT AndroidJavaxSipIOExceptionEvent *new_AndroidJavaxSipIOExceptionEvent_initWithId_withNSString_withInt_withNSString_(id source, NSString *remoteHost, jint port, NSString *transport) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidJavaxSipIOExceptionEvent *create_AndroidJavaxSipIOExceptionEvent_initWithId_withNSString_withInt_withNSString_(id source, NSString *remoteHost, jint port, NSString *transport);

J2OBJC_TYPE_LITERAL_HEADER(AndroidJavaxSipIOExceptionEvent)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidJavaxSipIOExceptionEvent")
