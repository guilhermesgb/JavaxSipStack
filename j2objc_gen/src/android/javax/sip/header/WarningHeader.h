//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sip/header/WarningHeader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidJavaxSipHeaderWarningHeader")
#ifdef RESTRICT_AndroidJavaxSipHeaderWarningHeader
#define INCLUDE_ALL_AndroidJavaxSipHeaderWarningHeader 0
#else
#define INCLUDE_ALL_AndroidJavaxSipHeaderWarningHeader 1
#endif
#undef RESTRICT_AndroidJavaxSipHeaderWarningHeader

#if !defined (AndroidJavaxSipHeaderWarningHeader_) && (INCLUDE_ALL_AndroidJavaxSipHeaderWarningHeader || defined(INCLUDE_AndroidJavaxSipHeaderWarningHeader))
#define AndroidJavaxSipHeaderWarningHeader_

#define RESTRICT_AndroidJavaxSipHeaderHeader 1
#define INCLUDE_AndroidJavaxSipHeaderHeader 1
#include "android/javax/sip/header/Header.h"

@protocol AndroidJavaxSipHeaderWarningHeader < AndroidJavaxSipHeaderHeader, JavaObject >

- (NSString *)getAgent;

- (void)setAgentWithNSString:(NSString *)agent;

- (NSString *)getText;

- (void)setTextWithNSString:(NSString *)text;

- (void)setCodeWithInt:(jint)code;

- (jint)getCode;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidJavaxSipHeaderWarningHeader)

inline NSString *AndroidJavaxSipHeaderWarningHeader_get_NAME();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AndroidJavaxSipHeaderWarningHeader_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidJavaxSipHeaderWarningHeader, NAME, NSString *)

inline jint AndroidJavaxSipHeaderWarningHeader_get_INCOMPATIBLE_NETWORK_PROTOCOL();
#define AndroidJavaxSipHeaderWarningHeader_INCOMPATIBLE_NETWORK_PROTOCOL 300
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, INCOMPATIBLE_NETWORK_PROTOCOL, jint)

inline jint AndroidJavaxSipHeaderWarningHeader_get_INCOMPATIBLE_NETWORK_ADDRESS_FORMATS();
#define AndroidJavaxSipHeaderWarningHeader_INCOMPATIBLE_NETWORK_ADDRESS_FORMATS 301
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, INCOMPATIBLE_NETWORK_ADDRESS_FORMATS, jint)

inline jint AndroidJavaxSipHeaderWarningHeader_get_INCOMPATIBLE_TRANSPORT_PROTOCOL();
#define AndroidJavaxSipHeaderWarningHeader_INCOMPATIBLE_TRANSPORT_PROTOCOL 302
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, INCOMPATIBLE_TRANSPORT_PROTOCOL, jint)

inline jint AndroidJavaxSipHeaderWarningHeader_get_INCOMPATIBLE_BANDWIDTH_UNITS();
#define AndroidJavaxSipHeaderWarningHeader_INCOMPATIBLE_BANDWIDTH_UNITS 303
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, INCOMPATIBLE_BANDWIDTH_UNITS, jint)

inline jint AndroidJavaxSipHeaderWarningHeader_get_MEDIA_TYPE_NOT_AVAILABLE();
#define AndroidJavaxSipHeaderWarningHeader_MEDIA_TYPE_NOT_AVAILABLE 304
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, MEDIA_TYPE_NOT_AVAILABLE, jint)

inline jint AndroidJavaxSipHeaderWarningHeader_get_INCOMPATIBLE_MEDIA_FORMAT();
#define AndroidJavaxSipHeaderWarningHeader_INCOMPATIBLE_MEDIA_FORMAT 305
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, INCOMPATIBLE_MEDIA_FORMAT, jint)

inline jint AndroidJavaxSipHeaderWarningHeader_get_ATTRIBUTE_NOT_UNDERSTOOD();
#define AndroidJavaxSipHeaderWarningHeader_ATTRIBUTE_NOT_UNDERSTOOD 306
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, ATTRIBUTE_NOT_UNDERSTOOD, jint)

inline jint AndroidJavaxSipHeaderWarningHeader_get_SESSION_DESCRIPTION_PARAMETER_NOT_UNDERSTOOD();
#define AndroidJavaxSipHeaderWarningHeader_SESSION_DESCRIPTION_PARAMETER_NOT_UNDERSTOOD 307
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, SESSION_DESCRIPTION_PARAMETER_NOT_UNDERSTOOD, jint)

inline jint AndroidJavaxSipHeaderWarningHeader_get_MULTICAST_NOT_AVAILABLE();
#define AndroidJavaxSipHeaderWarningHeader_MULTICAST_NOT_AVAILABLE 330
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, MULTICAST_NOT_AVAILABLE, jint)

inline jint AndroidJavaxSipHeaderWarningHeader_get_UNICAST_NOT_AVAILABLE();
#define AndroidJavaxSipHeaderWarningHeader_UNICAST_NOT_AVAILABLE 331
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, UNICAST_NOT_AVAILABLE, jint)

inline jint AndroidJavaxSipHeaderWarningHeader_get_INSUFFICIENT_BANDWIDTH();
#define AndroidJavaxSipHeaderWarningHeader_INSUFFICIENT_BANDWIDTH 370
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, INSUFFICIENT_BANDWIDTH, jint)

inline jint AndroidJavaxSipHeaderWarningHeader_get_MISCELLANEOUS_WARNING();
#define AndroidJavaxSipHeaderWarningHeader_MISCELLANEOUS_WARNING 399
J2OBJC_STATIC_FIELD_CONSTANT(AndroidJavaxSipHeaderWarningHeader, MISCELLANEOUS_WARNING, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidJavaxSipHeaderWarningHeader)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidJavaxSipHeaderWarningHeader")
