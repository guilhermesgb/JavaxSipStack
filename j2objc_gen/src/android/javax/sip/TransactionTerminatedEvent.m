//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sip/TransactionTerminatedEvent.java
//

#include "J2ObjC_source.h"
#include "android/javax/sip/ClientTransaction.h"
#include "android/javax/sip/ServerTransaction.h"
#include "android/javax/sip/TransactionTerminatedEvent.h"
#include "java/util/EventObject.h"

@interface AndroidJavaxSipTransactionTerminatedEvent () {
 @public
  jboolean m_isServerTransaction_;
  id<AndroidJavaxSipServerTransaction> m_serverTransaction_;
  id<AndroidJavaxSipClientTransaction> m_clientTransaction_;
}

@end

J2OBJC_FIELD_SETTER(AndroidJavaxSipTransactionTerminatedEvent, m_serverTransaction_, id<AndroidJavaxSipServerTransaction>)
J2OBJC_FIELD_SETTER(AndroidJavaxSipTransactionTerminatedEvent, m_clientTransaction_, id<AndroidJavaxSipClientTransaction>)

@implementation AndroidJavaxSipTransactionTerminatedEvent

- (instancetype)initWithId:(id)source
withAndroidJavaxSipServerTransaction:(id<AndroidJavaxSipServerTransaction>)serverTransaction {
  AndroidJavaxSipTransactionTerminatedEvent_initWithId_withAndroidJavaxSipServerTransaction_(self, source, serverTransaction);
  return self;
}

- (instancetype)initWithId:(id)source
withAndroidJavaxSipClientTransaction:(id<AndroidJavaxSipClientTransaction>)clientTransaction {
  AndroidJavaxSipTransactionTerminatedEvent_initWithId_withAndroidJavaxSipClientTransaction_(self, source, clientTransaction);
  return self;
}

- (id<AndroidJavaxSipServerTransaction>)getServerTransaction {
  return m_serverTransaction_;
}

- (id<AndroidJavaxSipClientTransaction>)getClientTransaction {
  return m_clientTransaction_;
}

- (jboolean)isServerTransaction {
  return m_isServerTransaction_;
}

- (void)dealloc {
  RELEASE_(m_serverTransaction_);
  RELEASE_(m_clientTransaction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipServerTransaction;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipClientTransaction;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withAndroidJavaxSipServerTransaction:);
  methods[1].selector = @selector(initWithId:withAndroidJavaxSipClientTransaction:);
  methods[2].selector = @selector(getServerTransaction);
  methods[3].selector = @selector(getClientTransaction);
  methods[4].selector = @selector(isServerTransaction);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "m_isServerTransaction_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "m_serverTransaction_", "LAndroidJavaxSipServerTransaction;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "m_clientTransaction_", "LAndroidJavaxSipClientTransaction;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LAndroidJavaxSipServerTransaction;", "LNSObject;LAndroidJavaxSipClientTransaction;" };
  static const J2ObjcClassInfo _AndroidJavaxSipTransactionTerminatedEvent = { "TransactionTerminatedEvent", "android.javax.sip", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_AndroidJavaxSipTransactionTerminatedEvent;
}

@end

void AndroidJavaxSipTransactionTerminatedEvent_initWithId_withAndroidJavaxSipServerTransaction_(AndroidJavaxSipTransactionTerminatedEvent *self, id source, id<AndroidJavaxSipServerTransaction> serverTransaction) {
  JavaUtilEventObject_initWithId_(self, source);
  JreStrongAssign(&self->m_serverTransaction_, nil);
  JreStrongAssign(&self->m_clientTransaction_, nil);
  JreStrongAssign(&self->m_serverTransaction_, serverTransaction);
  self->m_isServerTransaction_ = true;
}

AndroidJavaxSipTransactionTerminatedEvent *new_AndroidJavaxSipTransactionTerminatedEvent_initWithId_withAndroidJavaxSipServerTransaction_(id source, id<AndroidJavaxSipServerTransaction> serverTransaction) {
  J2OBJC_NEW_IMPL(AndroidJavaxSipTransactionTerminatedEvent, initWithId_withAndroidJavaxSipServerTransaction_, source, serverTransaction)
}

AndroidJavaxSipTransactionTerminatedEvent *create_AndroidJavaxSipTransactionTerminatedEvent_initWithId_withAndroidJavaxSipServerTransaction_(id source, id<AndroidJavaxSipServerTransaction> serverTransaction) {
  J2OBJC_CREATE_IMPL(AndroidJavaxSipTransactionTerminatedEvent, initWithId_withAndroidJavaxSipServerTransaction_, source, serverTransaction)
}

void AndroidJavaxSipTransactionTerminatedEvent_initWithId_withAndroidJavaxSipClientTransaction_(AndroidJavaxSipTransactionTerminatedEvent *self, id source, id<AndroidJavaxSipClientTransaction> clientTransaction) {
  JavaUtilEventObject_initWithId_(self, source);
  JreStrongAssign(&self->m_serverTransaction_, nil);
  JreStrongAssign(&self->m_clientTransaction_, nil);
  JreStrongAssign(&self->m_clientTransaction_, clientTransaction);
  self->m_isServerTransaction_ = false;
}

AndroidJavaxSipTransactionTerminatedEvent *new_AndroidJavaxSipTransactionTerminatedEvent_initWithId_withAndroidJavaxSipClientTransaction_(id source, id<AndroidJavaxSipClientTransaction> clientTransaction) {
  J2OBJC_NEW_IMPL(AndroidJavaxSipTransactionTerminatedEvent, initWithId_withAndroidJavaxSipClientTransaction_, source, clientTransaction)
}

AndroidJavaxSipTransactionTerminatedEvent *create_AndroidJavaxSipTransactionTerminatedEvent_initWithId_withAndroidJavaxSipClientTransaction_(id source, id<AndroidJavaxSipClientTransaction> clientTransaction) {
  J2OBJC_CREATE_IMPL(AndroidJavaxSipTransactionTerminatedEvent, initWithId_withAndroidJavaxSipClientTransaction_, source, clientTransaction)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidJavaxSipTransactionTerminatedEvent)
