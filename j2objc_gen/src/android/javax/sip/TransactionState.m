//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./src/android/javax/sip/TransactionState.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/javax/sip/TransactionState.h"
#include "java/lang/IllegalArgumentException.h"

@interface AndroidJavaxSipTransactionState () {
 @public
  jint m_transactionState_;
}

- (instancetype)initWithInt:(jint)transactionState;

- (id)readResolve;

@end

inline jint AndroidJavaxSipTransactionState_get_m_size();
inline jint AndroidJavaxSipTransactionState_set_m_size(jint value);
inline jint *AndroidJavaxSipTransactionState_getRef_m_size();
static jint AndroidJavaxSipTransactionState_m_size = 6;
J2OBJC_STATIC_FIELD_PRIMITIVE(AndroidJavaxSipTransactionState, m_size, jint)

inline IOSObjectArray *AndroidJavaxSipTransactionState_get_m_transStateArray();
inline IOSObjectArray *AndroidJavaxSipTransactionState_set_m_transStateArray(IOSObjectArray *value);
static IOSObjectArray *AndroidJavaxSipTransactionState_m_transStateArray;
J2OBJC_STATIC_FIELD_OBJ(AndroidJavaxSipTransactionState, m_transStateArray, IOSObjectArray *)

__attribute__((unused)) static void AndroidJavaxSipTransactionState_initWithInt_(AndroidJavaxSipTransactionState *self, jint transactionState);

__attribute__((unused)) static AndroidJavaxSipTransactionState *new_AndroidJavaxSipTransactionState_initWithInt_(jint transactionState) NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidJavaxSipTransactionState *create_AndroidJavaxSipTransactionState_initWithInt_(jint transactionState);

J2OBJC_INITIALIZED_DEFN(AndroidJavaxSipTransactionState)

AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_CALLING;
AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_TRYING;
AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_PROCEEDING;
AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_COMPLETED;
AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_CONFIRMED;
AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_TERMINATED;

@implementation AndroidJavaxSipTransactionState

- (instancetype)initWithInt:(jint)transactionState {
  AndroidJavaxSipTransactionState_initWithInt_(self, transactionState);
  return self;
}

+ (AndroidJavaxSipTransactionState *)getObjectWithInt:(jint)transactionState {
  return AndroidJavaxSipTransactionState_getObjectWithInt_(transactionState);
}

- (jint)getValue {
  return m_transactionState_;
}

- (id)readResolve {
  return IOSObjectArray_Get(nil_chk(AndroidJavaxSipTransactionState_m_transStateArray), m_transactionState_);
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) return true;
  return ([obj isKindOfClass:[AndroidJavaxSipTransactionState class]]) && ((AndroidJavaxSipTransactionState *) nil_chk(((AndroidJavaxSipTransactionState *) cast_chk(obj, [AndroidJavaxSipTransactionState class]))))->m_transactionState_ == m_transactionState_;
}

- (NSUInteger)hash {
  return m_transactionState_;
}

- (NSString *)description {
  NSString *text = @"";
  switch (m_transactionState_) {
    case AndroidJavaxSipTransactionState__CALLING:
    text = @"Calling Transaction";
    break;
    case AndroidJavaxSipTransactionState__TRYING:
    text = @"Trying Transaction";
    break;
    case AndroidJavaxSipTransactionState__PROCEEDING:
    text = @"Proceeding Transaction";
    break;
    case AndroidJavaxSipTransactionState__COMPLETED:
    text = @"Completed Transaction";
    break;
    case AndroidJavaxSipTransactionState__CONFIRMED:
    text = @"Confirmed Transaction";
    break;
    case AndroidJavaxSipTransactionState__TERMINATED:
    text = @"Terminated Transaction";
    break;
    default:
    text = @"Error while printing Transaction State";
    break;
  }
  return text;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LAndroidJavaxSipTransactionState;", 0x9, 1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(getObjectWithInt:);
  methods[2].selector = @selector(getValue);
  methods[3].selector = @selector(readResolve);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(hash);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "m_transactionState_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "m_size", "I", .constantValue.asLong = 0, 0xa, -1, 7, -1, -1 },
    { "m_transStateArray", "[LAndroidJavaxSipTransactionState;", .constantValue.asLong = 0, 0xa, -1, 8, -1, -1 },
    { "_CALLING", "I", .constantValue.asInt = AndroidJavaxSipTransactionState__CALLING, 0x19, -1, -1, -1, -1 },
    { "CALLING", "LAndroidJavaxSipTransactionState;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "_TRYING", "I", .constantValue.asInt = AndroidJavaxSipTransactionState__TRYING, 0x19, -1, -1, -1, -1 },
    { "TRYING", "LAndroidJavaxSipTransactionState;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "_PROCEEDING", "I", .constantValue.asInt = AndroidJavaxSipTransactionState__PROCEEDING, 0x19, -1, -1, -1, -1 },
    { "PROCEEDING", "LAndroidJavaxSipTransactionState;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "_COMPLETED", "I", .constantValue.asInt = AndroidJavaxSipTransactionState__COMPLETED, 0x19, -1, -1, -1, -1 },
    { "COMPLETED", "LAndroidJavaxSipTransactionState;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "_CONFIRMED", "I", .constantValue.asInt = AndroidJavaxSipTransactionState__CONFIRMED, 0x19, -1, -1, -1, -1 },
    { "CONFIRMED", "LAndroidJavaxSipTransactionState;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "_TERMINATED", "I", .constantValue.asInt = AndroidJavaxSipTransactionState__TERMINATED, 0x19, -1, -1, -1, -1 },
    { "TERMINATED", "LAndroidJavaxSipTransactionState;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "getObject", "LJavaIoObjectStreamException;", "equals", "LNSObject;", "hashCode", "toString", &AndroidJavaxSipTransactionState_m_size, &AndroidJavaxSipTransactionState_m_transStateArray, &AndroidJavaxSipTransactionState_CALLING, &AndroidJavaxSipTransactionState_TRYING, &AndroidJavaxSipTransactionState_PROCEEDING, &AndroidJavaxSipTransactionState_COMPLETED, &AndroidJavaxSipTransactionState_CONFIRMED, &AndroidJavaxSipTransactionState_TERMINATED };
  static const J2ObjcClassInfo _AndroidJavaxSipTransactionState = { "TransactionState", "android.javax.sip", ptrTable, methods, fields, 7, 0x11, 7, 15, -1, -1, -1, -1, -1 };
  return &_AndroidJavaxSipTransactionState;
}

+ (void)initialize {
  if (self == [AndroidJavaxSipTransactionState class]) {
    JreStrongAssignAndConsume(&AndroidJavaxSipTransactionState_m_transStateArray, [IOSObjectArray newArrayWithLength:AndroidJavaxSipTransactionState_m_size type:AndroidJavaxSipTransactionState_class_()]);
    JreStrongAssignAndConsume(&AndroidJavaxSipTransactionState_CALLING, new_AndroidJavaxSipTransactionState_initWithInt_(AndroidJavaxSipTransactionState__CALLING));
    JreStrongAssignAndConsume(&AndroidJavaxSipTransactionState_TRYING, new_AndroidJavaxSipTransactionState_initWithInt_(AndroidJavaxSipTransactionState__TRYING));
    JreStrongAssignAndConsume(&AndroidJavaxSipTransactionState_PROCEEDING, new_AndroidJavaxSipTransactionState_initWithInt_(AndroidJavaxSipTransactionState__PROCEEDING));
    JreStrongAssignAndConsume(&AndroidJavaxSipTransactionState_COMPLETED, new_AndroidJavaxSipTransactionState_initWithInt_(AndroidJavaxSipTransactionState__COMPLETED));
    JreStrongAssignAndConsume(&AndroidJavaxSipTransactionState_CONFIRMED, new_AndroidJavaxSipTransactionState_initWithInt_(AndroidJavaxSipTransactionState__CONFIRMED));
    JreStrongAssignAndConsume(&AndroidJavaxSipTransactionState_TERMINATED, new_AndroidJavaxSipTransactionState_initWithInt_(AndroidJavaxSipTransactionState__TERMINATED));
    J2OBJC_SET_INITIALIZED(AndroidJavaxSipTransactionState)
  }
}

@end

void AndroidJavaxSipTransactionState_initWithInt_(AndroidJavaxSipTransactionState *self, jint transactionState) {
  NSObject_init(self);
  self->m_transactionState_ = transactionState;
  IOSObjectArray_Set(nil_chk(AndroidJavaxSipTransactionState_m_transStateArray), self->m_transactionState_, self);
}

AndroidJavaxSipTransactionState *new_AndroidJavaxSipTransactionState_initWithInt_(jint transactionState) {
  J2OBJC_NEW_IMPL(AndroidJavaxSipTransactionState, initWithInt_, transactionState)
}

AndroidJavaxSipTransactionState *create_AndroidJavaxSipTransactionState_initWithInt_(jint transactionState) {
  J2OBJC_CREATE_IMPL(AndroidJavaxSipTransactionState, initWithInt_, transactionState)
}

AndroidJavaxSipTransactionState *AndroidJavaxSipTransactionState_getObjectWithInt_(jint transactionState) {
  AndroidJavaxSipTransactionState_initialize();
  if (transactionState >= 0 && transactionState < AndroidJavaxSipTransactionState_m_size) {
    return IOSObjectArray_Get(nil_chk(AndroidJavaxSipTransactionState_m_transStateArray), transactionState);
  }
  else {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Invalid transactionState value");
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidJavaxSipTransactionState)
